{"version":3,"mappings":";yiCAMA,MAAMA,EAA+B,CACnC,UAAW,CACT,QAAS,IACT,MAAO,IACP,mBAAoB,GACxB,EACE,UAAW,CACT,WAAY,GAChB,EACE,cAAe,CACb,KAAM,GACN,gBAAiB,EACjB,iBAAkB,CACtB,EACE,MAAO,CACL,QAAS,UACT,MAAO,QACP,QAAS,UACT,KAAM,MACV,EACE,SAAU,CACR,WAAY,OACZ,YAAa,IACjB,CACA,EAEA,MAAMC,EAAkB,CACtB,aAAc,CACZ,KAAK,UAAY,KACjB,KAAK,OAAS,IAAI,IAClB,KAAK,KAAI,CACb,CAEE,MAAO,CAEL,KAAK,UAAY,SAAS,cAAc,KAAK,EAC7C,KAAK,UAAU,UAAY,kBAC3B,KAAK,UAAU,aAAa,YAAa,QAAQ,EACjD,KAAK,UAAU,aAAa,aAAc,eAAe,EACzD,SAAS,KAAK,YAAY,KAAK,SAAS,CAC5C,CAaE,KAAKC,EAAU,GAAI,CACjB,KAAM,CACJ,KAAAC,EAAOH,EAA6B,MAAM,KAC1C,MAAAI,EAAQ,GACR,QAAAC,EAAU,GACV,SAAAC,EAAWN,EAA6B,UAAU,QAClD,SAAAO,EAAW,GACX,QAAAC,EAAU,IAChB,EAAQN,EAEEO,EAAK,KAAK,WAAU,EACpBC,EAAQ,KAAK,YAAYD,EAAIN,EAAMC,EAAOC,EAASE,CAAQ,EAEjE,YAAK,OAAO,IAAIE,EAAI,CAClB,QAASC,EACT,SAAAJ,EACA,QAAAE,EACA,UAAW,IACjB,CAAK,EAED,KAAK,UAAU,YAAYE,CAAK,EAGhC,sBAAsB,IAAM,CAC1BA,EAAM,UAAU,IAAI,MAAM,CAChC,CAAK,EAGGJ,EAAW,GACb,KAAK,eAAeG,EAAIH,CAAQ,EAIlC,KAAK,cAAcF,EAAOC,CAAO,EAE1BI,CACX,CAEE,YAAYA,EAAIN,EAAMC,EAAOC,EAASE,EAAU,CAC9C,MAAMG,EAAQ,SAAS,cAAc,KAAK,EAC1CA,EAAM,UAAY,SAASP,CAAI,GAC/BO,EAAM,aAAa,gBAAiBD,CAAE,EACtCC,EAAM,aAAa,OAAQ,OAAO,EAClCA,EAAM,aAAa,YAAa,WAAW,EAE3C,MAAMC,EAAO,KAAK,QAAQR,CAAI,EAE9B,OAAAO,EAAM,UAAY;AAAA,yDACmCC,CAAI;AAAA;AAAA,kBAE3CP,EAAQ,4BAA4B,KAAK,WAAWA,CAAK,CAAC,SAAW,EAAE;AAAA,kBACvEC,EAAU,8BAA8B,KAAK,WAAWA,CAAO,CAAC,SAAW,EAAE;AAAA;AAAA,cAGjFE,EACI;AAAA;AAAA;AAAA;AAAA,cAKA,EAClB;AAAA;AAAA,gEAEgEP,EAA6B,SAAS,UAAU;AAAA;AAAA,UAKxGO,GACeG,EAAM,cAAc,cAAc,EAC1C,iBAAiB,QAAS,IAAM,KAAK,QAAQD,CAAE,CAAC,EAGpDC,CACX,CAEE,QAAQP,EAAM,CACZ,MAAMS,EAAQ,CACZ,CAACZ,EAA6B,MAAM,OAAO,EAAG,IAC9C,CAACA,EAA6B,MAAM,KAAK,EAAG,IAC5C,CAACA,EAA6B,MAAM,OAAO,EAAG,IAC9C,CAACA,EAA6B,MAAM,IAAI,EAAG,GACjD,EACI,OAAOY,EAAMT,CAAI,GAAKS,EAAMZ,EAA6B,MAAM,IAAI,CACvE,CAEE,eAAeS,EAAIH,EAAU,CAC3B,MAAMO,EAAY,KAAK,OAAO,IAAIJ,CAAE,EACpC,GAAI,CAACI,EAAW,OAEhB,MAAMC,EAAcD,EAAU,QAAQ,cAAc,qBAAqB,EAGrEC,IACFA,EAAY,MAAM,WAAa,SAASR,CAAQ,YAChDQ,EAAY,MAAM,MAChBd,EAA6B,SAAS,aAG1Ca,EAAU,UAAY,WAAW,IAAM,CACrC,KAAK,QAAQJ,CAAE,CACrB,EAAOH,CAAQ,CACf,CAME,QAAQG,EAAI,CACV,MAAMI,EAAY,KAAK,OAAO,IAAIJ,CAAE,EACpC,GAAI,CAACI,EAAW,OAEhB,KAAM,CAAE,QAAAE,EAAS,UAAAC,EAAW,QAAAR,CAAO,EAAKK,EAGpCG,GACF,aAAaA,CAAS,EAIxBD,EAAQ,UAAU,IAAI,MAAM,EAC5BA,EAAQ,UAAU,OAAO,MAAM,EAG/B,WAAW,IAAM,CACXA,EAAQ,YACVA,EAAQ,WAAW,YAAYA,CAAO,EAExC,KAAK,OAAO,OAAON,CAAE,EAGjBD,GAAW,OAAOA,GAAY,YAChCA,EAAQC,CAAE,CAElB,EAAOT,EAA6B,UAAU,UAAU,CACxD,CAKE,YAAa,CACC,MAAM,KAAK,KAAK,OAAO,MAAM,EACrC,QAAQS,GAAM,KAAK,QAAQA,CAAE,CAAC,CACtC,CAOE,OAAOA,EAAIP,EAAU,GAAI,CACvB,MAAMW,EAAY,KAAK,OAAO,IAAIJ,CAAE,EACpC,GAAI,CAACI,EAAW,OAEhB,KAAM,CAAE,MAAAT,EAAO,QAAAC,EAAS,KAAAF,CAAI,EAAKD,EAC3B,CAAE,QAAAa,CAAO,EAAKF,EAEpB,GAAIV,GAAQA,IAAS,KAAK,eAAeY,CAAO,EAAG,CACjDA,EAAQ,UAAY,SAASZ,CAAI,QACjC,MAAMQ,EAAOI,EAAQ,cAAc,aAAa,EAC5CJ,IACFA,EAAK,YAAc,KAAK,QAAQR,CAAI,EAE5C,CAEI,GAAIC,IAAU,OAAW,CACvB,MAAMa,EAAUF,EAAQ,cAAc,cAAc,EACpD,GAAIE,EACFA,EAAQ,YAAcb,UACbA,EAAO,CAChB,MAAMc,EAAUH,EAAQ,cAAc,gBAAgB,EAChDI,EAAW,SAAS,cAAc,KAAK,EAC7CA,EAAS,UAAY,cACrBA,EAAS,YAAcf,EACvBc,EAAQ,aAAaC,EAAUD,EAAQ,UAAU,CACzD,CACA,CAEI,GAAIb,IAAY,OAAW,CACzB,MAAMe,EAAYL,EAAQ,cAAc,gBAAgB,EACxD,GAAIK,EACFA,EAAU,YAAcf,UACfA,EAAS,CAClB,MAAMa,EAAUH,EAAQ,cAAc,gBAAgB,EAChDM,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,UAAY,gBACvBA,EAAW,YAAchB,EACzBa,EAAQ,YAAYG,CAAU,CACtC,CACA,CACA,CAEE,eAAeN,EAAS,CAEtB,OADgBA,EAAQ,UAAU,MAAM,GAAG,EAEjC,KAAKO,GACX,CACEtB,EAA6B,MAAM,QACnCA,EAA6B,MAAM,MACnCA,EAA6B,MAAM,QACnCA,EAA6B,MAAM,IAC7C,EAAU,SAASsB,CAAG,CACtB,GAAWtB,EAA6B,MAAM,IAE9C,CAEE,cAAcI,EAAOC,EAAS,CAC5B,MAAMkB,EAAe,CAACnB,EAAOC,CAAO,EAAE,OAAO,OAAO,EAAE,KAAK,IAAI,EAC/D,GAAIkB,EAAc,CAEhB,MAAMC,EAAa,SAAS,eAAe,kBAAkB,EACzDA,IACFA,EAAW,YAAcD,EAEzB,WAAW,IAAM,CACfC,EAAW,YAAc,EACnC,EAAWxB,EAA6B,UAAU,kBAAkB,EAEpE,CACA,CAEE,YAAa,CACX,MAAO,SAAS,KAAK,IAAG,CAAE,IAAI,KAAK,SAAS,SAASA,EAA6B,cAAc,IAAI,EAAE,OAAOA,EAA6B,cAAc,gBAAiBA,EAA6B,cAAc,gBAAgB,CAAC,EACzO,CAEE,WAAWyB,EAAM,CACf,MAAMC,EAAM,SAAS,cAAc,KAAK,EACxC,OAAAA,EAAI,YAAcD,EACXC,EAAI,SACf,CAKE,QAAQtB,EAAOC,EAASH,EAAU,GAAI,CACpC,OAAO,KAAK,KAAK,CACf,GAAGA,EACH,KAAMF,EAA6B,MAAM,QACzC,MAAAI,EACA,QAAAC,CACN,CAAK,CACL,CAEE,MAAMD,EAAOC,EAASH,EAAU,GAAI,CAClC,OAAO,KAAK,KAAK,CACf,GAAGA,EACH,KAAMF,EAA6B,MAAM,MACzC,MAAAI,EACA,QAAAC,EACA,SACEH,EAAQ,UAAYF,EAA6B,UAAU,KACnE,CAAK,CACL,CAEE,QAAQI,EAAOC,EAASH,EAAU,GAAI,CACpC,OAAO,KAAK,KAAK,CACf,GAAGA,EACH,KAAMF,EAA6B,MAAM,QACzC,MAAAI,EACA,QAAAC,CACN,CAAK,CACL,CAEE,KAAKD,EAAOC,EAASH,EAAU,GAAI,CACjC,OAAO,KAAK,KAAK,CACf,GAAGA,EACH,KAAMF,EAA6B,MAAM,KACzC,MAAAI,EACA,QAAAC,CACN,CAAK,CACL,CACA,CAGA,OAAO,kBAAoB,IAAIJ,GCtU/B,MAAM0B,CAAa,CACjB,YAAY,CACV,MAAAvB,EAAQ,GACR,QAAAc,EAAU,GACV,OAAAU,EAAS,GACT,QAAApB,EAAU,KACV,gBAAAqB,EAAkB,GAClB,cAAAC,EAAgB,EACpB,EAAM,GAAI,CACN,KAAK,MAAQ1B,EACb,KAAK,QAAUc,EACf,KAAK,OAASU,EACd,KAAK,QAAUpB,EACf,KAAK,gBAAkBqB,EACvB,KAAK,cAAgBC,EACrB,KAAK,OAAS,GACd,KAAK,QAAU,KAGf,MAAMC,EAAU,GACVC,EAAuB,EAC7B,KAAK,GAAK,SAAS,KAAK,IAAG,CAAE,IAAI,KAAK,OAAM,EAAG,SAASD,CAAO,EAAE,UAAU,EAAGC,EAAuB,CAAC,CAAC,GAEvG,KAAK,OAAM,EACX,KAAK,qBAAoB,CAC7B,CAEE,QAAS,CAEP,KAAK,QAAU,SAAS,cAAc,KAAK,EAC3C,KAAK,QAAQ,GAAK,KAAK,GACvB,KAAK,QAAQ,UAAY,iBACzB,KAAK,QAAQ,aAAa,OAAQ,QAAQ,EAC1C,KAAK,QAAQ,aAAa,aAAc,MAAM,EAC9C,KAAK,QAAQ,aAAa,kBAAmB,GAAG,KAAK,EAAE,QAAQ,EAC/D,KAAK,QAAQ,MAAM,QAAU,OAE7B,KAAK,QAAQ,MAAQ,GAErB,KAAK,QAAQ,UAAY;AAAA;AAAA;AAAA,8BAGC,KAAK,EAAE,+BAA+B,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMxD,KAAK,OAAO;AAAA;AAAA,kBAGhB,KAAK,OACD;AAAA;AAAA,0BAEI,KAAK,MAAM;AAAA;AAAA,kBAGf,EACtB;AAAA;AAAA,UAII,SAAS,KAAK,YAAY,KAAK,OAAO,CAC1C,CAEE,sBAAuB,CAErB,MAAMC,EAAW,KAAK,QAAQ,cAAc,cAAc,EACtDA,GACFA,EAAS,iBAAiB,QAAS,IAAM,KAAK,MAAK,CAAE,EAInD,KAAK,iBACP,KAAK,QAAQ,iBAAiB,QAASC,GAAK,CACtCA,EAAE,SAAW,KAAK,SACpB,KAAK,MAAK,CAEpB,CAAO,EAIC,KAAK,gBACP,KAAK,eAAiBA,GAAK,CACrBA,EAAE,MAAQ,UAAY,KAAK,QAC7B,KAAK,MAAK,CAEpB,EACM,SAAS,iBAAiB,UAAW,KAAK,cAAc,EAE9D,CAEE,MAAO,CACL,GAAI,KAAK,OAAQ,OAYjB,GAVA,KAAK,OAAS,GAGd,KAAK,QAAQ,MAAQ,GAGrB,KAAK,QAAQ,MAAM,QAAU,OAGF,SAAS,KAAK,UAAU,SAAS,mBAAmB,EACvD,CAEtB,KAAK,QAAQ,MAAM,cAAgB,OAEnC,MAAMC,EAAc,KAAK,QAAQ,cAAc,eAAe,EAC1DA,IACFA,EAAY,MAAM,cAAgB,OAE1C,CAGI,KAAK,cAAc,EAAI,EAGvB,sBAAsB,IAAM,CAC1B,KAAK,QAAQ,UAAU,IAAI,SAAS,CAC1C,CAAK,EAGD,WAAW,IAAM,CACf,MAAMC,EAAiB,KAAK,QAAQ,cAClC,0EACR,EACUA,GACFA,EAAe,MAAK,CAE5B,EAAO,GAAG,EAGN,SAAS,KAAK,MAAM,SAAW,QACnC,CAEE,OAAQ,CACN,GAAI,CAAC,KAAK,OAAQ,OAElB,KAAK,OAAS,GACd,KAAK,QAAQ,UAAU,OAAO,SAAS,EAGvC,KAAK,QAAQ,MAAQ,GAGrB,KAAK,QAAQ,MAAM,cAAgB,GACnC,MAAMD,EAAc,KAAK,QAAQ,cAAc,eAAe,EAC1DA,IACFA,EAAY,MAAM,cAAgB,IAIpC,KAAK,cAAc,EAAK,EAIxB,WAAW,IAAM,CACV,KAAK,SAER,KAAK,QAAQ,MAAM,QAAU,OAErC,EAN8B,GAMN,EAGpB,SAAS,KAAK,MAAM,SAAW,GAG3B,KAAK,SAAW,OAAO,KAAK,SAAY,YAC1C,KAAK,QAAO,CAElB,CAEE,cAAcE,EAAO,CAEE,MAAM,KAAK,SAAS,KAAK,QAAQ,EACzC,QAAQC,GAAS,CACxBA,IAAU,KAAK,SACf,CAACA,EAAM,UAAU,SAAS,oBAAoB,GAC9C,CAACA,EAAM,UAAU,SAAS,sBAAsB,GAChD,CAACA,EAAM,UAAU,SAAS,uBAAuB,IACnDA,EAAM,MAAQD,EAEtB,CAAK,CACL,CAEE,SAAU,CACR,KAAK,MAAK,EAEN,KAAK,gBACP,SAAS,oBAAoB,UAAW,KAAK,cAAc,EAGzD,KAAK,SAAW,KAAK,QAAQ,YAC/B,KAAK,QAAQ,WAAW,YAAY,KAAK,OAAO,EAGlD,KAAK,QAAU,IACnB,CAKE,OAAO,uBAAwB,CAEN,SAAS,iBAAiB,8CAA8C,EAChF,QAAQE,GAAS,EAE1BA,EAAM,MAAM,UAAY,QAAU,CAACA,EAAM,UAAU,SAAS,SAAS,KACvEA,EAAM,OAAM,EACZC,EAAO,KAAK,eAAgB,6BAA8BD,EAAM,EAAE,EAE1E,CAAK,EAGsB,SAAS,iBAAiB,iBAAiB,EACnD,QAAQE,GAAY,CAEjC,MAAMC,EAAoBD,EAAS,cAAc,yCAAyC,EACpFE,EAAiBF,EAAS,QAAQ,gBAAgB,GAAKA,EAAS,cAAc,gBAAgB,EAEhG,CAACC,GAAqB,CAACC,IACzBF,EAAS,OAAM,EACfD,EAAO,KAAK,eAAgB,oCAAoC,EAExE,CAAK,EAGD,MAAMI,EAAkB,SAAS,eAAe,kBAAkB,EAC9DA,IAEgBA,EAAgB,MAAM,UAAY,QACnCA,EAAgB,UAAU,SAAS,MAAM,GACzCA,EAAgB,UAAU,SAAS,SAAS,IAG3DA,EAAgB,OAAM,EACtBJ,EAAO,KAAK,eAAgB,sCAAsC,IAK9C,SAAS,iBAAiB,kDAAkD,EACpF,QAAQK,GAAU,CAC5B,CAACA,EAAO,QAAQ,iBAAiB,GAAK,CAACA,EAAO,QAAQ,gBAAgB,IACxEA,EAAO,OAAM,EACbL,EAAO,KAAK,eAAgB,kCAAkC,EAEtE,CAAK,EAEsB,SAAS,iBAAiB,4CAA4C,EAC9E,QAAQM,GAAQ,CACzB,CAACA,EAAK,QAAQ,eAAe,GAAK,CAACA,EAAK,QAAQ,gBAAgB,IAClEA,EAAK,OAAM,EACXN,EAAO,KAAK,eAAgB,gCAAgC,EAEpE,CAAK,CACL,CAKE,OAAO,iBAAiBO,EAAS,CAC/B,MAAMR,EAAQ,SAAS,eAAeQ,CAAO,EAC7C,OAAIR,GACFA,EAAM,OAAM,EACZC,EAAO,KAAK,eAAgB,yBAA0BO,CAAO,EACtD,IAEF,EACX,CAME,OAAO,wBAAyB,CAC9BP,EAAO,KAAK,eAAgB,mCAAmC,EAG1C,SAAS,iBAAiB,iBAAiB,EACnD,QAAQC,GAAY,CACbA,EAAS,MAAM,UAAY,QAC5BA,EAAS,UAAU,SAAS,MAAM,GAClCA,EAAS,UAAU,SAAS,SAAS,IAGpDA,EAAS,OAAM,EACfD,EAAO,KAAK,eAAgB,qCAAqC,EAEzE,CAAK,EAGD,MAAMI,EAAkB,SAAS,eAAe,kBAAkB,EAC9DA,IACeA,EAAgB,MAAM,UAAY,QACnCA,EAAgB,UAAU,SAAS,MAAM,GACzCA,EAAgB,UAAU,SAAS,SAAS,IAG1DA,EAAgB,OAAM,EACtBJ,EAAO,KAAK,eAAgB,uCAAuC,IAKpD,SAAS,iBAAiB,eAAe,EACjD,QAAQK,GAAU,CACHA,EAAO,QAAQ,yCAAyC,GACzDA,EAAO,QAAQ,wCAAwC,GACvDA,EAAO,QAAQ,OAAO,GACtBA,EAAO,QAAQ,UAAU,IAG9CA,EAAO,OAAM,EACbL,EAAO,KAAK,eAAgB,mCAAmC,EAEvE,CAAK,EAGiB,SAAS,iBAAiB,aAAa,EAC/C,QAAQM,GAAQ,CACAA,EAAK,QAAQ,eAAe,GAC7BA,EAAK,QAAQ,yCAAyC,GACtDA,EAAK,QAAQ,wCAAwC,GACrDA,EAAK,QAAQ,OAAO,GACpBA,EAAK,QAAQ,UAAU,IAG5CA,EAAK,OAAM,EACXN,EAAO,KAAK,eAAgB,iCAAiC,EAErE,CAAK,EAG0B,SAAS,iBAAiB,gBAAgB,EAClD,QAAQD,GAAS,CAChBA,EAAM,MAAM,UAAY,QACzBA,EAAM,UAAU,SAAS,MAAM,GAC/BA,EAAM,UAAU,SAAS,SAAS,IAGjDA,EAAM,OAAM,EACZC,EAAO,KAAK,eAAgB,wCAAyCD,EAAM,EAAE,EAErF,CAAK,EAEDC,EAAO,KAAK,eAAgB,oCAAoC,CACpE,CAGE,SAASpC,EAAO,CACd,KAAK,MAAQA,EACb,MAAMa,EAAU,KAAK,QAAQ,cAAc,cAAc,EACrDA,IACFA,EAAQ,YAAcb,EAE5B,CAEE,WAAWc,EAAS,CAClB,KAAK,QAAUA,EACf,MAAM8B,EAAS,KAAK,QAAQ,cAAc,aAAa,EACnDA,IACFA,EAAO,UAAY9B,EAEzB,CAEE,UAAUU,EAAQ,CAChB,KAAK,OAASA,EACd,IAAIqB,EAAW,KAAK,QAAQ,cAAc,eAAe,EAErDrB,GACGqB,IACHA,EAAW,SAAS,cAAc,KAAK,EACvCA,EAAS,UAAY,eACrB,KAAK,QAAQ,cAAc,eAAe,EAAE,YAAYA,CAAQ,GAElEA,EAAS,UAAYrB,GACZqB,GACTA,EAAS,OAAM,CAErB,CACA,CAMI,OAAO,OAAW,MACpB,OAAO,aAAetB,+kCCvXlBuB,EAAgB,CACpB,gBAAiB,EACjB,sBAAuB,GACvB,iBAAkB,GAClB,wBAAyB,GACzB,cAAe,EACjB,EAEA,MAAMC,EAAgB,CACpB,aAAc,CACZ,KAAK,oBAAsB,IAAI,IAC/B,KAAK,gBAAkB,IAAI,IAC3B,KAAK,oBAAsB,IAAI,IAC/B,KAAK,iBAAmB,IAAI,IAE5B,KAAK,oBAAmB,EACxB,KAAK,qBAAoB,EACzB,KAAK,0BAAyB,CAClC,CAKE,qBAAsB,CAEpB,KAAK,oBAAoB,IAAI,OAAQ,CACnC,KAAM,kDACN,OAAQ,CACN,MAAO,CAAC,WAAY,WAAY,UAAU,EAC1C,MAAO,CAAC,WAAY,WAAY,UAAU,EAC1C,MAAO,CAAC,UAAW,UAAW,UAAW,SAAS,EAClD,OAAQ,CAAC,WAAY,WAAY,WAAY,UAAU,CAC/D,EACM,UAAW,CACT,WAAY,8CACZ,UAAW,kCACX,WAAY,oCACpB,CACA,CAAK,EAGD,KAAK,oBAAoB,IAAI,OAAQ,CACnC,KAAM,oCACN,UAAW,CACT,yCACA,8BACA,2CACA,kCACA,+CACA,4BACA,qCACA,sDACR,CACA,CAAK,EAGD,KAAK,oBAAoB,IAAI,OAAQ,CACnC,KAAM,sCACN,OAAQ,CACN,mCACA,mCACA,6BACA,qCACR,CACA,CAAK,CACL,CAKE,sBAAuB,CAErB,KAAK,gBAAgB,IAAI,qBAAsB,CAC7C,KAAM,YACN,KAAM,qBACN,MAAO,CACL,CACE,GAAI,0BACJ,KAAM,0BACN,YACE,+DACF,OAAQ,KAAK,uBAAsB,EACnC,UAAW,KAAK,oBAAmB,CAC7C,EACQ,CACE,GAAI,uBACJ,KAAM,8BACN,YACE,4DACF,UAAW,KAAK,wBAAuB,CACjD,EACQ,CACE,GAAI,wBACJ,KAAM,wBACN,YAAa,oDACb,MAAO,CACL,sBACA,wBACA,sBACZ,CACA,CACA,CACA,CAAK,EAGD,KAAK,gBAAgB,IAAI,sBAAuB,CAC9C,KAAM,YACN,KAAM,4BACN,SAAU,CACR,CACE,GAAI,mBACJ,KAAM,qCACN,YACE,gEACF,SAAU,YACV,aAAc,CACZ,kBACA,kBACA,0BACZ,EACU,OAAQ,KAAK,mBAAkB,CACzC,EACQ,CACE,GAAI,qBACJ,KAAM,gCACN,YAAa,+CACb,SAAU,YACV,OAAQ,CAAC,WAAY,oBAAqB,eAAe,EACzD,OAAQ,KAAK,0BAAyB,CAChD,CACA,CACA,CAAK,EAGD,KAAK,gBAAgB,IAAI,gBAAiB,CACxC,KAAM,OACN,KAAM,2BACN,WAAY,CACV,CACE,GAAI,gBACJ,KAAM,4BACN,OAAQ,kDACR,MAAO,CACL,aACA,YACA,sBACA,cACZ,EACU,OAAQ,KAAK,mBAAkB,CACzC,EACQ,CACE,GAAI,oBACJ,KAAM,yBACN,OACE,2EACF,WAAY,KAAK,wBAAuB,CAClD,CACA,CACA,CAAK,CACL,CAKE,2BAA4B,CAE1B,KAAK,oBAAoB,IAAI,aAAc,CACzC,CACE,GAAI,oBACJ,KAAM,8BACN,YACE,4EACF,KAAM,gBACN,UAAW,CAAC,kBAAmB,sBAAsB,EACrD,YAAa,CACX,WAAY,wCACZ,OAAQ,2CACR,KAAM,6CACN,QAAS,kDACnB,CACA,EACM,CACE,GAAI,iBACJ,KAAM,8BACN,YACE,gEACF,KAAM,gBACN,OAAQ,CAAC,sBAAuB,oBAAqB,eAAe,CAC5E,CACA,CAAK,EAGD,KAAK,oBAAoB,IAAI,cAAe,CAC1C,CACE,GAAI,uBACJ,KAAM,6BACN,YACE,iEACF,KAAM,gBACN,UAAW,eACX,MAAO,CACL,eACA,WACA,qBACA,YACA,UACV,EACQ,QAAS,CACP,gDACA,6CACA,2CACA,mCACV,CACA,EACM,CACE,GAAI,wBACJ,KAAM,gCACN,YAAa,2DACb,KAAM,gBACN,YAAa,0BACb,aAAc,CACZ,qBACA,qBACA,kBACV,CACA,CACA,CAAK,EAGD,KAAK,oBAAoB,IAAI,cAAe,CAC1C,CACE,GAAI,mBACJ,KAAM,sBACN,YAAa,oDACb,KAAM,gBACN,OAAQ,6CACR,MAAO,CAAC,YAAa,YAAa,oBAAqB,OAAO,EAC9D,OAAQ,CACN,eACA,+BACA,qBACV,CACA,EACM,CACE,GAAI,mBACJ,KAAM,6BACN,YACE,sEACF,KAAM,gBACN,MAAO,oDACP,SAAU,uCAClB,CACA,CAAK,EAGD,KAAK,oBAAoB,IAAI,mBAAoB,CAC/C,CACE,GAAI,qBACJ,QAAS,cACT,KAAM,4BACN,YAAa,2DACb,OAAQ,CAAC,aAAc,qBAAsB,aAAa,EAC1D,MAAO,CACL,uBACA,iBACA,yBACV,CACA,EACM,CACE,GAAI,wBACJ,QAAS,wBACT,KAAM,2BACN,YAAa,8CACb,OAAQ,CAAC,gBAAiB,WAAY,WAAY,oBAAoB,EACtE,OAAQ,CAAC,iBAAkB,kBAAmB,kBAAkB,CACxE,EACM,CACE,GAAI,wBACJ,QAAS,iBACT,KAAM,wBACN,YAAa,8CACb,OAAQ,CACN,WACA,kBACA,mBACA,mBACV,EACQ,YAAa,6CACrB,CACA,CAAK,CACL,CAKE,mBAAmBjD,EAAU,GAAI,CAC/B,KAAM,CACJ,QAAAkD,EAAU,mBACV,WAAAC,EAAa,OACb,SAAA/C,EAAW4C,EAAc,wBACzB,SAAAI,EAAW,gBACX,SAAAC,EAAW,oBACX,UAAAC,EAAY,CAAC,MAAM,CACzB,EAAQtD,EAEJ,MAAO,CACL,MAAO,cAAc,KAAK,iBAAiBoD,CAAQ,CAAC,GACpD,QAAAF,EACA,WAAAC,EACA,SAAU,GAAG/C,CAAQ,WAGrB,WAAY,KAAK,sBAAsBgD,EAAUD,CAAU,EAG3D,UAAW,KAAK,sBAAsBG,EAAWH,CAAU,EAG3D,UAAW,CACT,OAAQ,KAAK,kBAAkBC,EAAUJ,EAAc,eAAe,EACtE,aAAc,KAAK,gBACjBI,EACAJ,EAAc,qBACxB,EACQ,aAAc,KAAK,gBACjBK,EACAjD,EAAW4C,EAAc,aACnC,EACQ,QAAS,KAAK,mBACZI,EACAJ,EAAc,gBACxB,CACA,EAGM,UAAW,KAAK,aAAaK,CAAQ,EACrC,UAAW,KAAK,uBAAuBD,CAAQ,EAG/C,WAAY,CACV,UAAW,KAAK,uBAAuBC,CAAQ,EAC/C,UAAW,KAAK,uBAAuBD,CAAQ,EAC/C,OAAQ,KAAK,oBAAoBC,CAAQ,CACjD,EAGM,gBAAiB,KAAK,mBAAmBF,CAAU,EAGnD,WAAY,KAAK,uBAAuBC,CAAQ,EAGhD,WAAY,KAAK,uBAAuBA,EAAUD,CAAU,CAClE,CACA,CAKE,iBAAiBC,EAAU,CASzB,MARe,CACb,gBAAiB,gCACjB,mBAAoB,4BACpB,qBAAsB,6BACtB,gBAAiB,8BACjB,aAAc,qCACd,eAAgB,kCACtB,EACkBA,CAAQ,GAAK,uBAC/B,CAKE,sBAAsBE,EAAWH,EAAY,CAC3C,OAAOG,EAAU,IAAIC,GAAY,CAC/B,MAAMC,EAAY,KAAK,oBAAoB,IAAID,CAAQ,EACvD,OAAIC,GAAaA,EAAU,OAAOL,CAAU,EACnC,CACL,SAAAI,EACA,MAAOC,EAAU,OAAOL,CAAU,EAClC,YAAaK,EAAU,WACjC,EAEa,CAAE,SAAAD,EAAU,MAAO,GAAI,YAAa,oBAAoB,CACrE,CAAK,CACL,CAKE,kBAAkBH,EAAUhD,EAAU,CASpC,MARmB,CACjB,gBAAiB,eAAeA,CAAQ,oJACxC,mBAAoB,qBAAqBA,CAAQ,kHACjD,qBAAsB,wBAAwBA,CAAQ,qJACtD,gBAAiB,uBAAuBA,CAAQ,+GAChD,aAAc,uBAAuBA,CAAQ,kIAC7C,eAAgB,uBAAuBA,CAAQ,mHACrD,EAEiBgD,CAAQ,GACnB,sBAAsBhD,CAAQ,qGAEpC,CAKE,gBAAgBgD,EAAUhD,EAAU,CAClC,MAAO,mBAAmB,KAAK,iBAAiBgD,CAAQ,CAAC,KAAKhD,CAAQ,iGAC1E,CAKE,gBAAgBiD,EAAUjD,EAAU,CAQlC,MAPmB,CACjB,oBAAqB,qCAAqCA,CAAQ,2IAClE,uBAAwB,+BAA+BA,CAAQ,oIAC/D,iBAAkB,0BAA0BA,CAAQ,4IACpD,kBAAmB,gCAAgCA,CAAQ,yHAC3D,gBAAiB,6BAA6BA,CAAQ,2FAC5D,EAEiBiD,CAAQ,GACnB,gCAAgCjD,CAAQ,uHAE9C,CAKE,mBAAmBgD,EAAUhD,EAAU,CASrC,MARmB,CACjB,gBAAiB,gBAAgBA,CAAQ,oHACzC,mBAAoB,qBAAqBA,CAAQ,yGACjD,qBAAsB,+BAA+BA,CAAQ,iGAC7D,gBAAiB,wBAAwBA,CAAQ,sGACjD,aAAc,2BAA2BA,CAAQ,oFACjD,eAAgB,6BAA6BA,CAAQ,gGAC3D,EAEiBgD,CAAQ,GACnB,8BAA8BhD,CAAQ,oFAE5C,CAKE,aAAaiD,EAAU,CAmCrB,MAlCkB,CAChB,oBAAqB,CACnB,oBACA,kBACA,sBACA,wBACA,cACR,EACM,uBAAwB,CACtB,aACA,wBACA,mBACA,UACA,OACR,EACM,iBAAkB,CAChB,kBACA,sBACA,mCACA,cACR,EACM,kBAAmB,CACjB,4BACA,yBACA,gBACA,kBACR,EACM,gBAAiB,CACf,qBACA,2BACA,QACA,oBACR,CACA,EAEgBA,CAAQ,GAAK,CACrB,oBACA,kBACA,aACA,mBACR,CAEA,CAKE,uBAAuBD,EAAU,CAuC/B,MAtCkB,CAChB,gBAAiB,CACf,gCACA,yCACA,gDACA,+CACR,EACM,mBAAoB,CAClB,gDACA,6BACA,4BACA,+BACR,EACM,qBAAsB,CACpB,+BACA,mCACA,6BACA,uCACR,EACM,gBAAiB,CACf,2BACA,iCACA,sCACA,qCACR,EACM,aAAc,CACZ,iCACA,kCACA,sCACA,kCACR,EACM,eAAgB,CACd,2BACA,uCACA,yCACA,kCACR,CACA,EAEgBA,CAAQ,GAAK,CACrB,8BACA,kBACA,gBACA,cACR,CAEA,CAKE,uBAAuBC,EAAU,CAiC/B,MAhCoB,CAClB,oBAAqB,CACnB,8BACA,0BACA,+BACA,yBACR,EACM,uBAAwB,CACtB,2BACA,4BACA,8BACA,+BACR,EACM,iBAAkB,CAChB,0BACA,0BACA,6BACA,sBACR,EACM,kBAAmB,CACjB,+BACA,kCACA,2BACA,oBACR,EACM,gBAAiB,CACf,8BACA,4BACA,gCACA,sBACR,CACA,EAEkBA,CAAQ,GAAK,CACvB,wBACA,eACA,gBACA,iBACR,CAEA,CAKE,uBAAuBD,EAAU,CAc/B,MAboB,CAClB,gBACE,6FACF,mBACE,wEACF,qBACE,oFACF,gBACE,+DACF,aACE,+DACF,eAAgB,wDACtB,EAEkBA,CAAQ,GACpB,2EAEN,CAKE,oBAAoBC,EAAU,CA2C5B,MA1CgB,CACd,oBAAqB,CACnB,oBAAqB,CACnB,4BACA,wBACA,kCACA,qBACV,EACQ,oBAAqB,CACnB,0BACA,qBACA,yBACA,2BACV,EACQ,cAAe,CACb,6BACA,+BACA,kCACA,4BACV,CACA,EACM,uBAAwB,CACtB,oBAAqB,CACnB,oCACA,wBACA,6BACA,4BACV,EACQ,cAAe,CACb,mBACA,0BACA,sCACA,uBACV,EACQ,kBAAmB,CACjB,yBACA,4BACA,uBACA,2BACV,CACA,CACA,EAEcA,CAAQ,GAAK,CACnB,cAAe,CACb,8BACA,oBACA,oBACA,oBACV,EACQ,WAAY,CACV,wBACA,iBACA,eACA,eACV,EACQ,cAAe,CACb,0BACA,gBACA,uBACA,mBACV,CACA,CAEA,CAKE,mBAAmBF,EAAY,CAC7B,MAAMM,EAAa,CACjB,MAAO,CACL,QAAS,CACP,wBACA,yBACA,oBACA,uBACV,EACQ,QAAS,CACP,eACA,sBACA,uBACA,uBACV,EACQ,QAAS,CACP,WACA,uBACA,gBACA,oBACV,CACA,EACM,MAAO,CACL,QAAS,CACP,6BACA,wBACA,wBACA,+BACV,EACQ,QAAS,CACP,oBACA,oBACA,qBACA,kBACV,EACQ,QAAS,CACP,kBACA,iBACA,yBACA,cACV,CACA,EACM,MAAO,CACL,QAAS,CACP,yBACA,6BACA,wBACA,uBACV,EACQ,QAAS,CACP,uBACA,yBACA,yBACA,mBACV,EACQ,QAAS,CACP,oBACA,gBACA,qBACA,iBACV,CACA,EACM,OAAQ,CACN,QAAS,CACP,oBACA,sBACA,qBACA,qBACV,EACQ,QAAS,CACP,0BACA,4BACA,2BACA,yBACV,EACQ,QAAS,CACP,uBACA,kBACA,mBACA,sBACV,CACA,CACA,EACI,OAAOA,EAAWN,CAAU,GAAKM,EAAW,KAAK,CACrD,CAKE,uBAAuBL,EAAU,CAuC/B,MAtCmB,CACjB,gBAAiB,CACf,2DACA,mEACA,gEACA,6DACR,EACM,mBAAoB,CAClB,wDACA,2DACA,+CACA,uCACR,EACM,qBAAsB,CACpB,8DACA,8DACA,4DACA,iDACR,EACM,gBAAiB,CACf,sEACA,+DACA,mDACA,2DACR,EACM,aAAc,CACZ,6DACA,kEACA,oDACA,oDACR,EACM,eAAgB,CACd,sDACA,uDACA,yDACA,0CACR,CACA,EAEiBA,CAAQ,GAAK,CACtB,0CACA,oDACA,qDACA,iDACR,CAEA,CAKE,uBAAuBA,EAAUD,EAAY,CAwC3C,MAAMO,EAvCgB,CACpB,gBAAiB,CACf,kEACA,uDACA,+DACA,+DACR,EACM,mBAAoB,CAClB,kEACA,8DACA,+DACA,+DACR,EACM,qBAAsB,CACpB,oEACA,kDACA,2DACA,8DACR,EACM,gBAAiB,CACf,6CACA,mDACA,oDACA,qDAC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O,CACL,6BACA,gCACA,wBACA,uBACR,EACM,YAAa,CACX,2BACA,+BACA,iCACR,EACM,iBAAkB,CAChB,qCACA,mCACA,6BACR,CACA,CAAK,EAGD,KAAK,YAAY,IAAI,kBAAmB,CACtC,KAAM,oCACN,QAAS,qDACT,MAAO,CACL,sBACA,2BACA,sBACA,wBACR,EACM,YAAa,CACX,4BACA,8BACA,2BACR,EACM,iBAAkB,CAChB,wCACA,kCACA,iCACR,CACA,CAAK,EAGD,KAAK,YAAY,IAAI,kBAAmB,CACtC,KAAM,6BACN,QAAS,uCACT,MAAO,CACL,qBACA,6BACA,gCACA,sBACR,EACM,YAAa,CACX,+BACA,yBACA,yBACR,EACM,iBAAkB,CAChB,4BACA,8BACA,4BACR,CACA,CAAK,CACL,CAKE,kBAAmB,CAEjB,KAAK,YAAY,IAAI,yBAA0B,CAC7C,MAAO,0CACP,WAAY,eACZ,SAAUD,EAAc,UAAU,iBAClC,UAAW,CACT,qBACA,iBACA,2BACR,EAEM,UAAW,CACT,CACE,KAAMA,EAAc,iBAAiB,OACrC,MAAO,mBACP,YAAa,gDACb,SACE,+DACF,UAAW,CACT,4CACA,sCACA,0CACZ,CACA,EACQ,CACE,KAAMA,EAAc,iBAAiB,OACrC,MAAO,sBACP,YAAa,kCACb,SAAU,0CACV,UAAW,CACT,mDACA,sCACA,8CACZ,CACA,EACQ,CACE,KAAMA,EAAc,iBAAiB,OACrC,MAAO,kBACP,YAAa,kCACb,SAAU,sCACV,UAAW,CACT,+CACA,2CACA,+CACZ,CACA,EACQ,CACE,KAAMA,EAAc,iBAAiB,OACrC,MAAO,wBACP,YAAa,oCACb,SAAU,2CACV,UAAW,CACT,kDACA,4CACA,8CACZ,CACA,CACA,EAEM,WAAY,CACV,UAAW,CACT,4BACA,gCACA,oBACV,EACQ,UAAW,CACT,uBACA,+BACA,kBACV,CACA,EAEM,WAAY,CACV,iCACA,kDACA,yDACR,CACA,CAAK,EAGD,KAAK,YAAY,IAAI,gCAAiC,CACpD,MAAO,yCACP,WAAY,WACZ,SAAUA,EAAc,UAAU,iBAClC,UAAW,CACT,qBACA,6BACA,mBACR,EAEM,MAAO,CACL,SAAU,4DACV,aAAc,CACZ,CACE,KAAM,iBACN,SAAU,CAAC,UAAW,oBAAqB,eAAe,CACtE,EACU,CACE,KAAM,mBACN,SAAU,CAAC,aAAc,UAAW,kBAAkB,CAClE,EACU,CACE,KAAM,mBACN,SAAU,CAAC,aAAc,UAAW,kBAAkB,CAClE,EACU,CACE,KAAM,cACN,SAAU,CAAC,kBAAmB,eAAgB,KAAK,CAC/D,EACU,CACE,KAAM,iBACN,SAAU,CACR,iBACA,kBACA,sBACd,CACA,EACU,CACE,KAAM,aACN,SAAU,CACR,sBACA,cACA,mBACd,CACA,CACA,CACA,EAEM,OAAQ,CACN,CACE,MAAO,uBACP,SAAUA,EAAc,UAAU,cAClC,SAAU,sDACV,YAAa,sCACvB,EACQ,CACE,MAAO,0BACP,SAAUA,EAAc,UAAU,eAClC,SACE,kEACF,YAAa,oCACvB,EACQ,CACE,MAAO,gCACP,SAAUA,EAAc,UAAU,aAClC,SAAU,wDACV,YAAa,0BACvB,EACQ,CACE,MAAO,oBACP,SAAUA,EAAc,UAAU,cAClC,SAAU,sDACV,YAAa,0BACvB,CACA,CACA,CAAK,CACL,CAKE,wBAAyB,CACvB,KAAK,mBAAmB,IAAI,qBAAsB,CAChD,KAAM,+BACN,QAAS,iDACT,SAAU,CACR,kCACA,gCACA,yBACA,4BACR,EACM,YAAa,kCACnB,CAAK,EAED,KAAK,mBAAmB,IAAI,qBAAsB,CAChD,KAAM,kCACN,QAAS,uDACT,SAAU,CACR,0CACA,gCACA,mCACA,yCACR,EACM,WAAY,KAAK,2BAA0B,CACjD,CAAK,EAED,KAAK,mBAAmB,IAAI,yBAA0B,CACpD,KAAM,qCACN,QAAS,yCACT,SAAU,CACR,mCACA,mCACA,8BACA,8BACR,EACM,WAAY,CACV,2BACA,kCACA,sCACR,CACA,CAAK,CACL,CAKE,qBAAsB,CAEpB,KAAK,kBAAkB,IAAI,mBAAoB,CAC7C,KAAM,+BACN,QAAS,+DAET,WAAY,CACV,CACE,KAAM,+BACN,YAAa,iDACb,OAAQA,EAAc,mBAAmB,cACzC,SAAU,CACR,oBACA,4BACA,mBACZ,CACA,EACQ,CACE,KAAM,6BACN,YAAa,oDACb,OAAQA,EAAc,mBAAmB,kBACzC,SAAU,CACR,mBACA,iBACA,qBACZ,CACA,EACQ,CACE,KAAM,iCACN,YAAa,4CACb,OAAQA,EAAc,mBAAmB,cACzC,SAAU,CACR,wBACA,sBACA,oBACZ,CACA,EACQ,CACE,KAAM,oBACN,YAAa,2CACb,OAAQA,EAAc,mBAAmB,cACzC,SAAU,CACR,iBACA,uBACA,mBACZ,CACA,CACA,EAEM,OAAQ,KAAK,sBAAqB,CACxC,CAAK,EAGD,KAAK,kBAAkB,IAAI,qBAAsB,CAC/C,KAAM,2CACN,QACE,oEAEF,MAAO,CACL,CACE,KAAM,iCACN,YACE,6DACF,SAAU,2DACV,aAAc,CACZ,2BACA,2BACA,wBACZ,EACU,UAAWA,EAAc,iBAAiB,cAC1C,WACE,mEACZ,EACQ,CACE,KAAM,0BACN,YACE,wEACF,YAAa,2CACb,YAAa,GAAGA,EAAc,UAAU,iBAAiB,mBACzD,SACE,2EACZ,CACA,CACA,CAAK,EAGD,KAAK,kBAAkB,IAAI,kBAAmB,CAC5C,KAAM,sCACN,QAAS,2DAET,QAAS,CACP,CACE,KAAM,+BACN,QACE,iEACF,SAAU,4CACV,QAAS,4CACnB,EACQ,CACE,KAAM,oCACN,QAAS,iDACT,SACE,mEACF,OAAQ,iDAClB,CACA,CACA,CAAK,CACL,CAKE,sBAAuB,CACrB,MAAO,CACL,WAAY,CACV,SAAU,6CACV,SAAU,CACR,sEACA,yEACA,wDACV,EACQ,WAAY,CACV,uCACA,6CACA,kDACV,EACQ,YAAa,CACX,0CACA,2CACA,0CACV,CACA,EAEM,OAAQ,CACN,SAAU,gDACV,UAAW,CACT,+CACA,mDACA,kDACV,EACQ,WAAY,CACV,8CACA,gDACA,4CACV,EACQ,YAAa,CACX,gDACA,uCACA,gDACV,CACA,EAEM,KAAM,CACJ,SAAU,+CACV,UAAW,CACT,gDACA,2CACA,+CACV,EACQ,WAAY,CACV,2CACA,2CACA,6CACV,EACQ,YAAa,CACX,oCACA,6CACA,4DACV,CACA,EAEM,QAAS,CACP,SACE,iEACF,UAAW,CACT,yCACA,4CACA,gDACV,EACQ,WAAY,CACV,sDACA,4CACA,mDACV,EACQ,YAAa,CACX,gCACA,uCACA,wCACV,CACA,CACA,CACA,CAKE,sBAAsBE,EAAY,CAEhC,OAAAA,EAAW,mBAAqB,CAACC,EAAWC,IAAW,CACrD,KAAK,YAAY,IAAID,EAAWC,CAAM,CAC5C,EAGIF,EAAW,gBAAkB,CAACG,EAAcC,IAAS,CACnD,KAAK,qBAAqBD,EAAcC,CAAI,CAClD,EAGIJ,EAAW,oBAAsB,CAACK,EAAQ9E,IACjC,KAAK,0BAA0B8E,EAAQ9E,CAAO,EAIvDyE,EAAW,mBAAqB,CAACxE,EAAMmD,EAAUpD,IACxC,KAAK,iBAAiBC,EAAMmD,EAAUpD,CAAO,EAG/CyE,CACX,CAKE,mBAAmBM,EAAS,CAC1B,KAAK,gBAAkBA,CAC3B,CAKE,qBAAqBnB,EAAW,CAC9B,KAAK,kBAAoBA,CAC7B,CAKE,oBAAoBC,EAAM,CACxB,MAAMmB,EAAmB,GAEzB,UAAWjB,KAAOF,EAChB,OAAQE,EAAI,YAAW,EAAE,CACvB,IAAK,OACL,IAAK,WACHiB,EAAiB,KAAK,KAAK,YAAY,IAAI,eAAe,CAAC,EAC3D,MACF,IAAK,SACHA,EAAiB,KAAK,KAAK,YAAY,IAAI,iBAAiB,CAAC,EAC7D,MACF,IAAK,YACL,IAAK,YACHA,EAAiB,KAAK,KAAK,YAAY,IAAI,iBAAiB,CAAC,EAC7D,MACF,IAAK,aACHA,EAAiB,KAAK,KAAK,YAAY,IAAI,iBAAiB,CAAC,EAC7D,KACV,CAGI,OAAOA,EAAiB,OAAST,EAAc,iBAAiB,aAC5DS,EACA,IACR,CAKE,uBAAuBhB,EAAY,CACjC,MAAMiB,EAAc,GAEpB,OAAQjB,EAAU,CAChB,IAAK,WACHiB,EAAY,KAAK,KAAK,YAAY,IAAI,wBAAwB,CAAC,EAC/D,MACF,IAAK,eACHA,EAAY,KACV,KAAK,YAAY,IAAI,wBAAwB,EAC7C,KAAK,YAAY,IAAI,+BAA+B,CAC9D,EACQ,MACF,IAAK,WAEHA,EAAY,KAAK,GAAG,KAAK,YAAY,OAAM,CAAE,EAC7C,KACR,CAEI,OAAOA,CACX,CAGE,4BAA6B,CAC3B,MAAO,CACL,YAAa,CACX,iDACA,6CACA,yCACR,EACM,QAAS,CACP,mCACA,+CACA,yCACA,8CACR,EACM,cAAe,CACb,sCACA,oCACA,8CACA,oCACR,CACA,CACA,CAEE,uBAAwB,CACtB,MAAO,CACL,UAAW,CACT,YACE,sEACF,WAAY,CACV,qDACA,mDACA,kDACA,gDACV,CACA,EACM,WAAY,CACV,YACE,uEACF,WAAY,CACV,uDACA,sDACA,+CACA,mDACV,CACA,EACM,WAAY,CACV,YACE,qEACF,WAAY,CACV,0DACA,2DACA,uCACA,gDACV,CACA,EACM,UAAW,CACT,YAAa,sDACb,WAAY,CACV,mDACA,kDACA,0CACA,4CACV,CACA,CACA,CACA,CACA,CC3rBA,MAAMC,EAAqB,CACzB,uBAAwB,EACxB,aAAc,CACZ,MAAO,EACP,UAAW,CACf,EACE,gBAAiB,CACf,uBAAwB,CAC5B,EACE,mBAAoB,CAClB,WAAY,CACV,IAAK,EACL,IAAK,CACX,EACI,OAAQ,CACN,IAAK,EACL,IAAK,CACX,EACI,KAAM,CACJ,IAAK,EACL,IAAK,CACX,CACA,EACE,oBAAqB,CACvB,EAEA,MAAMC,EAAkB,CACtB,aAAc,CACZ,KAAK,kBAAoB,IAAI,IAC7B,KAAK,qBAAuB,IAAI,IAChC,KAAK,eAAiB,IAAI,IAC1B,KAAK,oBAAsB,IAAI,IAE/B,KAAK,oBAAmB,EACxB,KAAK,iBAAgB,EACrB,KAAK,mBAAkB,EACvB,KAAK,0BAAyB,CAClC,CAKE,qBAAsB,CAEpB,KAAK,kBAAkB,IAAI,aAAc,CACvC,OAAQ,aACR,cAAe,CACb,CACE,GAAI,mBACJ,MAAO,kCACP,QACE,oEACF,YACE,8FACF,QAAS,eAAeD,EAAmB,mBAAmB,mCAC9D,aAAc,CACZ,WACA,uBACA,SACA,0BACA,sBACA,WACZ,EACU,gBAAiB,CACf,iDACA,mDACA,sEACA,+CACZ,EACU,oBACE,mDACZ,EACQ,CACE,GAAI,qBACJ,MAAO,8BACP,QAAS,yDACT,YACE,uFACF,QACE,sEACF,aAAc,CACZ,WACA,eACA,0BACA,qBACA,eACZ,EACU,gBAAiB,CACf,6CACA,iDACA,oDACA,gEACZ,CACA,EACQ,CACE,GAAI,wBACJ,MAAO,kCACP,QACE,iEACF,YACE,+EACF,QAAS,wCACT,aAAc,CACZ,WACA,2BACA,4BACA,mBACA,2BACZ,EACU,gBAAiB,CACf,+CACA,kDACA,0DACA,kDACZ,CACA,CACA,CACA,CAAK,EAGD,KAAK,kBAAkB,IAAI,YAAa,CACtC,OAAQ,YACR,cAAe,CACb,CACE,GAAI,oBACJ,MAAO,+BACP,QACE,qEACF,YACE,wEACF,QACE,+DACF,aAAc,CACZ,WACA,WACA,UACA,wBACA,kCACZ,EACU,gBAAiB,CACf,mDACA,wDACA,kEACA,8DACZ,CACA,EACQ,CACE,GAAI,qBACJ,MAAO,kCACP,QACE,qEACF,YACE,yEACF,QAAS,iDACT,aAAc,CACZ,uBACA,mBACA,sBACA,4BACA,SACA,SACZ,EACU,gBAAiB,CACf,iEACA,yDACA,2DACA,0DACZ,CACA,EACQ,CACE,GAAI,uBACJ,MAAO,kCACP,QACE,sEACF,YACE,wEACF,QAAS,kDACT,aAAc,CACZ,WACA,WACA,UACA,wBACA,mBACZ,EACU,gBAAiB,CACf,+CACA,iDACA,kDACA,yDACZ,CACA,CACA,CACA,CAAK,EAGD,KAAK,kBAAkB,IAAI,mBAAoB,CAC7C,OAAQ,mBACR,cAAe,CACb,CACE,GAAI,sBACJ,MAAO,6BACP,QACE,wEACF,YACE,kFACF,QAAS,uDACT,aAAc,CACZ,oBACA,kBACA,iBACA,yBACA,eACZ,EACU,gBAAiB,CACf,qEACA,6DACA,wDACA,0DACZ,CACA,EACQ,CACE,GAAI,sBACJ,MAAO,2BACP,QACE,0EACF,YACE,wEACF,QAAS,yCACT,aAAc,CACZ,aACA,SACA,cACA,oBACA,6BACA,WACZ,EACU,gBAAiB,CACf,2DACA,iEACA,oDACA,yDACZ,CACA,CACA,CACA,CAAK,EAGD,KAAK,kBAAkB,IAAI,YAAa,CACtC,OAAQ,YACR,cAAe,CACb,CACE,GAAI,yBACJ,MAAO,iCACP,QACE,gEACF,YACE,0EACF,QAAS,uDACT,aAAc,CACZ,YACA,WACA,iBACA,qBACA,eACA,WACZ,EACU,gBAAiB,CACf,gDACA,mEACA,sEACA,4DACZ,CACA,EACQ,CACE,GAAI,sBACJ,MAAO,0BACP,QACE,sEACF,YACE,sEACF,QACE,kEACF,aAAc,CACZ,cACA,YACA,mBACA,yBACA,mBACA,kCACZ,EACU,gBAAiB,CACf,gEACA,gEACA,oDACA,sEACZ,CACA,CACA,CACA,CAAK,EAGD,KAAK,kBAAkB,IAAI,WAAY,CACrC,OAAQ,sBACR,cAAe,CACb,CACE,GAAI,uBACJ,MAAO,mCACP,QACE,iEACF,YACE,kEACF,QAAS,sDACT,aAAc,CACZ,iBACA,mBACA,mBACA,cACA,cACA,6BACZ,EACU,gBAAiB,CACf,yDACA,2DACA,uDACA,6DACZ,CACA,EACQ,CACE,GAAI,0BACJ,MAAO,qCACP,QACE,6EACF,YACE,kGACF,QACE,iEACF,aAAc,CACZ,eACA,iBACA,uBACA,oBACA,wBACA,4BACZ,EACU,gBAAiB,CACf,8DACA,6EACA,yDACA,gEACZ,CACA,CACA,CACA,CAAK,CACL,CAKE,kBAAmB,CACjB,KAAK,qBAAqB,IAAI,aAAc,CAC1C,SAAU,gCACV,SAAU,+CACV,WAAY,4CACZ,aAAc,cAAcA,EAAmB,mBAAmB,WAAW,GAAG,IAAIA,EAAmB,mBAAmB,WAAW,GAAG,sCACxI,WAAY,CACV,mCACA,uCACA,gCACA,kCACR,EACM,WAAY,CACV,gCACA,4CACA,0CACR,CACA,CAAK,EAED,KAAK,qBAAqB,IAAI,SAAU,CACtC,SAAU,wCACV,SAAU,sDACV,WAAY,iDACZ,aAAc,GAAGA,EAAmB,mBAAmB,OAAO,GAAG,IAAIA,EAAmB,mBAAmB,OAAO,GAAG,sDACrH,WAAY,CACV,6CACA,yCACA,sCACA,iCACR,EACM,WAAY,CACV,8BACA,kCACA,+BACA,4BACR,CACA,CAAK,EAED,KAAK,qBAAqB,IAAI,OAAQ,CACpC,SAAU,0CACV,SAAU,sDACV,WAAY,uDACZ,aAAc,GAAGA,EAAmB,mBAAmB,KAAK,GAAG,IAAIA,EAAmB,mBAAmB,KAAK,GAAG,iDACjH,WAAY,CACV,gCACA,kCACA,4CACA,6BACR,EACM,WAAY,CACV,6CACA,mCACA,2BACA,0CACR,CACA,CAAK,EAED,KAAK,qBAAqB,IAAI,UAAW,CACvC,SAAU,8CACV,SAAU,+CACV,WAAY,2DACZ,aAAc,4DACd,WAAY,CACV,yCACA,4CACA,qCACA,mCACR,EACM,WAAY,CACV,qCACA,uCACA,2BACA,qCACR,CACA,CAAK,CACL,CAKE,oBAAqB,CACnB,KAAK,eAAe,IAAI,kBAAmB,CACzC,MAAO,0CACP,QACE,6FACF,OAAQ,kDACR,OAAQ,4DACR,QAAS,CACP,kEACA,mDACA,mDACA,0DACR,EACM,WAAY,CACV,wDACA,gEACA,yDACA,iEACR,CACA,CAAK,EAED,KAAK,eAAe,IAAI,wBAAyB,CAC/C,MAAO,2CACP,QACE,6EACF,OAAQ,+CACR,OAAQ,8DACR,QAAS,CACP,4DACA,yDACA,sDACA,kDACR,EACM,WAAY,CACV,kEACA,8DACA,yDACA,uDACR,CACA,CAAK,EAED,KAAK,eAAe,IAAI,wBAAyB,CAC/C,MAAO,wCACP,QACE,qFACF,OAAQ,iDACR,OAAQ,2DACR,QAAS,CACP,6DACA,6DACA,yDACA,gEACR,EACM,WAAY,CACV,wEACA,iEACA,6DACA,8DACR,CACA,CAAK,CACL,CAKE,2BAA4B,CAC1B,KAAK,oBAAoB,IAAI,qBAAsB,CACjD,YAAa,qBACb,SAAU,CACR,kBACA,qBACA,iBACA,oBACR,EACM,YAAa,CACX,wBACA,sBACA,cACA,sBACR,EACM,YAAa,CACX,0BACA,wBACA,yBACA,qBACR,EACM,UAAW,CACT,sDACA,uDACA,sDACA,sDACR,CACA,CAAK,EAED,KAAK,oBAAoB,IAAI,sBAAuB,CAClD,YAAa,sBACb,SAAU,CACR,mBACA,4BACA,sBACA,uBACR,EACM,YAAa,CACX,+BACA,0BACA,oBACA,0BACR,EACM,YAAa,CACX,iBACA,qBACA,yBACA,sBACR,EA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gBACJ,MAAO,6BACP,SACE,uEAGF,mBAAoB,CAClB,2EACA,4EACA,uEACA,8DACN,EAEI,aAAc,CACZ,iFACA,8EACA,6EACA,iEACN,EAEI,SAAU,gBACV,WAAY,eACZ,eAAgB,MAChB,cAAe,CACb,2CACA,0CACA,sDACN,EAGI,eAAgB,CACd,SAAU;AAAA;AAAA,0MAIV,WAAY,CACV,CACE,KAAM,YACN,WACE,2EACZ,EACQ,CACE,KAAM,OACN,WACE,2EACZ,EACQ,CACE,KAAM,mBACN,WACE,+FACZ,EACQ,CACE,KAAM,gBACN,WACE,yEACZ,EACQ,CACE,KAAM,eACN,WACE,2FACZ,CACA,EAEM,gBAAiB,CACf,0EACA,4DACA,oEACA,uEACR,EAEM,iBACE,+QACR,EAGI,kBAAmB,CACjB,oBAAqB,CACnB,0EACA,wEACA,qEACA,4GACA,sEACR,EAEM,iBAAkB,CAChB,oBAAqB,CACnB,mEACA,4EACA,qFACA,+FACV,EACQ,mBAAoB,CAClB,mEACA,yEACA,4EACA,+EACV,EACQ,qBAAsB,CACpB,uCACA,wDACA,mEACA,uEACV,CACA,EAEM,oBAAqB,CACnB,4EACA,yEACA,wDACA,iEACA,mEACR,EAEM,iBAAkB,CAChB,qEACA,uDACA,+DACR,EAEM,cAAe,CACb,uFACA,2EACA,wEACA,wEACR,CACA,EAGI,iBAAkB,CAChB,CACE,KAAM,UACN,MAAO,mCACP,YACE,kEACF,IAAK,0FACL,SAAU,WAClB,EACM,CACE,KAAM,QACN,MAAO,2BACP,YAAa,2DACb,IAAK,8CACL,SAAU,UAClB,EACM,CACE,KAAM,WACN,MAAO,iCACP,YACE,mEACF,IAAK,8CACL,SAAU,WAClB,EACM,CACE,KAAM,cACN,MAAO,0BACP,YACE,8DACF,IAAK,gCACL,SAAU,UAClB,CACA,EAGI,KAAM,CACJ,OACA,WACA,SACA,SACA,aACA,SACA,WACN,EAGI,aAAc,CACZ,qDACA,uDACA,wDACN,EAGI,qBAAsB,CACpB,2BACA,mBACA,qBACN,CACA,EAEE,qBAAsB,CACpB,GAAI,qBACJ,MAAO,gCACP,SACE,uEAGF,mBAAoB,CAClB,iEACA,6DACA,2DACA,kEACN,EAEI,aAAc,CACZ,oFACA,8EACA,oEACA,kFACN,EAEI,SAAU,gBACV,WAAY,eACZ,eAAgB,MAChB,cAAe,CACb,2CACA,+CACA,oDACN,EAGI,eAAgB,CACd,SAAU;AAAA;AAAA,4LAIV,WAAY,CACV,CACE,KAAM,WACN,WACE,6EACZ,EACQ,CACE,KAAM,YACN,WACE,0DACZ,EACQ,CACE,KAAM,oBACN,WACE,2DACZ,EACQ,CACE,KAAM,iBACN,WACE,0DACZ,EACQ,CACE,KAAM,YACN,WACE,mEACZ,CACA,EAEM,gBAAiB,CACf,+DACA,yDACA,0DACA,wDACR,CACA,EAGI,gBAAiB,CACf,aAAc,CACZ,wEACA,kEACA,iEACA,8DACR,EAEM,oBAAqB,CACnB,yDACA,yDACA,4DACA,qEACR,CACA,EAGI,kBAAmB,CACjB,gBAAiB,CACf,gEACA,0DACA,oDACA,wDACR,EAEM,oBAAqB,CACnB,2DACA,8DACA,+DACA,6CACR,EAEM,gBAAiB,CACf,0DACA,qDACA,qDACA,4CACR,CACA,CACA,EAEE,uBAAwB,CACtB,GAAI,uBACJ,MAAO,4BACP,SAAU,0DAGV,mBAAoB,CAClB,8DACA,2DACA,uEACA,mEACN,EAEI,aAAc,CACZ,2DACA,+DACA,mEACA,6EACN,EAEI,SAAU,eACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,6CACA,+CACA,iDACN,EAGI,eAAgB,CACd,SAAU;AAAA;AAAA,8KAIV,WAAY,CACV,CACE,KAAM,mBACN,WACE,gEACZ,EACQ,CACE,KAAM,eACN,WAAY,uDACtB,EACQ,CACE,KAAM,iBACN,WACE,4EACZ,EACQ,CACE,KAAM,iBACN,WACE,6DACZ,EACQ,CACE,KAAM,cACN,WACE,mEACZ,CACA,EAEM,gBAAiB,CACf,2EACA,qEACA,uDACA,iDACR,CACA,EAGI,gBAAiB,CACf,aAAc,CACZ,sEACA,kEACA,8DACA,yEACR,EAEM,oBAAqB,CACnB,2DACA,oEACA,uDACA,0DACR,CACA,EAGI,kBAAmB,CACjB,gBAAiB,CACf,oEACA,mDACA,+CACA,2DACR,EAEM,oBAAqB,CACnB,yDACA,4DACA,oDACA,iEACR,EAEM,gBAAiB,CACf,iEACA,4DACA,sDACA,qDACR,CACA,CACA,EAEE,uBAAwB,CACtB,GAAI,uBACJ,MAAO,6BACP,SAAU,+DAGV,mBAAoB,CAClB,8DACA,qDACA,wDACA,+DACN,EAEI,aAAc,CACZ,yEACA,+EACA,4EACA,oEACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,uDACA,qDACA,uDACN,EAGI,eAAgB,CACd,SAAU;AAAA;AAAA,2NAIV,WAAY,CACV,CACE,KAAM,iBACN,WAAY,uDACtB,EACQ,CACE,KAAM,iBACN,WAAY,oDACtB,EACQ,CACE,KAAM,YACN,WACE,4DACZ,EACQ,CACE,KAAM,gBACN,WAAY,kDACtB,EACQ,CACE,KAAM,wBACN,WACE,8DACZ,CACA,EAEM,gBAAiB,CACf,oEACA,sDACA,0DACA,wDACR,CACA,EAGI,gBAAiB,CACf,aAAc,CACZ,uEACA,wEACA,6DACA,sEACR,EAEM,oBAAqB,CACnB,qDACA,mFACA,oEACA,sEACR,CACA,EAGI,kBAAmB,CACjB,gBAAiB,CACf,uDACA,qDACA,+DACA,kEACR,EAEM,oBAAqB,CACnB,qDACA,iDACA,oDACA,kDACR,EAEM,gBAAiB,CACf,8EACA,4DACA,8CACA,sEACR,CACA,CACA,EAIE,oBAAqB,CACnB,GAAI,oBACJ,MAAO,2BACP,SAAU,8EAEV,mBAAoB,CAClB,wFACA,qFACA,mFACA,6EACA,qFACN,EAEI,aAAc,CACZ,8EACA,6EACA,sFACA,4FACN,EAEI,SAAU,gBACV,WAAY,eACZ,eAAgB,MAChB,cAAe,CACb,iDACA,gDACA,gDACA,2DACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,0QAIV,WAAY,CACV,CACE,KAAM,iBACN,WAAY,yGACtB,EACQ,CACE,KAAM,qBACN,WAAY,+EACtB,EACQ,CACE,KAAM,uBACN,WAAY,uEACtB,EACQ,CACE,KAAM,qCACN,WAAY,kFACtB,EACQ,CACE,KAAM,mBACN,WAAY,yEACtB,CACA,EAEM,gBAAiB,CACf,qEACA,2FACA,+EACA,uFACR,EAEM,iBAAkB,gLACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,+EACA,sFACA,qFACA,6EACA,uFACR,EAEM,iBAAkB,CAChB,oBAAqB,CACnB,kFACA,sFACA,uGACA,mGACV,EACQ,wBAAyB,CACvB,qEACA,uEACA,yFACA,oFACV,CACA,EAEM,mBAAoB,CAClB,gFACA,4EACA,4EACA,mFACR,CACA,CACA,EAEE,uBAAwB,CACtB,GAAI,uBACJ,MAAO,uBACP,SAAU,sFAEV,mBAAoB,CAClB,wEACA,gFACA,wEACA,uEACA,kFACN,EAEI,aAAc,CACZ,8EACA,sFACA,4FACA,yFACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,mDACA,4DACA,wDACA,yDACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,kQAIV,WAAY,CACV,CACE,KAAM,kBACN,WAAY,oFACtB,EACQ,CACE,KAAM,gCACN,WAAY,sEACtB,EACQ,CACE,KAAM,iBACN,WAAY,mFACtB,EACQ,CACE,KAAM,iBACN,WAAY,6EACtB,EACQ,CACE,KAAM,eACN,WAAY,+EACtB,CACA,EAEM,gBAAiB,CACf,+EACA,uEACA,uEACA,qEACR,EAEM,iBAAkB,wKACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,+EACA,kFACA,uEACA,4EACA,8EACR,EAEM,iBAAkB,CAChB,gBAAiB,CACf,wEACA,wEACA,+EACA,8EACV,EACQ,oBAAqB,CACnB,8EACA,4EACA,6EACA,4EACV,CACA,EAEM,mBAAoB,CAClB,2EACA,iFACA,4EACA,kFACR,CACA,CACA,EAEE,qBAAsB,CACpB,GAAI,qBACJ,MAAO,+BACP,SAAU,6FAEV,mBAAoB,CAClB,wFACA,sFACA,6EACA,qEACA,oFACN,EAEI,aAAc,CACZ,8EACA,6EACA,oGACA,4FACN,EAEI,SAAU,gBACV,WAAY,eACZ,eAAgB,MAChB,cAAe,CACb,4DACA,gEACA,iEACA,qDACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,gUAIV,WAAY,CACV,CACE,KAAM,0BACN,WAAY,mGACtB,EACQ,CACE,KAAM,+BACN,WAAY,qFACtB,EACQ,CACE,KAAM,4BACN,WAAY,yEACtB,EACQ,CACE,KAAM,kBACN,WAAY,0EACtB,EACQ,CACE,KAAM,wBACN,WAAY,8EACtB,CACA,EAEM,gBAAiB,CACf,+EACA,+EACA,4EACA,8EACR,EAEM,iBAAkB,oLACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,uFACA,qFACA,uFACA,iFACA,2EACR,EAEM,iBAAkB,CAChB,sBAAuB,CACrB,0EACA,yEACA,6EACA,yEACV,EACQ,mBAAoB,CAClB,wEACA,qFACA,2FACA,+EACV,CACA,EAEM,mBAAoB,CAClB,wEACA,yEACA,4EACA,qEACR,CACA,CACA,EAIE,4BAA6B,CAC3B,GAAI,4BACJ,MAAO,+BACP,SAAU,+EAEV,mBAAoB,CAClB,gGACA,0FACA,sEACA,kFACA,+EACN,EAEI,aAAc,CACZ,8EACA,4GACA,mFACA,4FACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,sDACA,kDACA,sDACA,wCACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,oMAIV,WAAY,CACV,CACE,KAAM,2BACN,WAAY,qEACtB,EACQ,CACE,KAAM,qBACN,WAAY,oFACtB,EACQ,CACE,KAAM,eACN,WAAY,uFACtB,EACQ,CACE,KAAM,kBACN,WAAY,yFACtB,EACQ,CACE,KAAM,uBACN,WAAY,gFACtB,CACA,EAEM,gBAAiB,CACf,mFACA,+EACA,yEACA,iFACR,EAEM,iBAAkB,yKACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,wFACA,2FACA,iFACA,gFACA,uGACR,EAEM,iBAAkB,CAChB,6BAA8B,CAC5B,sEACA,uFACA,+EACA,6FACV,EACQ,8BAA+B,CAC7B,sEACA,wEACA,4EACA,iFACV,CACA,EAEM,mBAAoB,CAClB,8EACA,8EACA,8DACA,yDACR,CACA,CACA,EAEE,2BAA4B,CAC1B,GAAI,2BACJ,MAAO,4BACP,SAAU,gFAEV,mBAAoB,CAClB,gFACA,sEACA,gFACA,gFACA,qFACN,EAEI,aAAc,CACZ,8EACA,6EACA,0FACA,2FACN,EAEI,SAAU,gBACV,WAAY,eACZ,eAAgB,MAChB,cAAe,CACb,8DACA,4CACA,gDACA,6CACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,wMAIV,WAAY,CACV,CACE,KAAM,gBACN,WAAY,0FACtB,EACQ,CACE,KAAM,wBACN,WAAY,kFACtB,EACQ,CACE,KAAM,mBACN,WAAY,0EACtB,EACQ,CACE,KAAM,sBACN,WAAY,kFACtB,EACQ,CACE,KAAM,oBACN,WAAY,kFACtB,CACA,EAEM,gBAAiB,CACf,2EACA,kFACA,8EACA,mFACR,EAEM,iBAAkB,2JACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,yFACA,qFACA,6EACA,oFACA,kFACR,EAEM,iBAAkB,CAChB,mCAAoC,CAClC,oEACA,gFACA,qFACA,sFACV,EACQ,0BAA2B,CACzB,+DACA,iFACA,mEACA,uEACV,CACA,EAEM,mBAAoB,CAClB,sEACA,0EACA,2EACA,iEACR,CACA,CACA,EAEE,2BAA4B,CAC1B,GAAI,2BACJ,MAAO,iCACP,SAAU,kFAEV,mBAAoB,CAClB,kFACA,mFACA,oEACA,2EACA,wFACN,EAEI,aAAc,CACZ,8EACA,4GACA,mFACA,uEACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,yDACA,oDACA,yDACA,gEACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,qNAIV,WAAY,CACV,CACE,KAAM,iBACN,WAAY,6EACtB,EACQ,CACE,KAAM,2BACN,WAAY,2EACtB,EACQ,CACE,KAAM,YACN,WAAY,4EACtB,EACQ,CACE,KAAM,oBACN,WAAY,2EACtB,EACQ,CACE,KAAM,oBACN,WAAY,mEACtB,CACA,EAEM,gBAAiB,CACf,2EACA,0FACA,oFACA,uFACR,EAEM,iBAAkB,yKACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,oGACA,0EACA,wEACA,0EACA,0FACR,EAEM,iBAAkB,CAChB,kCAAmC,CACjC,yEACA,mFACA,+EACA,8FACV,EACQ,0BAA2B,CACzB,2EACA,2EACA,kFACA,kFACV,CACA,EAEM,mBAAoB,CAClB,uDACA,0EACA,+DACA,qEACR,CACA,CACA,EAIE,yBAA0B,CACxB,GAAI,yBACJ,MAAO,kCACP,SAAU,yGAEV,mBAAoB,CAClB,iHACA,0GACA,0FACA,8GACA,mGACN,EAEI,aAAc,CACZ,8EACA,6GACA,0FACA,yGACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,oDACA,4DACA,iEACA,gEACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,6MAIV,WAAY,CACV,CACE,KAAM,yBACN,WAAY,wFACtB,EACQ,CACE,KAAM,0BACN,WAAY,kHACtB,EACQ,CACE,KAAM,0BACN,WAAY,gFACtB,EACQ,CACE,KAAM,0BACN,WAAY,iGACtB,EACQ,CACE,KAAM,uBACN,WAAY,uGACtB,CACA,EAEM,gBAAiB,CACf,oFACA,iFACA,uEACA,gFACR,EAEM,iBAAkB,gKACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,kGACA,gGACA,sFACA,4FACA,+FACR,EAEM,iBAAkB,CAChB,gCAAiC,CAC/B,oEACA,qFACA,kFACA,+FACV,EACQ,8BAA+B,CAC7B,4EACA,gFACA,mFACA,kGACV,CACA,EAEM,mBAAoB,CAClB,uFACA,+FACA,2EACA,4EACR,CACA,CACA,EAEE,6BAA8B,CAC5B,GAAI,6BACJ,MAAO,8BACP,SAAU,+EAEV,mBAAoB,CAClB,wFACA,kGACA,oEACA,wFACA,qFACN,EAEI,aAAc,CACZ,8EACA,4GACA,6FACA,uEACN,EAEI,SAAU,gBACV,WAAY,eACZ,eAAgB,MAChB,cAAe,CACb,2DACA,6DACA,0DACA,4DACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,qMAIV,WAAY,CACV,CACE,KAAM,gBACN,WAAY,qFACtB,EACQ,CACE,KAAM,oBACN,WAAY,6DACtB,EACQ,CACE,KAAM,qBACN,WAAY,uFACtB,EACQ,CACE,KAAM,yBACN,WAAY,8FACtB,EACQ,CACE,KAAM,+BACN,WAAY,qGACtB,CACA,EAEM,gBAAiB,CACf,gFACA,yFACA,oEACA,0EACR,EAEM,iBAAkB,0KACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,8FACA,2FACA,iGACA,gGACA,wFACR,EAEM,iBAAkB,CAChB,iCAAkC,CAChC,4EACA,uFACA,4FACA,2FACV,EACQ,mBAAoB,CAClB,6EACA,4EACA,wEACA,kGACV,CACA,EAEM,mBAAoB,CAClB,6FACA,uFACA,wDACA,+EACR,CACA,CACA,EAEE,gCAAiC,CAC/B,GAAI,gCACJ,MAAO,gCACP,SAAU,kFAEV,mBAAoB,CAClB,sGACA,8FACA,0FACA,2FACA,uFACN,EAEI,aAAc,CACZ,oFACA,6EACA,oGACA,kFACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,gEACA,sDACA,gEACA,wDACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,8KAIV,WAAY,CACV,CACE,KAAM,kBACN,WAAY,sFACtB,EACQ,CACE,KAAM,0BACN,WAAY,2EACtB,EACQ,CACE,KAAM,wBACN,WAAY,uEACtB,EACQ,CACE,KAAM,gBACN,WAAY,kFACtB,EACQ,CACE,KAAM,wBACN,WAAY,oFACtB,CACA,EAEM,gBAAiB,CACf,4FACA,8EACA,2EACA,iGACR,EAEM,iBAAkB,0KACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,2FACA,kFACA,0FACA,oGACA,0FACR,EAEM,iBAAkB,CAChB,iCAAkC,CAChC,yEACA,2FACA,sFACA,gGACV,EACQ,2BAA4B,CAC1B,sEACA,qEACA,kFACA,0FACV,CACA,EAEM,mBAAoB,CAClB,+FACA,8EACA,2EACA,4EACR,CACA,CACA,EAEE,sBAAuB,CACrB,GAAI,sBACJ,MAAO,qCACP,SAAU,2EAEV,mBAAoB,CAClB,8EACA,yEACA,0EACA,+EACN,EAEI,aAAc,CACZ,oFACA,8EACA,uFACA,wEACN,EAEI,SAAU,gBACV,WAAY,eACZ,eAAgB,MAChB,cAAe,CACb,yDACA,mDACA,wDACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,0QAIV,WAAY,CACV,CACE,KAAM,uBACN,WAAY,oGACtB,EACQ,CACE,KAAM,0BACN,WAAY,oGACtB,EACQ,CACE,KAAM,mBACN,WAAY,gGACtB,EACQ,CACE,KAAM,cACN,WAAY,oFACtB,CACA,EAEM,gBAAiB,CACf,4FACA,0FACA,0FACA,kEACR,EAEM,iBAAkB,yLACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,yFACA,+FACA,wGACA,sGACA,mGACR,EAEM,iBAAkB,CAChB,+BAAgC,CAC9B,0EACA,gGACA,0FACA,iFACV,EACQ,8BAA+B,CAC7B,4EACA,uFACA,mFACA,yFACV,CACA,EAEM,mBAAoB,CAClB,wFACA,iFACA,iFACA,4EACR,CACA,CACA,EAEE,8BAA+B,CAC7B,GAAI,8BACJ,MAAO,qCACP,SAAU,qEAEV,mBAAoB,CAClB,mFACA,4EACA,gFACA,oFACN,EAEI,aAAc,CACZ,8EACA,uFACA,6EACA,iEACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,mEACA,mDACA,iDACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,wPAIV,WAAY,CACV,CACE,KAAM,uBACN,WAAY,0GACtB,EACQ,CACE,KAAM,yBACN,WAAY,gFACtB,EACQ,CACE,KAAM,4BACN,WAAY,8FACtB,EACQ,CACE,KAAM,qBACN,WAAY,+EACtB,CACA,EAEM,gBAAiB,CACf,oFACA,4FACA,+FACA,gFACR,EAEM,iBAAkB,kLACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,iGACA,6GACA,mGACA,wGACA,4GACR,EAEM,iBAAkB,CAChB,iCAAkC,CAChC,0EACA,kGACA,uFACA,iGACV,EACQ,6BAA8B,CAC5B,sFACA,uFACA,8EACA,oGACV,CACA,EAEM,mBAAoB,CAClB,8EACA,8FACA,0FACA,wFACR,CACA,CACA,EAEE,8BAA+B,CAC7B,GAAI,8BACJ,MAAO,8BACP,SAAU,gEAEV,mBAAoB,CAClB,sEACA,0FACA,2EACA,4EACN,EAEI,aAAc,CACZ,oFACA,uFACA,yEACA,qFACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,8DACA,qDACA,+CACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,uPAIV,WAAY,CACV,CACE,KAAM,sBACN,WAAY,gFACtB,EACQ,CACE,KAAM,mBACN,WAAY,8EACtB,EACQ,CACE,KAAM,cACN,WAAY,8EACtB,EACQ,CACE,KAAM,mBACN,WAAY,4GACtB,CACA,EAEM,gBAAiB,CACf,kGACA,qFACA,sGACA,sGACR,EAEM,iBAAkB,6JACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,wFACA,mFACA,sGACA,sGACA,sFACR,EAEM,iBAAkB,CAChB,+BAAgC,CAC9B,iFACA,wGACA,iGACA,sGACV,EACQ,2BAA4B,CAC1B,iFACA,sFACA,gGACA,yFACV,CACA,EAEM,mBAAoB,CAClB,qFACA,sFACA,oFACA,+EACR,CACA,CACA,EAEE,0BAA2B,CACzB,GAAI,0BACJ,MAAO,gCACP,SAAU,sFAEV,mBAAoB,CAClB,wFACA,+EACA,4EACA,0EACN,EAEI,aAAc,CACZ,8EACA,6EACA,yEACA,iEACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,kEACA,mDACA,iDACA,yDACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,0PAIV,WAAY,CACV,CACE,KAAM,qBACN,WAAY,4GACtB,EACQ,CACE,KAAM,sBACN,WAAY,yGACtB,EACQ,CACE,KAAM,sBACN,WAAY,yGACtB,EACQ,CACE,KAAM,mBACN,WAAY,yFACtB,CACA,EAEM,gBAAiB,CACf,oFACA,2FACA,gFACA,kFACR,EAEM,iBAAkB,gKACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,8FACA,6GACA,kHACA,sHACA,6FACR,EAEM,iBAAkB,CAChB,kCAAmC,CACjC,iFACA,6FACA,oFACA,sFACV,EACQ,sCAAuC,CACrC,kFACA,iFACA,2FACA,qGACV,CACA,EAEM,mBAAoB,CAClB,yEACA,8EACA,sFACA,wEACR,CACA,CACA,EAEE,iCAAkC,CAChC,GAAI,iCACJ,MAAO,0CACP,SAAU,6EAEV,mBAAoB,CAClB,sFACA,+FACA,8EACA,6EACN,EAEI,aAAc,CACZ,8EACA,6EACA,sFACA,iEACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,6DACA,mDACA,wCACA,oDACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,4NAIV,WAAY,CACV,CACE,KAAM,4BACN,WAAY,8HACtB,EACQ,CACE,KAAM,mBACN,WAAY,2FACtB,EACQ,CACE,KAAM,0CACN,WAAY,sGACtB,EACQ,CACE,KAAM,sBACN,WAAY,uFACtB,CACA,EAEM,gBAAiB,CACf,0EACA,6GACA,oEACA,gFACR,EAEM,iBAAkB,iLACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,wFACA,wFACA,4GACA,6GACA,oFACR,EAEM,iBAAkB,CAChB,uCAAwC,CACtC,gFACA,qGACA,sFACA,2GACV,EACQ,oCAAqC,CACnC,mGACA,4EACA,2FACA,0FACV,CACA,EAEM,mBAAoB,CAClB,mFACA,wEACA,2EACA,4EACR,CACA,CACA,EAEE,gCAAiC,CAC/B,GAAI,gCACJ,MAAO,gCACP,SAAU,qFAEV,mBAAoB,CAClB,8EACA,sEACA,qEACA,8EACN,EAEI,aAAc,CACZ,oFACA,8EACA,gGACA,4EACN,EAEI,SAAU,gBACV,WAAY,eACZ,eAAgB,MAChB,cAAe,CACb,iEACA,mDACA,mDACA,6DACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,0NAIV,WAAY,CACV,CACE,KAAM,qBACN,WAAY,8FACtB,EACQ,CACE,KAAM,yBACN,WAAY,oFACtB,EACQ,CACE,KAAM,oBACN,WAAY,qEACtB,EACQ,CACE,KAAM,qBACN,WAAY,sFACtB,CACA,EAEM,gBAAiB,CACf,sEACA,mEACA,6DACA,kFACR,EAEM,iBAAkB,wKACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,8FACA,qGACA,mGACA,oFACA,gGACR,EAEM,iBAAkB,CAChB,oCAAqC,CACnC,4EACA,qGACA,oFACA,sGACV,EACQ,iCAAkC,CAChC,uFACA,gFACA,4EACA,sGACV,CACA,EAEM,mBAAoB,CAClB,4EACA,sFACA,oDACA,0FACR,CACA,CACA,EAIE,0BAA2B,CACzB,GAAI,0BACJ,MAAO,0BACP,SAAU,2EAEV,mBAAoB,CAClB,iFACA,wEACA,uEACA,6EACN,EAEI,aAAc,CACZ,8EACA,6EACA,6DACA,qFACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,2DACA,yDACA,yDACA,2DACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,iQAIV,WAAY,CACV,CACE,KAAM,mBACN,WAAY,gHACtB,EACQ,CACE,KAAM,uBACN,WAAY,kGACtB,EACQ,CACE,KAAM,qBACN,WAAY,8EACtB,EACQ,CACE,KAAM,sBACN,WAAY,wFACtB,CACA,EAEM,gBAAiB,CACf,0EACA,iFACA,uEACA,6EACR,EAEM,iBAAkB,4JACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,wHACA,4FACA,oGACA,6FACA,mGACR,EAEM,iBAAkB,CAChB,sCAAuC,CACrC,4FACA,yFACA,0FACA,sGACV,EACQ,gCAAiC,CAC/B,qFACA,2FACA,iGACA,6FACV,CACA,EAEM,mBAAoB,CAClB,8FACA,kFACA,wEACA,6EACR,CACA,CACA,EAEE,0BAA2B,CACzB,GAAI,0BACJ,MAAO,iCACP,SAAU,0EAEV,mBAAoB,CAClB,yEACA,oEACA,sEACA,4EACN,EAEI,aAAc,CACZ,8EACA,6EACA,6DACA,iEACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,6DACA,mDACA,0DACA,mDACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,mQAIV,WAAY,CACV,CACE,KAAM,oBACN,WAAY,8FACtB,EACQ,CACE,KAAM,qBACN,WAAY,8EACtB,EACQ,CACE,KAAM,2BACN,WAAY,gFACtB,EACQ,CACE,KAAM,0BACN,WAAY,iEACtB,CACA,EAEM,gBAAiB,CACf,4FACA,gFACA,mFACA,mFACR,EAEM,iBAAkB,uKACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,gHACA,wFACA,8GACA,yFACA,qFACR,EAEM,iBAAkB,CAChB,gCAAiC,CAC/B,0FACA,0FACA,sFACA,0FACV,EACQ,mBAAoB,CAClB,2FACA,mGACA,4FACA,6GACV,CACA,EAEM,mBAAoB,CAClB,gEACA,0EACA,+EACA,qFACR,CACA,CACA,EAEE,6BAA8B,CAC5B,GAAI,6BACJ,MAAO,6BACP,SAAU,2EAEV,mBAAoB,CAClB,4FACA,iEACA,iFACA,gFACN,EAEI,aAAc,CACZ,8EACA,gGACA,6EACA,qFACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,sDACA,wDACA,sDACA,mDACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,yQAIV,WAAY,CACV,CACE,KAAM,cACN,WAAY,wFACtB,EACQ,CACE,KAAM,qBACN,WAAY,6FACtB,EACQ,CACE,KAAM,gBACN,WAAY,wFACtB,EACQ,CACE,KAAM,oBACN,WAAY,wFACtB,CACA,EAEM,gBAAiB,CACf,2FACA,iFACA,qFACA,0FACR,EAEM,iBAAkB,mLACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,4GACA,0HACA,6FACA,qGACA,uFACR,EAEM,iBAAkB,CAChB,sCAAuC,CACrC,4FACA,gGACA,mFACA,kGACV,EACQ,wBAAyB,CACvB,sFACA,oFACA,+FACA,uGACV,CACA,EAEM,mBAAoB,CAClB,0EACA,gFACA,iEACA,mFACR,CACA,CACA,EAEE,qBAAsB,CACpB,GAAI,qBACJ,MAAO,qBACP,SAAU,mEAEV,mBAAoB,CAClB,4EACA,2EACA,uEACA,uEACN,EAEI,aAAc,CACZ,8EACA,6EACA,yEACA,4DACN,EAEI,SAAU,gBACV,WAAY,WACZ,eAAgB,MAChB,cAAe,CACb,gDACA,kDACA,oDACA,0DACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,0PAIV,WAAY,CACV,CACE,KAAM,wBACN,WAAY,sFACtB,EACQ,CACE,KAAM,qBACN,WAAY,wFACtB,EACQ,CACE,KAAM,2BACN,WAAY,oGACtB,EACQ,CACE,KAAM,oBACN,WAAY,oGACtB,CACA,EAEM,gBAAiB,CACf,qEACA,yGACA,4EACA,qFACR,EAEM,iBAAkB,yKACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,qGACA,0GACA,iFACA,gFACA,4EACR,EAEM,iBAAkB,CAChB,+BAAgC,CAC9B,yFACA,2GACA,uGACA,kHACV,EACQ,mCAAoC,CAClC,+FACA,sFACA,wGACA,6GACV,CACA,EAEM,mBAAoB,CAClB,2EACA,qEACA,0EACA,+DACR,CACA,CACA,EAEE,0BAA2B,CACzB,GAAI,0BACJ,MAAO,0BACP,SAAU,yEAEV,mBAAoB,CAClB,0EACA,qEACA,qEACA,wEACN,EAEI,aAAc,CACZ,8EACA,gGACA,6EACA,qFACN,EAEI,SAAU,gBACV,WAAY,eACZ,eAAgB,MAChB,cAAe,CACb,6DACA,4DACA,qDACA,kEACN,EAEI,eAAgB,CACd,SAAU;AAAA;AAAA,gPAIV,WAAY,CACV,CACE,KAAM,kBACN,WAAY,oGACtB,EACQ,CACE,KAAM,uBACN,WAAY,wFACtB,EACQ,CACE,KAAM,mBACN,WAAY,qFACtB,EACQ,CACE,KAAM,oBACN,WAAY,0FACtB,CACA,EAEM,gBAAiB,CACf,iEACA,0EACA,wEACA,kFACR,EAEM,iBAAkB,kLACxB,EAEI,kBAAmB,CACjB,oBAAqB,CACnB,mFACA,qFACA,sGACA,iGACA,2FACR,EAEM,iBAAkB,CAChB,yCAA0C,CACxC,6FACA,2FACA,qGACA,sHACV,EACQ,mCAAoC,CAClC,4EACA,0GACA,0FACA,+GACV,CACA,EAEM,mBAAoB,CAClB,0EACA,+EACA,wFACA,iGACR,CACA,CACA,EAEE,2BAA4B,CAC1B,GAAI,2BACJ,MAAO,2BACP,SAAU,0EAEV,mBAAoB,CAClB,oEACA,0EACA,uEACA,oFACN,EAEI,aAAc,CACZ,8EACA,6EACA,6DACA,qFACN,EAEI,SAAU,gBACV,WAAY,eACZ,eAAgB,MAChB,cAAe,CACb,qEACA,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ACA,gBACN,CACA,EAEE,eAAgB,CACd,GAAI,eACJ,MAAO,mBACP,YACE,4LACF,KAAM,KACN,WAAY,WACZ,cAAe,GACf,MAAO,UACP,UAAW,CACT,CACE,GAAI,gCACJ,MAAO,kCACP,YACE,4KACF,WAAY,UACpB,EACM,CACE,GAAI,0BACJ,MAAO,4BACP,YACE,uJACF,WAAY,cACpB,EACM,CACE,GAAI,yBACJ,MAAO,6BACP,YACE,kJACF,WAAY,UACpB,EACM,CACE,GAAI,4BACJ,MAAO,+BACP,YACE,yJACF,WAAY,UACpB,EACM,CACE,GAAI,2BACJ,MAAO,4BACP,YACE,gJACF,WAAY,cACpB,EACM,CACE,GAAI,2BACJ,MAAO,iCACP,YACE,+JACF,WAAY,UACpB,CACA,EACI,mBAAoB,CAClB,oGACA,2EACA,sFACA,kFACA,oFACN,EACI,KAAM,CACJ,eACA,iBACA,iBACA,QACA,mBACA,wBACN,CACA,EAEE,uBAAwB,CACtB,GAAI,uBACJ,MAAO,gCACP,YACE,iKACF,KAAM,KACN,WAAY,eACZ,cAAe,GACf,MAAO,UACP,UAAW,CACT,CACE,GAAI,yBACJ,MAAO,iCACP,YACE,oLACF,WAAY,UACpB,EACM,CACE,GAAI,sBACJ,MAAO,kCACP,YACE,+JACF,WAAY,cACpB,EACM,CACE,GAAI,yBACJ,MAAO,mCACP,YACE,4IACF,WAAY,UACpB,EACM,CACE,GAAI,yBACJ,MAAO,kCACP,YACE,2KACF,WAAY,UACpB,EACM,CACE,GAAI,6BACJ,MAAO,8BACP,YACE,qKACF,WAAY,cACpB,EACM,CACE,GAAI,gCACJ,MAAO,gCACP,YACE,uKACF,WAAY,UACpB,CACA,EACI,mBAAoB,CAClB,kFACA,yFACA,yEACA,+EACA,wEACN,EACI,KAAM,CACJ,aACA,kBACA,YACA,YACA,gBACA,gBACN,CACA,EAEE,uBAAwB,CACtB,GAAI,uBACJ,MAAO,2BACP,YACE,0KACF,KAAM,MACN,WAAY,WACZ,cAAe,GACf,MAAO,UACP,UAAW,CACT,CACE,GAAI,qBACJ,MAAO,oCACP,YACE,qKACF,WAAY,UACpB,EACM,CACE,GAAI,gCACJ,MAAO,kCACP,YACE,8KACF,WAAY,cACpB,EACM,CACE,GAAI,wBACJ,MAAO,sCACP,YACE,qLACF,WAAY,cACpB,EACM,CACE,GAAI,sBACJ,MAAO,qCACP,YACE,wKACF,WAAY,cACpB,EACM,CACE,GAAI,8BACJ,MAAO,qCACP,YACE,+JACF,WAAY,UACpB,EACM,CACE,GAAI,8BACJ,MAAO,8BACP,YACE,mKACF,WAAY,UACpB,CACA,EACI,mBAAoB,CAClB,sFACA,6FACA,qFACA,yEACA,kGACN,EACI,KAAM,CACJ,UACA,UACA,eACA,cACA,WACA,iBACN,CACA,EAEE,uBAAwB,CACtB,GAAI,uBACJ,MAAO,2BACP,YACE,4NACF,KAAM,IACN,WAAY,eACZ,cAAe,GACf,MAAO,UACP,UAAW,CACT,CACE,GAAI,uBACJ,MAAO,uBACP,YACE,uKACF,WAAY,cACpB,EACM,CACE,GAAI,gBACJ,MAAO,6BACP,YACE,6JACF,WAAY,UACpB,EACM,CACE,GAAI,qBACJ,MAAO,yBACP,YACE,+JACF,WAAY,cACpB,EACM,CACE,GAAI,0BACJ,MAAO,gCACP,YACE,8KACF,WAAY,UACpB,EACM,CACE,GAAI,iCACJ,MAAO,0CACP,YACE,wLACF,WAAY,UACpB,EACM,CACE,GAAI,gCACJ,MAAO,gCACP,YACE,6JACF,WAAY,cACpB,CACA,EACI,mBAAoB,CAClB,uGACA,sGACA,+EACA,gGACA,+FACN,EACI,KAAM,CACJ,iBACA,iBACA,YACA,aACA,oBACA,uBACN,CACA,EAEE,kBAAmB,CACjB,GAAI,kBACJ,MAAO,sBACP,YACE,+NACF,KAAM,KACN,WAAY,WACZ,cAAe,GACf,MAAO,UACP,UAAW,CACT,CACE,GAAI,4BACJ,MAAO,4BACP,YACE,kLACF,WAAY,UACpB,EACM,CACE,GAAI,uBACJ,MAAO,uBACP,YACE,mKACF,WAAY,UACpB,EACM,CACE,GAAI,0BACJ,MAAO,0BACP,YACE,6JACF,WAAY,UACpB,EACM,CACE,GAAI,0BACJ,MAAO,0BACP,YACE,iKACF,WAAY,UACpB,EACM,CACE,GAAI,0BACJ,MAAO,iCACP,YACE,mJACF,WAAY,UACpB,EACM,CACE,GAAI,6BACJ,MAAO,6BACP,YACE,6JACF,WAAY,UACpB,CACA,EACI,mBAAoB,CAClB,iFACA,uEACA,2EACA,8EACA,iGACN,EACI,KAAM,CACJ,WACA,gBACA,aACA,aACA,iBACA,gBACN,CACA,EAEE,wBAAyB,CACvB,GAAI,wBACJ,MAAO,4BACP,YACE,uOACF,KAAM,KACN,WAAY,WACZ,cAAe,GACf,MAAO,UACP,UAAW,CACT,CACE,GAAI,sBACJ,MAAO,sBACP,YACE,sLACF,WAAY,UACpB,EACM,CACE,GAAI,YACJ,MAAO,YACP,YACE,kLACF,WAAY,UACpB,EACM,CACE,GAAI,sBACJ,MAAO,0BACP,YACE,0KACF,WAAY,UACpB,EACM,CACE,GAAI,oBACJ,MAAO,oBACP,YACE,8LACF,WAAY,UACpB,EACM,CACE,GAAI,qBACJ,MAAO,wBACP,YACE,0LACF,WAAY,UACpB,EACM,CACE,GAAI,uBACJ,MAAO,uBACP,YACE,2KACF,WAAY,UACpB,CACA,EACI,mBAAoB,CAClB,iGACA,8EACA,0DACA,uEACA,4FACN,EACI,KAAM,CACJ,aACA,UACA,iBACA,gBACA,iBACA,cACN,CACA,EAEE,qBAAsB,CACpB,GAAI,qBACJ,MAAO,yBACP,YACE,kOACF,KAAM,KACN,WAAY,eACZ,cAAe,GACf,MAAO,UACP,UAAW,CACT,CACE,GAAI,iBACJ,MAAO,6BACP,YACE,+LACF,WAAY,cACpB,EACM,CACE,GAAI,oBACJ,MAAO,uBACP,YACE,gMACF,WAAY,cACpB,EACM,CACE,GAAI,iBACJ,MAAO,yBACP,YACE,iLACF,WAAY,UACpB,EACM,CACE,GAAI,qBACJ,MAAO,qBACP,YACE,iLACF,WAAY,UACpB,EACM,CACE,GAAI,0BACJ,MAAO,0BACP,YACE,wKACF,WAAY,cACpB,EACM,CACE,GAAI,2BACJ,MAAO,2BACP,YACE,4KACF,WAAY,cACpB,CACA,EACI,mBAAoB,CAClB,4FACA,0FACA,gGACA,sGACA,4GACN,EACI,KAAM,CACJ,eACA,YACA,kBACA,oBACA,gBACA,SACN,CACA,EAEE,kBAAmB,CACjB,GAAI,kBACJ,MAAO,sBACP,YACE,oOACF,KAAM,KACN,WAAY,WACZ,cAAe,GACf,MAAO,UACP,UAAW,CACT,CACE,GAAI,2BACJ,MAAO,2BACP,YACE,+KACF,WAAY,UACpB,EACM,CACE,GAAI,wBACJ,MAAO,gCACP,YACE,+KACF,WAAY,cACpB,EACM,CACE,GAAI,uBACJ,MAAO,6BACP,YACE,8KACF,WAAY,UACpB,EACM,CACE,GAAI,yBACJ,MAAO,yBACP,YACE,8KACF,WAAY,UACpB,EACM,CACE,GAAI,gCACJ,MAAO,gCACP,YACE,uKACF,WAAY,UACpB,EACM,CACE,GAAI,6BACJ,MAAO,6BACP,YACE,0LACF,WAAY,UACpB,CACA,EACI,mBAAoB,CAClB,yFACA,wFACA,yFACA,4EACA,4EACN,EACI,KAAM,CACJ,iBACA,aACA,aACA,gBACA,sBACA,oBACN,CACA,EAEE,aAAc,CACZ,GAAI,aACJ,MAAO,aACP,YACE,+NACF,KAAM,KACN,WAAY,eACZ,cAAe,GACf,MAAO,UACP,UAAW,CACT,CACE,GAAI,uBACJ,MAAO,0BACP,YACE,qMACF,WAAY,cACpB,EACM,CACE,GAAI,wBACJ,MAAO,wBACP,YACE,6KACF,WAAY,cACpB,EACM,CACE,GAAI,4BACJ,MAAO,iCACP,YACE,wMACF,WAAY,UACpB,EACM,CACE,GAAI,yBACJ,MAAO,yBACP,YACE,+LACF,WAAY,cACpB,EACM,CACE,GAAI,gCACJ,MAAO,gCACP,YACE,2MACF,WAAY,UACpB,EACM,CACE,GAAI,+BACJ,MAAO,+BACP,YACE,yMACF,WAAY,UACpB,CACA,EACI,mBAAoB,CAClB,6FACA,sFACA,gGACA,qFACA,oFACN,EACI,KAAM,CACJ,SACA,WACA,aACA,cACA,uBACA,oBACN,CACA,CACA,EAGO,SAASC,IAAmB,CACjC,OAAO,OAAO,OAAOD,EAAkB,CACzC,CAgBO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AAc,2BACd,cAAe,MACf,OAAQ,CACN,MAAO,CACL,MAAO,mBACP,cAAe,MACf,MAAO,uDACP,cAAe,KACvB,EACM,MAAO,CACL,MAAO,mBACP,cAAe,KACf,MAAO,6DACP,cAAe,QACvB,EACM,MAAO,CACL,MAAO,wBACP,cAAe,KACf,MAAO,4DACP,cAAe,MACvB,CACA,CACA,EAEE,gBAAiB,CACf,aAAc,kBACd,cAAe,IACf,OAAQ,CACN,MAAO,CACL,MAAO,iBACP,cAAe,KACf,MAAO,mEACP,cAAe,KACvB,EACM,MAAO,CACL,MAAO,oBACP,cAAe,KACf,MAAO,6DACP,cAAe,QACvB,EACM,MAAO,CACL,MAAO,mBACP,cAAe,KACf,MAAO,0EACP,cAAe,MACvB,CACA,CACA,EAEE,eAAgB,CACd,aAAc,eACd,cAAe,KACf,OAAQ,CACN,MAAO,CACL,MAAO,mBACP,cAAe,KACf,MAAO,uEACP,cAAe,KACvB,EACM,MAAO,CACL,MAAO,kBACP,cAAe,KACf,MAAO,mEACP,cAAe,QACvB,EACM,MAAO,CACL,MAAO,mBACP,cAAe,KACf,MAAO,mEACP,cAAe,MACvB,CACA,CACA,EAEE,uBAAwB,CACtB,aAAc,yBACd,cAAe,KACf,OAAQ,CACN,MAAO,CACL,MAAO,iBACP,cAAe,MACf,MAAO,uDACP,cAAe,KACvB,EACM,MAAO,CACL,MAAO,eACP,cAAe,MACf,MAAO,4DACP,cAAe,QACvB,EACM,MAAO,CACL,MAAO,kBACP,cAAe,KACf,MAAO,gEACP,cAAe,MACvB,CACA,CACA,EAEE,gBAAiB,CACf,aAAc,gBACd,cAAe,KACf,OAAQ,CACN,MAAO,CACL,MAAO,gBACP,cAAe,KACf,MAAO,2DACP,cAAe,KACvB,EACM,MAAO,CACL,MAAO,mBACP,cAAe,MACf,MAAO,yDACP,cAAe,QACvB,EACM,MAAO,CACL,MAAO,kBACP,cAAe,KACf,MAAO,+CACP,cAAe,MACvB,CACA,CACA,EAEE,aAAc,CACZ,aAAc,aACd,cAAe,KACf,OAAQ,CACN,MAAO,CACL,MAAO,sBACP,cAAe,KACf,MAAO,0EACP,cAAe,KACvB,EACM,MAAO,CACL,MAAO,sBACP,cAAe,KACf,MAAO,oEACP,cAAe,QACvB,EACM,MAAO,CACL,MAAO,oBACP,cAAe,IACf,MAAO,0EACP,cAAe,MACvB,CACA,CACA,EAEE,uBAAwB,CACtB,aAAc,2BACd,cAAe,IACf,OAAQ,CACN,MAAO,CACL,MAAO,wBACP,cAAe,KACf,MAAO,8DACP,cAAe,KACvB,EACM,MAAO,CACL,MAAO,sBACP,cAAe,KACf,MAAO,6DACP,cAAe,QACvB,EACM,MAAO,CACL,MAAO,oBACP,cAAe,MACf,MAAO,2DACP,cAAe,MACvB,CACA,CACA,EAEE,+BAAgC,CAC9B,aAAc,+BACd,cAAe,KACf,OAAQ,CACN,MAAO,CACL,MAAO,qBACP,cAAe,KACf,MAAO,+DACP,cAAe,KACvB,EACM,MAAO,CACL,MAAO,wBACP,cAAe,MACf,MAAO,mEACP,cAAe,QACvB,EACM,MAAO,CACL,MAAO,2BACP,cAAe,KACf,MAAO,iFACP,cAAe,MACvB,CACA,CACA,EAEE,kBAAmB,CACjB,aAAc,sBACd,cAAe,KACf,OAAQ,CACN,MAAO,CACL,MAAO,kBACP,cAAe,KACf,MAAO,4DACP,cAAe,KACvB,EACM,MAAO,CACL,MAAO,yBACP,cAAe,KACf,MAAO,6DACP,cAAe,QACvB,EACM,MAAO,CACL,MAAO,0BACP,cAAe,KACf,MAAO,4EACP,cAAe,MACvB,CACA,CACA,EAEE,wBAAyB,CACvB,aAAc,4BACd,cAAe,KACf,OAAQ,CACN,MAAO,CACL,MAAO,qBACP,cAAe,KACf,MAAO,wDACP,cAAe,KACvB,EACM,MAAO,CACL,MAAO,sBACP,cAAe,KACf,MAAO,iEACP,cAAe,QACvB,EACM,MAAO,CACL,MAAO,kBACP,cAAe,IACf,MAAO,6DACP,cAAe,MACvB,CACA,CACA,EAEE,qBAAsB,CACpB,aAAc,yBACd,cAAe,KACf,OAAQ,CACN,MAAO,CACL,MAAO,sBACP,cAAe,KACf,MAAO,wDACP,cAAe,KACvB,EACM,MAAO,CACL,MAAO,oBACP,cAAe,KACf,MAAO,qDACP,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","names":["NOTIFICATION_TOAST_CONSTANTS","NotificationToast","options","type","title","message","duration","closable","onClose","id","toast","icon","icons","toastData","progressBar","element","timeoutId","titleEl","content","newTitle","messageEl","newMessage","cls","announcement","liveRegion","text","div","ModalUtility","footer","closeOnBackdrop","closeOnEscape","BASE_36","RANDOM_STRING_LENGTH","closeBtn","e","modalDialog","firstFocusable","inert","child","modal","logger","backdrop","hasVisibleContent","hasActiveModal","simulationModal","dialog","body","modalId","bodyEl","footerEl","LESSON_TIMING","EducatorToolkit","subject","gradeLevel","scenario","activity","standards","standard","alignment","strategies","questions","q","generator","tags","alignments","tag","difficulty","tools","grade","baseObjectives","objectives","adapter","obj","LAB_CONSTANTS","DigitalScienceLab","simulateAI","stationId","config","experimentId","data","toolId","toolkit","relevantStations","experiments","SCENARIO_CONSTANTS","ScenarioGenerator","domain","ageGroup","templates","adaptations","baseScenario","s","adaptedScenario","_options","baseChoices","choices","choice","pro","con","languageLevel","_scenario","_adaptations","stakeholders","_adaptationLevel","dilemmas","_complexityLevel","caseStudy","_ageGroup","count","scenarios","i","error","fallbackScenarios","CANVAS_CONSTANTS","PERFORMANCE_THRESHOLDS","KB_SIZE","MEMORY_CONSTANTS","COMPUTED_CONSTANTS","CANVAS_EVENTS","CanvasTheme","prefersHighContrast","prefersReducedMotion","theme","currentTheme","CanvasPerformanceMonitor","operationId","startTime","metric","threshold","opId","__publicField","CanvasError","context","originalError","CanvasManager","contrastQuery","motionQuery","handleThemeChange","event","style","canvasId","canvasData","engine","canvas","width","height","container","className","accessibility","responsive","touchSupport","ariaLabel","validatedWidth","validatedHeight","themeStyle","accessibilityOptions","role","description","descId","descElement","engineOptions","enhancedOptions","VisualEngine","__vitePreload","renderTime","priority","ctx","cleanupError","engineCleanupPromises","canvasCleanupPromises","observer","totalMemory","pixelData","oldWidth","oldHeight","engineError","resizeTimeout","debouncedResize","entries","entry","resizeObserver","targetElement","now","maxAge","cleanedCount","age","recoveryError","callback","listeners","index","canvasManager","FOCUS_CONSTANTS","FOCUSABLE_SELECTORS","FocusStack","FocusManager","focusable","fallbackToBody","delay","preventScroll","method","resolve","keyboardOnly","autoFocus","restoreFocus","trapId","trapHandler","firstElement","lastElement","currentElement","_event","selector","wrap","orientation","items","currentIndex","newIndex","focusManager","ScrollManager","target","behavior","offset","respectReducedMotion","modalContainer","modalScrollContainer","elementRect","containerRect","currentScrollTop","elementTopInModal","targetScrollTop","scrollContainer","targetPosition","propertyName","startPosition","distance","animation","currentTime","timeElapsed","progress","ease","currentPosition","func","args","scrollManager","InfiniteLoopDetector","functionName","key","recentCalls","time","stack","lines","functionPattern","stackLines","functionNames","line","match","nameCount","maxRepeats","repeatedFunction","name","details","reason","el","stats","sortedCalls","a","b","recentCount","t","enabled","loopDetector","methodName","original","originalMethod","SIMULATION_INFO","getSimulationInfo","simulationId","simulationInfo","DEFAULT_CHART_SIZE","ANIMATION_DURATION","MAX_SCORE","MIN_SCORE","NEUTRAL_SCORE","POSITIVE_THRESHOLD","MODAL_LABEL_MAX_LENGTH","SCALE_PERCENTAGE","MOBILE_BREAKPOINT","ETHICAL_AXES","DEFAULT_SCORES","RadarChart","containerId","axesLabels","axis","axesData","gradientColors","activeElements","axisKey","axisInfo","score","impact","value","label","avgScore","backgroundColor","borderColor","points","scoreUpdates","answerImpact","updates","delta","scores","reject","script","activeElement","currentActiveElements","rect","touch","chartType","getEthicsGlossary","getRadarChartExplanation","DEFAULT_SCENARIO_DURATION","UPDATE_DELAY","PreLaunchModal","category","forceDestroy","info","note","objective","prereq","radarInfo","glossary","feature","dimension","tip","item","resource","simId","resources","question","hamburgerButton","tabButtonsContainer","isExpanded","tabButtons","tabContainer","tabNavigation","updateScrollIndicators","scrollLeft","scrollWidth","clientWidth","canScrollLeft","canScrollRight","button","tabId","startButton","cancelButton","targetSimId","link","btn","targetButton","currentLabel","buttonText","targetContent","str","paragraph","simInfo","simpleAnalytics","EnhancedSimulationModal","TIMING","expandBtn","panel","resetBtn","pauseBtn","tabName","isActive","simulationArea","isPaused","status","statusIndicator","decisionsElement","timeElement","conceptsElement","decision","timeline","decisionElement","BREAKPOINTS","resourcePanel","focusableElements","lastFocusable","seconds","mins","secs","eventName","REFLECTION_STEPS","PostSimulationModal","performance","titles","decisions","ethicalChoices","d","PERFORMANCE","totalChoices","ratio","step","Helpers","baseQuestions","option","modalElement","contentElement","footerElement","progressElement","progressSteps","averageScore","sum","reflectionRecord","userProgress","MODAL_FOOTER_CONSTANTS","ModalFooterManager","checkOverflow","hasHorizontalOverflow","hasVerticalOverflow","buttons","handleResponsiveLayout","footerWidth","isMobile","isSmallMobile","totalButtonWidth","gapWidth","padding","needsStacking","primaryButton","leftIndicator","rightIndicator","isAtStart","isAtEnd","indicator","mutations","mutation","node","footers","ETHICAL_CATEGORIES","getAllCategories","getCategoryProgress","categoryId","totalScenarios","categoryProgress","completedScenarios","getCategoryScenarios","ScenarioDataManager","fileName","module","__variableDynamicImportRuntimeHelper","scenarioId","cacheKey","required","field","optionRequired","scenarioDataManager","CURSOR_REMOVE_DELAY","typewriterEffect","speed","cursor","onComplete","textArray","typeTimer","currentText","cursorSpan","typewriterSequence","elements","RADAR_CHART_MAX_SCORE","RADAR_CHART_NEUTRAL_SCORE","ScenarioModal","chartInstance","categoryInfo","c","categoryTitle","html","chartContainer","attempts","maxAttempts","retryDelay","neutralScores","closeButton","card","confirmButton","optionId","opt","impactScores","neutralScore","impactValue","completionData","closedEvent","CLOSE_BUFFER","dilemmaElement","ethicalQuestionElement","scenarioContent","dilemmaText","ethicalQuestionText","BADGE_TIERS","CURRENT_TIER_COUNT","ACTIVE_BADGE_TIERS","BADGE_CONFIGURATIONS","GLOW_INTENSITY_CLASSES","getBadgeConfig","tier","categoryConfig","tierKey","badgeConfig","getNextBadgeTier","completedCount","BadgeManager","stored","_scenarioId","completionCount","scenarioKey","newlyEarnedBadges","newlyEarned","categoryBadges","badgeInfo","earnedBadges","nextTier","nextBadge","allStates","total","badge","badgeManager","JSConfetti","loadConfetti","BadgeModal","returnContext","categoryEmoji","badgeTier","ConfettiClass","timestamp","glowClass","tierText","reasonText","shield","sidekick","quote","particlesContainer","particleCount","particle","size","left","animationDelay","animationDuration","drift","modalBackdrop","sidekickEmoji","bubblesContainer","bubble","driftX","quoteElement","charIndex","typeSpeed","typeCharacter","badgeModal","PROGRESS_CIRCLE_CIRCUMFERENCE","HIGHLIGHT_DURATION","BADGE_DELAY_MS","TOOLTIP_OFFSET","MOBILE_TOOLTIP_DURATION","CategoryGrid","categorySection","section","isCompleted","ring","tooltip","tooltipEl","tooltipRect","topPosition","scenarioCard","parentBackdrop","selectedOption","cat","completed","checkBadges","newBadges","ms","filter","filtered","remaining","badgeProgress","isOneScenarioAwayFromBadge","tooltipContent","_OnboardingTour","educatorTab","navEducatorsTab","simpleStorage","tutorialNumber","orphanedOverlays","orphanedSpotlights","orphanedCoachMarks","position","retryCount","MAX_POSITION_RETRIES","coachMarkRect","viewportHeight","viewportWidth","spacing","top","targetRect","mobileCoachMarkHeight","spaceAbove","spaceBelow","minLeft","maxLeft","minTop","maxTop","finalRect","isVisible","tutorial","stepNumber","totalSteps","totalTutorials","_","isFirstStep","isLastStep","isLastTutorial","hasUserAction","action","firstButton","clickHandler","optionClickListener","clickedElement","condition","checkCondition","conditionMet","scenarioModal","preLaunchModal","previousTutorial","modalClosed","visibleModals","modalTitle","isPreLaunchModal","cancelButtons","modalsBefore","modalsAfter","heroChart","checkModalClosed","otherModals","hasOpenModal","checkAccordionOpen","optionDetails","existingTour","tour","shouldUpdate","modalBody","modalRect","OnboardingTour","APP_CONSTANTS","AppDebug","AIEthicsApp","savedPreferences","userPreferences","header","lastScrollY","handleScroll","currentScrollY","ticking","throttledHandleScroll","reducedMotionQuery","highContrastQuery","newPreferences","themeColorMeta","highContrastBtn","largeTextBtn","reducedMotionBtn","userMessage","isRecoverable","errorContent","retryBtn","reportBtn","errorReport","AnimationManager","AccessibilityManager","simulation","curriculumAlignment","assessmentTools","generatedScenarios","simConfig","ethicsDemo","EthicsRadarDemo","startLearningBtn","testScenarioBtn","tourBtn","navToggle","mainNav","navBackdrop","nextBtn","sim","simulationContainer","basicScenarios","EthicsSimulation","enhancedModal","modalOptions","enhancedContainer","originalContainer","mainContent","simulationData","simulationInfo$1","simData","readingContainer","videosContainer","video","questionsContainer","ethicsContainer","term","definition","conceptsContainer","keyTerms","surpriseMeBtn","randomScenario","allCategories","uncompletedScenarios","randomIndex","navLinks","toggleNav","isOpen","isCurrentlyOpen","shouldOpen","firstNavLink","href","moveFocusAndCloseNav","DESKTOP_BREAKPOINT","initializeMegaMenu","megaMenuTrigger","megaMenuDropdown","megaMenu","searchInput","searchTerm","menuItems","visibleCount","noResultsMsg","clearSearch","categoryElement","simulationsSection","viewAllLink","navElement","_toggleButton","focusableSelectors","categoriesSection","fallbackError","pattern","patterns","feedbackContainer","popoverContent","popoverHideTimeout","feedback","currentActivePattern","buttonElement","updateButtonStates","positionPopoverAboveButton","buttonRect","controlsRect","leftOffset","activePattern","patternName","accordion","radarContent","glossaryContent","app","CardComponent","actions","headerEl","contentEl","actionsEl","LoaderSpinner","shadow","wrapper","oldValue","newValue","CustomInput","input","CustomButton"],"ignoreList":[],"sources":["../../src/js/components/notification-toast.js","../../src/js/components/modal-utility.js","../../src/js/core/educator-toolkit.js","../../src/js/core/digital-science-lab.js","../../src/js/core/scenario-generator.js","../../src/js/utils/canvas-manager.js","../../src/js/utils/focus-manager.js","../../src/js/utils/scroll-manager.js","../../src/js/utils/infinite-loop-detector.js","../../src/js/data/simulation-info.js","../../src/js/components/radar-chart.js","../../src/js/utils/ethics-glossary.js","../../src/js/components/pre-launch-modal.js","../../src/js/components/enhanced-simulation-modal.js","../../src/js/components/post-simulation-modal.js","../../src/js/components/modal-footer-manager.js","../../src/data/categories.js","../../src/js/data/scenario-data-manager.js","../../src/js/utils/typewriter.js","../../src/js/components/scenario-modal.js","../../src/js/data/badge-config.js","../../src/js/core/badge-manager.js","../../src/js/components/badge-modal.js","../../src/js/components/category-grid.js","../../src/js/components/onboarding-tour.js","../../src/js/app.js","../../src/js/components/card-component.js","../../src/js/components/loader-spinner.js","../../src/js/components/form-input-components.js"],"sourcesContent":["/**\n * Notification/Toast Component\n * Provides accessible, customizable toast notifications\n */\n\n// Constants for notification toast management\nconst NOTIFICATION_TOAST_CONSTANTS = {\n  DURATIONS: {\n    DEFAULT: 5000,\n    ERROR: 8000,\n    ANNOUNCEMENT_CLEAR: 1000,\n  },\n  ANIMATION: {\n    HIDE_DELAY: 300,\n  },\n  ID_GENERATION: {\n    BASE: 36,\n    SUBSTRING_START: 2,\n    SUBSTRING_LENGTH: 9,\n  },\n  TYPES: {\n    SUCCESS: 'success',\n    ERROR: 'error',\n    WARNING: 'warning',\n    INFO: 'info',\n  },\n  PROGRESS: {\n    FULL_WIDTH: '100%',\n    EMPTY_WIDTH: '0%',\n  },\n};\n\nclass NotificationToast {\n  constructor() {\n    this.container = null;\n    this.toasts = new Map();\n    this.init();\n  }\n\n  init() {\n    // Create toast container\n    this.container = document.createElement('div');\n    this.container.className = 'toast-container';\n    this.container.setAttribute('aria-live', 'polite');\n    this.container.setAttribute('aria-label', 'Notifications');\n    document.body.appendChild(this.container);\n  }\n\n  /**\n   * Show a toast notification\n   * @param {Object} options - Toast options\n   * @param {string} options.type - Toast type: 'success', 'error', 'warning', 'info'\n   * @param {string} options.title - Toast title\n   * @param {string} options.message - Toast message\n   * @param {number} options.duration - Auto-dismiss duration in ms (0 = no auto-dismiss)\n   * @param {boolean} options.closable - Whether the toast can be manually closed\n   * @param {Function} options.onClose - Callback when toast is closed\n   * @returns {string} Toast ID\n   */\n  show(options = {}) {\n    const {\n      type = NOTIFICATION_TOAST_CONSTANTS.TYPES.INFO,\n      title = '',\n      message = '',\n      duration = NOTIFICATION_TOAST_CONSTANTS.DURATIONS.DEFAULT,\n      closable = true,\n      onClose = null,\n    } = options;\n\n    const id = this.generateId();\n    const toast = this.createToast(id, type, title, message, closable);\n\n    this.toasts.set(id, {\n      element: toast,\n      duration,\n      onClose,\n      timeoutId: null,\n    });\n\n    this.container.appendChild(toast);\n\n    // Trigger show animation\n    requestAnimationFrame(() => {\n      toast.classList.add('show');\n    });\n\n    // Auto-dismiss if duration is set\n    if (duration > 0) {\n      this.setAutoDismiss(id, duration);\n    }\n\n    // Announce to screen readers\n    this.announceToast(title, message);\n\n    return id;\n  }\n\n  createToast(id, type, title, message, closable) {\n    const toast = document.createElement('div');\n    toast.className = `toast ${type}`;\n    toast.setAttribute('data-toast-id', id);\n    toast.setAttribute('role', 'alert');\n    toast.setAttribute('aria-live', 'assertive');\n\n    const icon = this.getIcon(type);\n\n    toast.innerHTML = `\n            <div class=\"toast-icon\" aria-hidden=\"true\">${icon}</div>\n            <div class=\"toast-content\">\n                ${title ? `<div class=\"toast-title\">${this.escapeHtml(title)}</div>` : ''}\n                ${message ? `<div class=\"toast-message\">${this.escapeHtml(message)}</div>` : ''}\n            </div>\n            ${\n              closable\n                ? `\n                <button class=\"toast-close\" type=\"button\" aria-label=\"Close notification\">\n                    ×\n                </button>\n            `\n                : ''\n            }\n            <div class=\"toast-progress\">\n                <div class=\"toast-progress-bar\" style=\"width: ${NOTIFICATION_TOAST_CONSTANTS.PROGRESS.FULL_WIDTH}\"></div>\n            </div>\n        `;\n\n    // Add close button event listener\n    if (closable) {\n      const closeBtn = toast.querySelector('.toast-close');\n      closeBtn.addEventListener('click', () => this.dismiss(id));\n    }\n\n    return toast;\n  }\n\n  getIcon(type) {\n    const icons = {\n      [NOTIFICATION_TOAST_CONSTANTS.TYPES.SUCCESS]: '✓',\n      [NOTIFICATION_TOAST_CONSTANTS.TYPES.ERROR]: '!',\n      [NOTIFICATION_TOAST_CONSTANTS.TYPES.WARNING]: '⚠',\n      [NOTIFICATION_TOAST_CONSTANTS.TYPES.INFO]: 'i',\n    };\n    return icons[type] || icons[NOTIFICATION_TOAST_CONSTANTS.TYPES.INFO];\n  }\n\n  setAutoDismiss(id, duration) {\n    const toastData = this.toasts.get(id);\n    if (!toastData) return;\n\n    const progressBar = toastData.element.querySelector('.toast-progress-bar');\n\n    // Animate progress bar\n    if (progressBar) {\n      progressBar.style.transition = `width ${duration}ms linear`;\n      progressBar.style.width =\n        NOTIFICATION_TOAST_CONSTANTS.PROGRESS.EMPTY_WIDTH;\n    }\n\n    toastData.timeoutId = setTimeout(() => {\n      this.dismiss(id);\n    }, duration);\n  }\n\n  /**\n   * Dismiss a toast notification\n   * @param {string} id - Toast ID\n   */\n  dismiss(id) {\n    const toastData = this.toasts.get(id);\n    if (!toastData) return;\n\n    const { element, timeoutId, onClose } = toastData;\n\n    // Clear auto-dismiss timer\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n\n    // Add hide animation\n    element.classList.add('hide');\n    element.classList.remove('show');\n\n    // Remove from DOM after animation\n    setTimeout(() => {\n      if (element.parentNode) {\n        element.parentNode.removeChild(element);\n      }\n      this.toasts.delete(id);\n\n      // Call onClose callback\n      if (onClose && typeof onClose === 'function') {\n        onClose(id);\n      }\n    }, NOTIFICATION_TOAST_CONSTANTS.ANIMATION.HIDE_DELAY);\n  }\n\n  /**\n   * Dismiss all toast notifications\n   */\n  dismissAll() {\n    const ids = Array.from(this.toasts.keys());\n    ids.forEach(id => this.dismiss(id));\n  }\n\n  /**\n   * Update an existing toast\n   * @param {string} id - Toast ID\n   * @param {Object} options - New options\n   */\n  update(id, options = {}) {\n    const toastData = this.toasts.get(id);\n    if (!toastData) return;\n\n    const { title, message, type } = options;\n    const { element } = toastData;\n\n    if (type && type !== this.getCurrentType(element)) {\n      element.className = `toast ${type} show`;\n      const icon = element.querySelector('.toast-icon');\n      if (icon) {\n        icon.textContent = this.getIcon(type);\n      }\n    }\n\n    if (title !== undefined) {\n      const titleEl = element.querySelector('.toast-title');\n      if (titleEl) {\n        titleEl.textContent = title;\n      } else if (title) {\n        const content = element.querySelector('.toast-content');\n        const newTitle = document.createElement('div');\n        newTitle.className = 'toast-title';\n        newTitle.textContent = title;\n        content.insertBefore(newTitle, content.firstChild);\n      }\n    }\n\n    if (message !== undefined) {\n      const messageEl = element.querySelector('.toast-message');\n      if (messageEl) {\n        messageEl.textContent = message;\n      } else if (message) {\n        const content = element.querySelector('.toast-content');\n        const newMessage = document.createElement('div');\n        newMessage.className = 'toast-message';\n        newMessage.textContent = message;\n        content.appendChild(newMessage);\n      }\n    }\n  }\n\n  getCurrentType(element) {\n    const classes = element.className.split(' ');\n    return (\n      classes.find(cls =>\n        [\n          NOTIFICATION_TOAST_CONSTANTS.TYPES.SUCCESS,\n          NOTIFICATION_TOAST_CONSTANTS.TYPES.ERROR,\n          NOTIFICATION_TOAST_CONSTANTS.TYPES.WARNING,\n          NOTIFICATION_TOAST_CONSTANTS.TYPES.INFO,\n        ].includes(cls)\n      ) || NOTIFICATION_TOAST_CONSTANTS.TYPES.INFO\n    );\n  }\n\n  announceToast(title, message) {\n    const announcement = [title, message].filter(Boolean).join(': ');\n    if (announcement) {\n      // Use existing ARIA live region\n      const liveRegion = document.getElementById('aria-live-polite');\n      if (liveRegion) {\n        liveRegion.textContent = announcement;\n        // Clear after announcement\n        setTimeout(() => {\n          liveRegion.textContent = '';\n        }, NOTIFICATION_TOAST_CONSTANTS.DURATIONS.ANNOUNCEMENT_CLEAR);\n      }\n    }\n  }\n\n  generateId() {\n    return `toast-${Date.now()}-${Math.random().toString(NOTIFICATION_TOAST_CONSTANTS.ID_GENERATION.BASE).substr(NOTIFICATION_TOAST_CONSTANTS.ID_GENERATION.SUBSTRING_START, NOTIFICATION_TOAST_CONSTANTS.ID_GENERATION.SUBSTRING_LENGTH)}`;\n  }\n\n  escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n\n  /**\n   * Convenience methods\n   */\n  success(title, message, options = {}) {\n    return this.show({\n      ...options,\n      type: NOTIFICATION_TOAST_CONSTANTS.TYPES.SUCCESS,\n      title,\n      message,\n    });\n  }\n\n  error(title, message, options = {}) {\n    return this.show({\n      ...options,\n      type: NOTIFICATION_TOAST_CONSTANTS.TYPES.ERROR,\n      title,\n      message,\n      duration:\n        options.duration || NOTIFICATION_TOAST_CONSTANTS.DURATIONS.ERROR,\n    });\n  }\n\n  warning(title, message, options = {}) {\n    return this.show({\n      ...options,\n      type: NOTIFICATION_TOAST_CONSTANTS.TYPES.WARNING,\n      title,\n      message,\n    });\n  }\n\n  info(title, message, options = {}) {\n    return this.show({\n      ...options,\n      type: NOTIFICATION_TOAST_CONSTANTS.TYPES.INFO,\n      title,\n      message,\n    });\n  }\n}\n\n// Create global instance\nwindow.NotificationToast = new NotificationToast();\n\n// Export for module usage\nexport default NotificationToast;\n","/**\n * Simple Modal Utility using advanced-ui-components.css modal system\n * Replacement for ReusableModal to consolidate modal implementations\n */\n\nimport logger from '../utils/logger.js';\n\nclass ModalUtility {\n  constructor({\n    title = '',\n    content = '',\n    footer = '',\n    onClose = null,\n    closeOnBackdrop = true,\n    closeOnEscape = true,\n  } = {}) {\n    this.title = title;\n    this.content = content;\n    this.footer = footer;\n    this.onClose = onClose;\n    this.closeOnBackdrop = closeOnBackdrop;\n    this.closeOnEscape = closeOnEscape;\n    this.isOpen = false;\n    this.element = null;\n    \n    // Generate unique ID using timestamp and random string\n    const BASE_36 = 36;\n    const RANDOM_STRING_LENGTH = 9;\n    this.id = `modal-${Date.now()}-${Math.random().toString(BASE_36).substring(2, RANDOM_STRING_LENGTH + 2)}`;\n\n    this._build();\n    this._setupEventListeners();\n  }\n\n  _build() {\n    // Create modal structure using advanced-ui-components.css classes\n    this.element = document.createElement('div');\n    this.element.id = this.id;\n    this.element.className = 'modal-backdrop';\n    this.element.setAttribute('role', 'dialog');\n    this.element.setAttribute('aria-modal', 'true');\n    this.element.setAttribute('aria-labelledby', `${this.id}-title`);\n    this.element.style.display = 'none';\n    // Use inert instead of aria-hidden for better accessibility\n    this.element.inert = true;\n\n    this.element.innerHTML = `\n            <div class=\"modal-dialog\">\n                <div class=\"modal-header\">\n                    <h2 id=\"${this.id}-title\" class=\"modal-title\">${this.title}</h2>\n                    <button class=\"modal-close\" aria-label=\"Close modal\" type=\"button\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    ${this.content}\n                </div>\n                ${\n                  this.footer\n                    ? `\n                    <div class=\"modal-footer\">\n                        ${this.footer}\n                    </div>\n                `\n                    : ''\n                }\n            </div>\n        `;\n\n    document.body.appendChild(this.element);\n  }\n\n  _setupEventListeners() {\n    // Close button\n    const closeBtn = this.element.querySelector('.modal-close');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => this.close());\n    }\n\n    // Backdrop click\n    if (this.closeOnBackdrop) {\n      this.element.addEventListener('click', e => {\n        if (e.target === this.element) {\n          this.close();\n        }\n      });\n    }\n\n    // Escape key\n    if (this.closeOnEscape) {\n      this._escapeHandler = e => {\n        if (e.key === 'Escape' && this.isOpen) {\n          this.close();\n        }\n      };\n      document.addEventListener('keydown', this._escapeHandler);\n    }\n  }\n\n  open() {\n    if (this.isOpen) return;\n\n    this.isOpen = true;\n\n    // Make modal interactable first\n    this.element.inert = false;\n\n    // Show the modal\n    this.element.style.display = 'flex';\n    \n    // Check if onboarding is active and adjust modal behavior accordingly\n    const isOnboardingActive = document.body.classList.contains('onboarding-active');\n    if (isOnboardingActive) {\n      // Allow onboarding interactions by making modal backdrop less intrusive\n      this.element.style.pointerEvents = 'none';\n      // But keep the modal dialog interactive\n      const modalDialog = this.element.querySelector('.modal-dialog');\n      if (modalDialog) {\n        modalDialog.style.pointerEvents = 'auto';\n      }\n    }\n\n    // Make the rest of the page non-interactable while modal is open\n    this._setPageInert(true);\n\n    // Add visible class in next frame for CSS transition\n    requestAnimationFrame(() => {\n      this.element.classList.add('visible');\n    });\n\n    // Focus management - delay to ensure modal is visible and transition started\n    setTimeout(() => {\n      const firstFocusable = this.element.querySelector(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n      if (firstFocusable) {\n        firstFocusable.focus();\n      }\n    }, 100);\n\n    // Add body class to prevent scrolling\n    document.body.style.overflow = 'hidden';\n  }\n\n  close() {\n    if (!this.isOpen) return;\n\n    this.isOpen = false;\n    this.element.classList.remove('visible');\n\n    // Make modal non-interactable\n    this.element.inert = true;\n    \n    // Restore normal pointer events for modal\n    this.element.style.pointerEvents = '';\n    const modalDialog = this.element.querySelector('.modal-dialog');\n    if (modalDialog) {\n      modalDialog.style.pointerEvents = '';\n    }\n\n    // Restore page interactability\n    this._setPageInert(false);\n\n    // Wait for animation before hiding\n    const animationDuration = 300; // ms\n    setTimeout(() => {\n      if (!this.isOpen) {\n        // Double check in case modal was reopened\n        this.element.style.display = 'none';\n      }\n    }, animationDuration);\n\n    // Restore body scrolling\n    document.body.style.overflow = '';\n\n    // Call onClose callback if provided\n    if (this.onClose && typeof this.onClose === 'function') {\n      this.onClose();\n    }\n  }\n\n  _setPageInert(inert) {\n    // Get all direct children of body except our modal and onboarding elements\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(child => {\n      if (child !== this.element && \n          !child.classList.contains('onboarding-overlay') &&\n          !child.classList.contains('onboarding-spotlight') &&\n          !child.classList.contains('onboarding-coach-mark')) {\n        child.inert = inert;\n      }\n    });\n  }\n\n  destroy() {\n    this.close();\n\n    if (this._escapeHandler) {\n      document.removeEventListener('keydown', this._escapeHandler);\n    }\n\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n\n    this.element = null;\n  }\n\n  /**\n   * Check if modal element exists in DOM and clean up if orphaned\n   */\n  static cleanupOrphanedModals() {\n    // Clean up modals with generated IDs\n    const orphanedModals = document.querySelectorAll('[id^=\"modal-\"]:not([style*=\"display: flex\"])');\n    orphanedModals.forEach(modal => {\n      // Check if modal is hidden or has no active class\n      if (modal.style.display === 'none' || !modal.classList.contains('visible')) {\n        modal.remove();\n        logger.info('ModalUtility', 'Cleaned up orphaned modal:', modal.id);\n      }\n    });\n\n    // Clean up generic modal structure elements that may be orphaned\n    const modalBackdrops = document.querySelectorAll('.modal-backdrop');\n    modalBackdrops.forEach(backdrop => {\n      // Check if backdrop has no visible content or is empty\n      const hasVisibleContent = backdrop.querySelector('.modal-dialog .modal-body *:not(:empty)');\n      const hasActiveModal = backdrop.closest('[id^=\"modal-\"]') || backdrop.querySelector('[id^=\"modal-\"]');\n      \n      if (!hasVisibleContent && !hasActiveModal) {\n        backdrop.remove();\n        logger.info('ModalUtility', 'Cleaned up orphaned modal backdrop');\n      }\n    });\n\n    // Clean up simulation modal specifically\n    const simulationModal = document.getElementById('simulation-modal');\n    if (simulationModal) {\n      // Check if it's actually being used\n      const isVisible = simulationModal.style.display === 'flex' || \n                       simulationModal.classList.contains('show') ||\n                       simulationModal.classList.contains('visible');\n      \n      if (!isVisible) {\n        simulationModal.remove();\n        logger.info('ModalUtility', 'Cleaned up orphaned simulation modal');\n      }\n    }\n\n    // Clean up any standalone modal-dialog or modal-body elements\n    const orphanedDialogs = document.querySelectorAll('.modal-dialog:not(.modal-backdrop .modal-dialog)');\n    orphanedDialogs.forEach(dialog => {\n      if (!dialog.closest('.modal-backdrop') && !dialog.closest('[id^=\"modal-\"]')) {\n        dialog.remove();\n        logger.info('ModalUtility', 'Cleaned up orphaned modal dialog');\n      }\n    });\n\n    const orphanedBodies = document.querySelectorAll('.modal-body:not(.modal-dialog .modal-body)');\n    orphanedBodies.forEach(body => {\n      if (!body.closest('.modal-dialog') && !body.closest('[id^=\"modal-\"]')) {\n        body.remove();\n        logger.info('ModalUtility', 'Cleaned up orphaned modal body');\n      }\n    });\n  }\n\n  /**\n   * Force destroy a specific modal by ID\n   */\n  static destroyModalById(modalId) {\n    const modal = document.getElementById(modalId);\n    if (modal) {\n      modal.remove();\n      logger.info('ModalUtility', 'Force destroyed modal:', modalId);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Aggressive cleanup of all modal-related elements - use with caution\n   * This removes ALL modal elements that are not actively displayed\n   */\n  static aggressiveModalCleanup() {\n    logger.info('ModalUtility', 'Starting aggressive modal cleanup');\n    \n    // Clean up all modal backdrops that are not actively showing content\n    const allBackdrops = document.querySelectorAll('.modal-backdrop');\n    allBackdrops.forEach(backdrop => {\n      const isVisible = backdrop.style.display === 'flex' || \n                       backdrop.classList.contains('show') ||\n                       backdrop.classList.contains('visible');\n      \n      if (!isVisible) {\n        backdrop.remove();\n        logger.info('ModalUtility', 'Aggressively removed modal backdrop');\n      }\n    });\n\n    // Clean up simulation modal if not active\n    const simulationModal = document.getElementById('simulation-modal');\n    if (simulationModal) {\n      const isActive = simulationModal.style.display === 'flex' || \n                      simulationModal.classList.contains('show') ||\n                      simulationModal.classList.contains('visible');\n      \n      if (!isActive) {\n        simulationModal.remove();\n        logger.info('ModalUtility', 'Aggressively removed simulation modal');\n      }\n    }\n\n    // Clean up all orphaned modal dialogs\n    const allDialogs = document.querySelectorAll('.modal-dialog');\n    allDialogs.forEach(dialog => {\n      const hasActiveParent = dialog.closest('.modal-backdrop[style*=\"display: flex\"]') ||\n                             dialog.closest('[id^=\"modal-\"][style*=\"display: flex\"]') ||\n                             dialog.closest('.show') ||\n                             dialog.closest('.visible');\n      \n      if (!hasActiveParent) {\n        dialog.remove();\n        logger.info('ModalUtility', 'Aggressively removed modal dialog');\n      }\n    });\n\n    // Clean up all orphaned modal bodies\n    const allBodies = document.querySelectorAll('.modal-body');\n    allBodies.forEach(body => {\n      const hasActiveParent = body.closest('.modal-dialog') ||\n                             body.closest('.modal-backdrop[style*=\"display: flex\"]') ||\n                             body.closest('[id^=\"modal-\"][style*=\"display: flex\"]') ||\n                             body.closest('.show') ||\n                             body.closest('.visible');\n      \n      if (!hasActiveParent) {\n        body.remove();\n        logger.info('ModalUtility', 'Aggressively removed modal body');\n      }\n    });\n\n    // Clean up any remaining modal elements with generated IDs\n    const allGeneratedModals = document.querySelectorAll('[id^=\"modal-\"]');\n    allGeneratedModals.forEach(modal => {\n      const isVisible = modal.style.display === 'flex' || \n                       modal.classList.contains('show') ||\n                       modal.classList.contains('visible');\n      \n      if (!isVisible) {\n        modal.remove();\n        logger.info('ModalUtility', 'Aggressively removed generated modal:', modal.id);\n      }\n    });\n\n    logger.info('ModalUtility', 'Aggressive modal cleanup completed');\n  }\n\n  // Update content methods\n  setTitle(title) {\n    this.title = title;\n    const titleEl = this.element.querySelector('.modal-title');\n    if (titleEl) {\n      titleEl.textContent = title;\n    }\n  }\n\n  setContent(content) {\n    this.content = content;\n    const bodyEl = this.element.querySelector('.modal-body');\n    if (bodyEl) {\n      bodyEl.innerHTML = content;\n    }\n  }\n\n  setFooter(footer) {\n    this.footer = footer;\n    let footerEl = this.element.querySelector('.modal-footer');\n\n    if (footer) {\n      if (!footerEl) {\n        footerEl = document.createElement('div');\n        footerEl.className = 'modal-footer';\n        this.element.querySelector('.modal-dialog').appendChild(footerEl);\n      }\n      footerEl.innerHTML = footer;\n    } else if (footerEl) {\n      footerEl.remove();\n    }\n  }\n}\n\n// Export for both ES6 and global usage\nexport default ModalUtility;\n\n// Make available globally for backward compatibility\nif (typeof window !== 'undefined') {\n  window.ModalUtility = ModalUtility;\n  // TEMPORARILY COMMENTED OUT - might be causing conflicts\n  // Also provide as ReusableModal for drop-in replacement\n  // window.ReusableModal = ModalUtility;\n}\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Educator Toolkit - Comprehensive educational support system\n * Transforms SimulateAI into a complete digital science lab for AI ethics\n */\n\n// Lesson timing and structure constants\nconst LESSON_TIMING = {\n  WARMUP_DURATION: 5, // minutes\n  INTRODUCTION_DURATION: 10, // minutes\n  CLOSURE_DURATION: 10, // minutes\n  DEFAULT_LESSON_DURATION: 50, // minutes\n  OVERHEAD_TIME: 25, // total time for non-main activities (warmup + intro + closure + transitions)\n};\n\nclass EducatorToolkit {\n  constructor() {\n    this.curriculumStandards = new Map();\n    this.assessmentTools = new Map();\n    this.classroomActivities = new Map();\n    this.progressTracking = new Map();\n\n    this.initializeStandards();\n    this.setupAssessmentTools();\n    this.createClassroomActivities();\n  }\n\n  /**\n   * Initialize curriculum standards mapping\n   */\n  initializeStandards() {\n    // Computer Science Education Standards\n    this.curriculumStandards.set('csta', {\n      name: 'Computer Science Teachers Association Standards',\n      grades: {\n        'K-2': ['1A-IC-16', '1A-IC-17', '1A-IC-18'],\n        '3-5': ['1B-IC-18', '1B-IC-19', '1B-IC-20'],\n        '6-8': ['2-IC-20', '2-IC-21', '2-IC-22', '2-IC-23'],\n        '9-12': ['3A-IC-24', '3A-IC-25', '3A-IC-26', '3A-IC-27'],\n      },\n      alignment: {\n        '1A-IC-16': 'Bias and Fairness Explorer - Basic concepts',\n        '2-IC-21': 'AI decision-making consequences',\n        '3A-IC-25': 'Ethical implications of AI systems',\n      },\n    });\n\n    // Next Generation Science Standards\n    this.curriculumStandards.set('ngss', {\n      name: 'Next Generation Science Standards',\n      practices: [\n        'Asking Questions and Defining Problems',\n        'Developing and Using Models',\n        'Planning and Carrying Out Investigations',\n        'Analyzing and Interpreting Data',\n        'Using Mathematics and Computational Thinking',\n        'Constructing Explanations',\n        'Engaging in Argument from Evidence',\n        'Obtaining, Evaluating, and Communicating Information',\n      ],\n    });\n\n    // Social Studies Standards\n    this.curriculumStandards.set('ncss', {\n      name: 'National Council for Social Studies',\n      themes: [\n        'Power, Authority, and Governance',\n        'Science, Technology, and Society',\n        'Civic Ideals and Practices',\n        'Individual Development and Identity',\n      ],\n    });\n  }\n\n  /**\n   * Setup comprehensive assessment tools\n   */\n  setupAssessmentTools() {\n    // Formative Assessment Tools\n    this.assessmentTools.set('reflection-prompts', {\n      type: 'formative',\n      name: 'Reflection Prompts',\n      tools: [\n        {\n          id: 'ethical-dilemma-journal',\n          name: 'Ethical Dilemma Journal',\n          description:\n            'Students maintain ongoing reflections on AI ethics scenarios',\n          rubric: this.createReflectionRubric(),\n          templates: this.getJournalTemplates(),\n        },\n        {\n          id: 'stakeholder-analysis',\n          name: 'Stakeholder Impact Analysis',\n          description:\n            'Students analyze how AI decisions affect different groups',\n          framework: this.getStakeholderFramework(),\n        },\n        {\n          id: 'decision-tree-mapping',\n          name: 'Decision Tree Mapping',\n          description: 'Visual mapping of decision paths and consequences',\n          tools: [\n            'Flowchart templates',\n            'Digital mapping tools',\n            'Collaborative boards',\n          ],\n        },\n      ],\n    });\n\n    // Summative Assessment Tools\n    this.assessmentTools.set('project-assessments', {\n      type: 'summative',\n      name: 'Project-Based Assessments',\n      projects: [\n        {\n          id: 'ai-system-design',\n          name: 'Ethical AI System Design Challenge',\n          description:\n            'Students design an AI system with built-in ethical safeguards',\n          duration: '2-3 weeks',\n          deliverables: [\n            'Design proposal',\n            'Ethics analysis',\n            'Stakeholder presentation',\n          ],\n          rubric: this.createDesignRubric(),\n        },\n        {\n          id: 'bias-investigation',\n          name: 'Real-World Bias Investigation',\n          description: 'Research and present on actual AI bias cases',\n          duration: '1-2 weeks',\n          skills: ['Research', 'Critical analysis', 'Communication'],\n          rubric: this.createInvestigationRubric(),\n        },\n      ],\n    });\n\n    // Peer Assessment Tools\n    this.assessmentTools.set('collaborative', {\n      type: 'peer',\n      name: 'Collaborative Assessment',\n      activities: [\n        {\n          id: 'ethics-debate',\n          name: 'Structured Ethics Debates',\n          format: 'Teams argue different sides of AI ethics issues',\n          roles: [\n            'Researcher',\n            'Presenter',\n            'Rebuttal specialist',\n            'Fact-checker',\n          ],\n          rubric: this.createDebateRubric(),\n        },\n        {\n          id: 'solution-critique',\n          name: 'Peer Solution Critique',\n          format:\n            \"Students review and provide constructive feedback on peers' AI solutions\",\n          guidelines: this.getPeerReviewGuidelines(),\n        },\n      ],\n    });\n  }\n\n  /**\n   * Create diverse classroom activities\n   */\n  createClassroomActivities() {\n    // Individual Activities\n    this.classroomActivities.set('individual', [\n      {\n        id: 'scenario-explorer',\n        name: 'Personal AI Ethics Explorer',\n        description:\n          'Students work through scenarios individually, documenting their reasoning',\n        time: '20-30 minutes',\n        materials: ['Computer/tablet', 'Reflection worksheet'],\n        adaptations: {\n          elementary: 'Simplified scenarios with visual aids',\n          middle: 'Standard scenarios with guided questions',\n          high: 'Complex scenarios with open-ended analysis',\n          college: 'Real-world case studies with policy implications',\n        },\n      },\n      {\n        id: 'bias-detective',\n        name: 'AI Bias Detective Challenge',\n        description:\n          'Students identify and analyze bias in various AI applications',\n        time: '15-25 minutes',\n        skills: ['Pattern recognition', 'Critical thinking', 'Data analysis'],\n      },\n    ]);\n\n    // Small Group Activities\n    this.classroomActivities.set('small-group', [\n      {\n        id: 'stakeholder-roleplay',\n        name: 'Multi-Stakeholder Roleplay',\n        description:\n          'Groups represent different stakeholders in AI ethics scenarios',\n        time: '30-45 minutes',\n        groupSize: '3-5 students',\n        roles: [\n          'AI Developer',\n          'End User',\n          'Affected Community',\n          'Regulator',\n          'Ethicist',\n        ],\n        process: [\n          'Assign roles and provide stakeholder profiles',\n          'Give groups time to develop their position',\n          'Facilitate cross-stakeholder discussions',\n          'Debrief on different perspectives',\n        ],\n      },\n      {\n        id: 'solution-design-teams',\n        name: 'Collaborative Solution Design',\n        description: 'Teams design ethical AI solutions to real-world problems',\n        time: '45-60 minutes',\n        methodology: 'Design thinking process',\n        deliverables: [\n          'Problem definition',\n          'Solution prototype',\n          'Ethics checklist',\n        ],\n      },\n    ]);\n\n    // Whole Class Activities\n    this.classroomActivities.set('whole-class', [\n      {\n        id: 'ethics-town-hall',\n        name: 'AI Ethics Town Hall',\n        description: 'Class-wide discussion on AI policy and regulation',\n        time: '50-90 minutes',\n        format: 'Modified town hall with student moderators',\n        roles: ['Moderator', 'Panelists', 'Community members', 'Media'],\n        topics: [\n          'AI in hiring',\n          'Algorithmic content curation',\n          'Autonomous vehicles',\n        ],\n      },\n      {\n        id: 'living-algorithm',\n        name: 'Human Algorithm Simulation',\n        description:\n          'Students act as parts of an AI system to understand decision-making',\n        time: '30-40 minutes',\n        setup: 'Students represent different algorithm components',\n        learning: 'How bias enters systems and compounds',\n      },\n    ]);\n\n    // Cross-Curricular Integration\n    this.classroomActivities.set('cross-curricular', [\n      {\n        id: 'math-bias-analysis',\n        subject: 'Mathematics',\n        name: 'Statistical Bias Analysis',\n        description: 'Use math skills to identify and measure bias in datasets',\n        skills: ['Statistics', 'Data visualization', 'Probability'],\n        tools: [\n          'Spreadsheet software',\n          'Graphing tools',\n          'Statistical calculators',\n        ],\n      },\n      {\n        id: 'english-ethics-essays',\n        subject: 'English Language Arts',\n        name: 'Persuasive Ethics Essays',\n        description: 'Write persuasive essays on AI ethics topics',\n        skills: ['Argumentation', 'Research', 'Citation', 'Persuasive writing'],\n        genres: ['Opinion essays', 'Research papers', 'Policy proposals'],\n      },\n      {\n        id: 'social-studies-policy',\n        subject: 'Social Studies',\n        name: 'AI Policy Development',\n        description: 'Research and propose AI governance policies',\n        skills: [\n          'Research',\n          'Policy analysis',\n          'Civic engagement',\n          'Critical thinking',\n        ],\n        culmination: 'Present to local government or school board',\n      },\n    ]);\n  }\n\n  /**\n   * Generate lesson plan templates\n   */\n  generateLessonPlan(options = {}) {\n    const {\n      subject = 'Computer Science',\n      gradeLevel = '9-12',\n      duration = LESSON_TIMING.DEFAULT_LESSON_DURATION,\n      scenario = 'bias-fairness',\n      activity = 'scenario-explorer',\n      standards = ['csta'],\n    } = options;\n\n    return {\n      title: `AI Ethics: ${this.getScenarioTitle(scenario)}`,\n      subject,\n      gradeLevel,\n      duration: `${duration} minutes`,\n\n      // Learning Objectives\n      objectives: this.getLearningObjectives(scenario, gradeLevel),\n\n      // Standards Alignment\n      standards: this.getStandardsAlignment(standards, gradeLevel),\n\n      // Lesson Structure\n      structure: {\n        warmUp: this.getWarmUpActivity(scenario, LESSON_TIMING.WARMUP_DURATION),\n        introduction: this.getIntroduction(\n          scenario,\n          LESSON_TIMING.INTRODUCTION_DURATION\n        ),\n        mainActivity: this.getMainActivity(\n          activity,\n          duration - LESSON_TIMING.OVERHEAD_TIME\n        ),\n        closure: this.getClosureActivity(\n          scenario,\n          LESSON_TIMING.CLOSURE_DURATION\n        ),\n      },\n\n      // Materials and Resources\n      materials: this.getMaterials(activity),\n      resources: this.getAdditionalResources(scenario),\n\n      // Assessment\n      assessment: {\n        formative: this.getFormativeAssessment(activity),\n        summative: this.getSummativeAssessment(scenario),\n        rubric: this.getAssessmentRubric(activity),\n      },\n\n      // Differentiation\n      differentiation: this.getDifferentiation(gradeLevel),\n\n      // Extension Activities\n      extensions: this.getExtensionActivities(scenario),\n\n      // Reflection Questions\n      reflection: this.getReflectionQuestions(scenario, gradeLevel),\n    };\n  }\n\n  /**\n   * Get scenario title for lesson planning\n   */\n  getScenarioTitle(scenario) {\n    const titles = {\n      'bias-fairness': 'Algorithmic Bias and Fairness',\n      'privacy-security': 'Privacy and Data Security',\n      'autonomous-systems': 'Autonomous Decision Making',\n      'social-impact': 'AI Social Impact Assessment',\n      transparency: 'AI Transparency and Explainability',\n      accountability: 'AI Accountability and Governance',\n    };\n    return titles[scenario] || 'AI Ethics Exploration';\n  }\n\n  /**\n   * Get standards alignment for given standards and grade level\n   */\n  getStandardsAlignment(standards, gradeLevel) {\n    return standards.map(standard => {\n      const alignment = this.curriculumStandards.get(standard);\n      if (alignment && alignment.grades[gradeLevel]) {\n        return {\n          standard,\n          codes: alignment.grades[gradeLevel],\n          description: alignment.description,\n        };\n      }\n      return { standard, codes: [], description: 'No alignment found' };\n    });\n  }\n\n  /**\n   * Get warm-up activity for lesson\n   */\n  getWarmUpActivity(scenario, duration) {\n    const activities = {\n      'bias-fairness': `Quick Poll (${duration} min): \"Have you ever experienced or witnessed unfair treatment by a computer system or app?\" Students share briefly to activate prior knowledge.`,\n      'privacy-security': `Think-Pair-Share (${duration} min): \"What personal information do you share online daily?\" Students reflect and discuss data sharing habits.`,\n      'autonomous-systems': `Scenario Quickwrite (${duration} min): \"If a self-driving car had to choose between hitting one person or three people, what should it do?\" Students write their initial response.`,\n      'social-impact': `Media Gallery Walk (${duration} min): Display news headlines about AI impact. Students identify positive and negative impacts they observe.`,\n      transparency: `Black Box Activity (${duration} min): Present a \"mystery algorithm\" output and ask students to guess how it works to highlight the importance of transparency.`,\n      accountability: `Responsibility Web (${duration} min): Students brainstorm who should be responsible when AI makes mistakes (developers, users, companies, etc.).`,\n    };\n    return (\n      activities[scenario] ||\n      `Reflection Prompt (${duration} min): Students consider their current understanding of AI ethics and share one question they have.`\n    );\n  }\n\n  /**\n   * Get introduction activity for lesson\n   */\n  getIntroduction(scenario, duration) {\n    return `Introduction to ${this.getScenarioTitle(scenario)} (${duration} min): Present key concepts and real-world examples to establish context for the main activity.`;\n  }\n\n  /**\n   * Get main activity for lesson\n   */\n  getMainActivity(activity, duration) {\n    const activities = {\n      'scenario-explorer': `Interactive Scenario Exploration (${duration} min): Students work through AI ethics scenarios using the SimulateAI platform, documenting their decision-making process and reasoning.`,\n      'stakeholder-roleplay': `Multi-Stakeholder Roleplay (${duration} min): Students represent different stakeholders affected by AI decisions and negotiate solutions that consider all perspectives.`,\n      'bias-detective': `AI Bias Investigation (${duration} min): Students analyze real AI systems for potential bias, using provided datasets and tools to identify patterns and propose solutions.`,\n      'solution-design': `Ethical AI Design Challenge (${duration} min): Teams design AI systems with built-in ethical safeguards, presenting their solutions to the class for feedback.`,\n      'policy-debate': `Structured Policy Debate (${duration} min): Students research and debate different approaches to AI regulation and governance.`,\n    };\n    return (\n      activities[activity] ||\n      `Hands-on AI Ethics Activity (${duration} min): Students engage with interactive simulations and case studies to explore ethical implications of AI decisions.`\n    );\n  }\n\n  /**\n   * Get closure activity for lesson\n   */\n  getClosureActivity(scenario, duration) {\n    const activities = {\n      'bias-fairness': `Exit Ticket (${duration} min): \"What is one way you could check for bias in an AI system?\" Students submit their response before leaving.`,\n      'privacy-security': `Commitment Cards (${duration} min): Students write one privacy protection action they will take this week and share with a partner.`,\n      'autonomous-systems': `Ethical Principles Summary (${duration} min): Students identify the top 3 ethical principles that should guide autonomous AI systems.`,\n      'social-impact': `Solution Brainstorm (${duration} min): Students propose one actionable solution to address a negative AI impact they learned about.`,\n      transparency: `Transparency Checklist (${duration} min): Students create a 5-point checklist for evaluating AI system transparency.`,\n      accountability: `Accountability Framework (${duration} min): Students outline who should be responsible for different types of AI decisions and why.`,\n    };\n    return (\n      activities[scenario] ||\n      `Reflection and Next Steps (${duration} min): Students summarize key insights and identify areas for further exploration.`\n    );\n  }\n\n  /**\n   * Get materials needed for activity\n   */\n  getMaterials(activity) {\n    const materials = {\n      'scenario-explorer': [\n        'Computers/tablets',\n        'Internet access',\n        'SimulateAI platform',\n        'Reflection worksheets',\n        'Sticky notes',\n      ],\n      'stakeholder-roleplay': [\n        'Role cards',\n        'Scenario descriptions',\n        'Flip chart paper',\n        'Markers',\n        'Timer',\n      ],\n      'bias-detective': [\n        'Sample datasets',\n        'Analysis worksheets',\n        'Calculators/spreadsheet software',\n        'Highlighters',\n      ],\n      'solution-design': [\n        'Design thinking templates',\n        'Presentation materials',\n        'Post-it notes',\n        'Flip chart paper',\n      ],\n      'policy-debate': [\n        'Research materials',\n        'Debate format guidelines',\n        'Timer',\n        'Evaluation rubrics',\n      ],\n    };\n    return (\n      materials[activity] || [\n        'Computers/tablets',\n        'Internet access',\n        'Worksheets',\n        'Writing materials',\n      ]\n    );\n  }\n\n  /**\n   * Get additional resources for scenario\n   */\n  getAdditionalResources(scenario) {\n    const resources = {\n      'bias-fairness': [\n        'Algorithm Watch bias database',\n        'MIT Technology Review AI bias articles',\n        'Fairness in Machine Learning course materials',\n        \"Joy Buolamwini's research on algorithmic bias\",\n      ],\n      'privacy-security': [\n        'Electronic Frontier Foundation privacy guides',\n        'GDPR educational materials',\n        'Data privacy case studies',\n        'Privacy policy analysis tools',\n      ],\n      'autonomous-systems': [\n        'MIT Moral Machine Experiment',\n        'Autonomous vehicle ethics papers',\n        'Trolley problem variations',\n        'IEEE standards for autonomous systems',\n      ],\n      'social-impact': [\n        'AI Now Institute reports',\n        'Partnership on AI case studies',\n        'Social impact assessment frameworks',\n        'Community engagement best practices',\n      ],\n      transparency: [\n        'Explainable AI research papers',\n        'LIME and SHAP explanation tools',\n        'Algorithmic transparency guidelines',\n        'Right to explanation regulations',\n      ],\n      accountability: [\n        'AI governance frameworks',\n        'Accountability in AI systems reports',\n        'Liability in automated decision-making',\n        'Professional ethics codes for AI',\n      ],\n    };\n    return (\n      resources[scenario] || [\n        'General AI ethics resources',\n        'Academic papers',\n        'News articles',\n        'Case studies',\n      ]\n    );\n  }\n\n  /**\n   * Get formative assessment strategies\n   */\n  getFormativeAssessment(activity) {\n    const assessments = {\n      'scenario-explorer': [\n        'Real-time decision tracking',\n        'Reasoning documentation',\n        'Peer discussion observations',\n        'Self-reflection prompts',\n      ],\n      'stakeholder-roleplay': [\n        'Role authenticity rubric',\n        'Collaboration observation',\n        'Solution quality assessment',\n        'Perspective-taking evaluation',\n      ],\n      'bias-detective': [\n        'Analysis accuracy check',\n        'Evidence identification',\n        'Pattern recognition skills',\n        'Hypothesis formation',\n      ],\n      'solution-design': [\n        'Design process documentation',\n        'Ethical consideration checklist',\n        'Peer feedback collection',\n        'Iteration tracking',\n      ],\n      'policy-debate': [\n        'Argument quality assessment',\n        'Evidence usage evaluation',\n        'Listening and response skills',\n        'Position development',\n      ],\n    };\n    return (\n      assessments[activity] || [\n        'Observation checklist',\n        'Exit tickets',\n        'Peer feedback',\n        'Self-assessment',\n      ]\n    );\n  }\n\n  /**\n   * Get summative assessment options\n   */\n  getSummativeAssessment(scenario) {\n    const assessments = {\n      'bias-fairness':\n        'Portfolio of bias analysis across multiple AI systems with recommendations for improvement',\n      'privacy-security':\n        'Privacy policy audit and improvement proposal for a real organization',\n      'autonomous-systems':\n        'Ethical framework development for autonomous decision-making in a specific domain',\n      'social-impact':\n        'Community impact assessment for a proposed AI implementation',\n      transparency:\n        'Explainable AI system design with user-friendly explanations',\n      accountability: 'AI governance policy proposal with implementation plan',\n    };\n    return (\n      assessments[scenario] ||\n      'Comprehensive project demonstrating understanding of AI ethics principles'\n    );\n  }\n\n  /**\n   * Get assessment rubric for activity\n   */\n  getAssessmentRubric(activity) {\n    const rubrics = {\n      'scenario-explorer': {\n        'Ethical Reasoning': [\n          'Identifies ethical issues',\n          'Analyzes consequences',\n          'Considers multiple perspectives',\n          'Justifies decisions',\n        ],\n        'Critical Thinking': [\n          'Asks relevant questions',\n          'Evaluates evidence',\n          'Recognizes assumptions',\n          'Draws logical conclusions',\n        ],\n        Communication: [\n          'Clearly explains reasoning',\n          'Uses appropriate terminology',\n          'Responds to others respectfully',\n          'Presents ideas effectively',\n        ],\n      },\n      'stakeholder-roleplay': {\n        'Role Authenticity': [\n          'Accurately represents stakeholder',\n          'Maintains perspective',\n          'Uses appropriate arguments',\n          'Demonstrates understanding',\n        ],\n        Collaboration: [\n          'Listens actively',\n          \"Builds on others' ideas\",\n          'Manages disagreement constructively',\n          'Contributes equitably',\n        ],\n        'Problem Solving': [\n          'Identifies core issues',\n          'Proposes viable solutions',\n          'Considers trade-offs',\n          'Adapts to new information',\n        ],\n      },\n    };\n    return (\n      rubrics[activity] || {\n        Understanding: [\n          'Demonstrates basic concepts',\n          'Makes connections',\n          'Applies knowledge',\n          'Explains reasoning',\n        ],\n        Engagement: [\n          'Participates actively',\n          'Asks questions',\n          'Helps others',\n          'Stays focused',\n        ],\n        Communication: [\n          'Expresses ideas clearly',\n          'Uses evidence',\n          'Listens respectfully',\n          'Provides feedback',\n        ],\n      }\n    );\n  }\n\n  /**\n   * Get differentiation strategies\n   */\n  getDifferentiation(gradeLevel) {\n    const strategies = {\n      'K-2': {\n        Content: [\n          'Simplified vocabulary',\n          'Visual representations',\n          'Concrete examples',\n          'Story-based scenarios',\n        ],\n        Process: [\n          'Partner work',\n          'Hands-on activities',\n          'Movement integration',\n          'Shorter time segments',\n        ],\n        Product: [\n          'Drawings',\n          'Simple presentations',\n          'Choice boards',\n          'Multimedia options',\n        ],\n      },\n      '3-5': {\n        Content: [\n          'Grade-appropriate examples',\n          'Scaffolded complexity',\n          'Multiple entry points',\n          \"Connection to students' lives\",\n        ],\n        Process: [\n          'Flexible grouping',\n          'Learning stations',\n          'Graphic organizers',\n          'Think-pair-share',\n        ],\n        Product: [\n          'Various formats',\n          'Rubric choices',\n          'Technology integration',\n          'Peer sharing',\n        ],\n      },\n      '6-8': {\n        Content: [\n          'Real-world connections',\n          'Current events integration',\n          'Multiple perspectives',\n          'Increasing complexity',\n        ],\n        Process: [\n          'Independent research',\n          'Collaborative projects',\n          'Problem-based learning',\n          'Socratic seminars',\n        ],\n        Product: [\n          'Research projects',\n          'Presentations',\n          'Digital portfolios',\n          'Peer evaluation',\n        ],\n      },\n      '9-12': {\n        Content: [\n          'Advanced concepts',\n          'Policy implications',\n          'Career connections',\n          'Global perspectives',\n        ],\n        Process: [\n          'Student-led discussions',\n          'Independent investigation',\n          'Debate and argumentation',\n          'Mentoring opportunities',\n        ],\n        Product: [\n          'Formal presentations',\n          'Research papers',\n          'Policy proposals',\n          'Community engagement',\n        ],\n      },\n    };\n    return strategies[gradeLevel] || strategies['6-8'];\n  }\n\n  /**\n   * Get extension activities\n   */\n  getExtensionActivities(scenario) {\n    const extensions = {\n      'bias-fairness': [\n        \"Conduct a bias audit of your school's technology systems\",\n        'Interview community members about their experiences with AI bias',\n        'Create a public awareness campaign about algorithmic fairness',\n        'Develop a bias detection tool for a specific AI application',\n      ],\n      'privacy-security': [\n        'Analyze privacy policies of popular apps and services',\n        'Create a digital privacy guide for your school community',\n        'Research data breach cases and their impacts',\n        'Design a privacy-preserving AI system',\n      ],\n      'autonomous-systems': [\n        'Research autonomous vehicle policies in different countries',\n        'Design ethical guidelines for autonomous healthcare systems',\n        'Create a decision-making framework for autonomous weapons',\n        'Analyze the ethics of autonomous hiring systems',\n      ],\n      'social-impact': [\n        'Conduct a community impact assessment for a local AI implementation',\n        'Create a social impact measurement framework for AI projects',\n        \"Research AI's impact on your chosen career field\",\n        'Develop community engagement strategies for AI deployment',\n      ],\n      transparency: [\n        'Create user-friendly explanations for complex AI decisions',\n        'Research \"right to explanation\" laws in different jurisdictions',\n        'Design an AI transparency dashboard for consumers',\n        'Develop transparency standards for AI in education',\n      ],\n      accountability: [\n        'Research AI liability laws and propose improvements',\n        'Create an AI accountability framework for businesses',\n        'Analyze professional ethics codes for AI practitioners',\n        'Design a public AI accountability system',\n      ],\n    };\n    return (\n      extensions[scenario] || [\n        'Research current AI ethics developments',\n        'Create educational materials for younger students',\n        'Engage with local policymakers about AI regulation',\n        'Develop an AI ethics toolkit for your community',\n      ]\n    );\n  }\n\n  /**\n   * Get reflection questions\n   */\n  getReflectionQuestions(scenario, gradeLevel) {\n    const baseQuestions = {\n      'bias-fairness': [\n        'How might your own biases influence AI systems you help create?',\n        'What would a \"fair\" AI system look like in practice?',\n        'How can we balance efficiency with fairness in AI decisions?',\n        'What role should affected communities play in AI development?',\n      ],\n      'privacy-security': [\n        'How do you balance convenience with privacy in your daily life?',\n        'What privacy rights should be non-negotiable in AI systems?',\n        'How can we ensure AI systems protect vulnerable populations?',\n        'What would you want to know about AI systems that affect you?',\n      ],\n      'autonomous-systems': [\n        'How comfortable are you with AI making decisions that affect you?',\n        'What decisions should never be fully automated?',\n        'How can we ensure human oversight of autonomous systems?',\n        'What ethical principles should guide autonomous AI behavior?',\n      ],\n      'social-impact': [\n        'How has AI already changed your community?',\n        'What positive changes could AI bring to society?',\n        'How can we prevent AI from increasing inequality?',\n        'What role should the public play in AI development?',\n      ],\n      transparency: [\n        'How much do you understand about the AI systems you use?',\n        'What would you want to know about AI decisions that affect you?',\n        'How can we make AI explanations accessible to everyone?',\n        'What are the limits of explainable AI?',\n      ],\n      accountability: [\n        'Who should be responsible when AI systems cause harm?',\n        'How can we ensure AI developers take responsibility?',\n        'What role should government play in AI accountability?',\n        'How can individuals hold AI systems accountable?',\n      ],\n    };\n\n    const questions = baseQuestions[scenario] || [\n      'What surprised you most about AI ethics?',\n      'How will this learning change your relationship with AI?',\n      'What questions do you still have about AI ethics?',\n      'How can you apply these insights in your daily life?',\n    ];\n\n    // Adapt questions for grade level\n    if (gradeLevel === 'K-2' || gradeLevel === '3-5') {\n      return questions.map(q =>\n        q\n          .replace(/How might|What would|How can we/g, 'Why is it important to')\n          .replace(/\\?$/, '?')\n      );\n    }\n\n    return questions;\n  }\n\n  /**\n   * Create assessment rubrics\n   */\n  createReflectionRubric() {\n    return {\n      criteria: [\n        {\n          name: 'Ethical Reasoning',\n          levels: {\n            4: 'Demonstrates sophisticated understanding of ethical principles and their application',\n            3: 'Shows clear understanding of ethical reasoning with good application',\n            2: 'Basic understanding of ethical concepts with some application',\n            1: 'Limited understanding of ethical reasoning',\n          },\n        },\n        {\n          name: 'Stakeholder Analysis',\n          levels: {\n            4: 'Identifies and analyzes multiple stakeholders with nuanced understanding of impacts',\n            3: 'Identifies key stakeholders and analyzes most impacts',\n            2: 'Identifies some stakeholders with basic impact analysis',\n            1: 'Limited identification of stakeholders or impacts',\n          },\n        },\n        {\n          name: 'Critical Thinking',\n          levels: {\n            4: 'Evaluates multiple perspectives and synthesizes complex ideas',\n            3: 'Considers different perspectives and makes connections',\n            2: 'Shows some critical analysis with basic connections',\n            1: 'Limited critical thinking or analysis',\n          },\n        },\n        {\n          name: 'Communication',\n          levels: {\n            4: 'Clear, compelling communication with sophisticated use of evidence',\n            3: 'Clear communication with good use of evidence',\n            2: 'Generally clear communication with some evidence',\n            1: 'Unclear communication or limited evidence',\n          },\n        },\n      ],\n    };\n  }\n\n  /**\n   * Progress tracking for educators\n   */\n  createProgressTracker() {\n    return {\n      individualProgress: {\n        scenariosCompleted: 0,\n        reflectionDepth: 'basic', // basic, developing, proficient, advanced\n        collaborationSkills: 'developing',\n        ethicalReasoningGrowth: [],\n        timeEngaged: 0,\n        questionsAsked: 0,\n        perspectivesConsidered: [],\n      },\n\n      classProgress: {\n        averageEngagement: 0,\n        scenarioCompletionRates: new Map(),\n        commonMisconceptions: [],\n        emergingInsights: [],\n        collaborationQuality: 'good',\n        discussionDepth: 'moderate',\n      },\n\n      curriculumAlignment: {\n        standardsCovered: [],\n        learningObjectivesMet: [],\n        skillsDeveloped: [],\n        crossCurricularConnections: [],\n      },\n    };\n  }\n\n  /**\n   * Generate educator resources package\n   */\n  generateEducatorPackage(scenario) {\n    return {\n      overview: this.getScenarioOverview(scenario),\n      lessonPlans: this.generateMultipleLessonPlans(scenario),\n      activities: this.getScenarioActivities(scenario),\n      assessments: this.getScenarioAssessments(scenario),\n      resources: {\n        backgroundReading: this.getBackgroundReading(scenario),\n        additionalCases: this.getAdditionalCases(scenario),\n        expertInterviews: this.getExpertResources(scenario),\n        currentEvents: this.getCurrentEventConnections(scenario),\n      },\n      parentCommunication: {\n        overview: this.getParentOverview(scenario),\n        homeExtensions: this.getHomeExtensions(scenario),\n        discussionStarters: this.getFamilyDiscussionStarters(scenario),\n      },\n    };\n  }\n\n  /**\n   * Set scenario generator for integration\n   */\n  setScenarioGenerator(generator) {\n    this.scenarioGenerator = generator;\n  }\n\n  /**\n   * Get curriculum alignment for simulation tags\n   */\n  getCurriculumAlignment(tags) {\n    const alignments = [];\n\n    for (const tag of tags) {\n      switch (tag.toLowerCase()) {\n        case 'ethics':\n        case 'fairness':\n          alignments.push({\n            standard: 'CSTA',\n            code: '3A-IC-25',\n            description:\n              'Evaluate the ways computing impacts personal, ethical, social, economic, and cultural practices',\n          });\n          break;\n        case 'bias':\n          alignments.push({\n            standard: 'CSTA',\n            code: '2-IC-21',\n            description:\n              'Discuss issues of bias and accessibility in the design of existing technologies',\n          });\n          break;\n        case 'education':\n          alignments.push({\n            standard: 'NGSS',\n            practice: 'Engaging in Argument from Evidence',\n            description:\n              'Use evidence to construct and support arguments about ethical implications',\n          });\n          break;\n      }\n    }\n\n    return alignments.length > 0 ? alignments : null;\n  }\n\n  /**\n   * Get assessment tools based on difficulty level\n   */\n  getAssessmentTools(difficulty) {\n    const tools = [];\n\n    switch (difficulty) {\n      case 'beginner':\n        tools.push(\n          this.assessmentTools.get('reflection-prompts'),\n          this.classroomActivities.get('individual')\n        );\n        break;\n      case 'intermediate':\n        tools.push(\n          this.assessmentTools.get('reflection-prompts'),\n          this.assessmentTools.get('collaborative'),\n          this.classroomActivities.get('small-group')\n        );\n        break;\n      case 'advanced':\n        tools.push(\n          this.assessmentTools.get('project-assessments'),\n          this.assessmentTools.get('collaborative'),\n          this.classroomActivities.get('cross-curricular')\n        );\n        break;\n    }\n\n    return tools.length > 0 ? tools : null;\n  }\n\n  // Helper methods for generating specific content\n  getLearningObjectives(scenario, grade) {\n    const baseObjectives = {\n      'bias-fairness': [\n        'Identify different types of bias in AI systems',\n        'Analyze the impact of biased AI on various stakeholders',\n        'Evaluate strategies for reducing bias in AI applications',\n        'Communicate ethical concerns effectively',\n      ],\n    };\n\n    // Adapt for grade level\n    return this.adaptObjectivesForGrade(baseObjectives[scenario] || [], grade);\n  }\n\n  adaptObjectivesForGrade(objectives, grade) {\n    const adaptations = {\n      'K-2': obj =>\n        obj\n          .replace(/analyze|evaluate/gi, 'identify')\n          .replace(/communicate/gi, 'share'),\n      '3-5': obj => obj.replace(/evaluate/gi, 'compare'),\n      '6-8': obj => obj,\n      '9-12': obj => obj.replace(/identify/gi, 'critically analyze'),\n      college: obj => `${obj} with consideration of policy implications`,\n    };\n\n    const adapter = adaptations[grade] || (obj => obj);\n    return objectives.map(adapter);\n  }\n\n  /**\n   * Get journal templates for reflection activities\n   */\n  getJournalTemplates() {\n    return {\n      elementary: {\n        title: 'My AI Ethics Journal (Elementary)',\n        prompts: [\n          \"What did the AI do in today's scenario?\",\n          'How did it make people feel?',\n          'What would you tell the AI to do differently?',\n          'Draw a picture of what happened.',\n        ],\n        format: 'guided-questions',\n      },\n      middle: {\n        title: 'AI Ethics Reflection Journal (Middle School)',\n        prompts: [\n          'Describe the ethical dilemma presented in the scenario.',\n          'What were the different choices available?',\n          'Who would be affected by each choice?',\n          'What values or principles guided your decision?',\n          'How might this apply to real-world situations?',\n        ],\n        format: 'structured-reflection',\n      },\n      high: {\n        title: 'AI Ethics Analysis Journal (High School)',\n        prompts: [\n          'Analyze the competing ethical frameworks present in this scenario.',\n          'Evaluate the long-term societal implications of different approaches.',\n          'Consider how cultural contexts might influence ethical judgments.',\n          'Propose policy recommendations based on your analysis.',\n          'Reflect on how this scenario connects to current AI developments.',\n        ],\n        format: 'analytical-essay',\n      },\n    };\n  }\n\n  /**\n   * Get stakeholder analysis framework\n   */\n  getStakeholderFramework() {\n    return {\n      categories: [\n        {\n          name: 'Primary Stakeholders',\n          description: 'Directly affected by AI decisions',\n          examples: ['Users', 'Customers', 'Employees'],\n          analysisQuestions: [\n            'How are they directly impacted?',\n            'What are their primary concerns?',\n            'What power do they have to influence outcomes?',\n          ],\n        },\n        {\n          name: 'Secondary Stakeholders',\n          description: 'Indirectly affected by AI decisions',\n          examples: [\n            'Communities',\n            'Industry competitors',\n            'Regulatory bodies',\n          ],\n          analysisQuestions: [\n            'What indirect effects might they experience?',\n            'How might they respond to changes?',\n            'What interests do they represent?',\n          ],\n        },\n        {\n          name: 'Future Stakeholders',\n          description: 'Those who may be affected in the future',\n          examples: [\n            'Future generations',\n            'Emerging user groups',\n            'Society at large',\n          ],\n          analysisQuestions: [\n            'What long-term impacts should we consider?',\n            'Who might be affected as technology evolves?',\n            'What precedents are we setting?',\n          ],\n        },\n      ],\n      process: [\n        'Identify all relevant stakeholders',\n        'Categorize by level of impact',\n        'Analyze interests and concerns',\n        'Evaluate power dynamics',\n        'Consider potential conflicts',\n        'Develop inclusive solutions',\n      ],\n    };\n  }\n\n  /**\n   * Create design thinking rubric\n   */\n  createDesignRubric() {\n    return {\n      criteria: [\n        {\n          name: 'Problem Definition',\n          levels: {\n            4: 'Clearly defines complex problems with multiple stakeholder perspectives',\n            3: 'Defines problems with good understanding of context',\n            2: 'Basic problem definition with some context',\n            1: 'Limited problem understanding',\n          },\n        },\n        {\n          name: 'Solution Development',\n          levels: {\n            4: 'Develops innovative, ethical solutions considering multiple constraints',\n            3: 'Creates practical solutions with ethical considerations',\n            2: 'Basic solutions with some ethical awareness',\n            1: 'Limited solution development',\n          },\n        },\n      ],\n    };\n  }\n\n  /**\n   * Create investigation rubric\n   */\n  createInvestigationRubric() {\n    return {\n      criteria: [\n        {\n          name: 'Research Quality',\n          levels: {\n            4: 'Uses multiple credible sources with critical evaluation',\n            3: 'Uses credible sources with good analysis',\n            2: 'Uses some credible sources with basic analysis',\n            1: 'Limited or unreliable sources',\n          },\n        },\n        {\n          name: 'Evidence Synthesis',\n          levels: {\n            4: 'Synthesizes evidence to build compelling arguments',\n            3: 'Connects evidence to support conclusions',\n            2: 'Basic use of evidence',\n            1: 'Minimal evidence integration',\n          },\n        },\n      ],\n    };\n  }\n\n  /**\n   * Create debate rubric\n   */\n  createDebateRubric() {\n    return {\n      criteria: [\n        {\n          name: 'Argument Quality',\n          levels: {\n            4: 'Presents sophisticated, well-reasoned arguments',\n            3: 'Clear arguments with good support',\n            2: 'Basic arguments with some support',\n            1: 'Weak or unsupported arguments',\n          },\n        },\n        {\n          name: 'Ethical Reasoning',\n          levels: {\n            4: 'Demonstrates nuanced understanding of ethical principles',\n            3: 'Shows clear ethical reasoning',\n            2: 'Basic ethical considerations',\n            1: 'Limited ethical awareness',\n          },\n        },\n      ],\n    };\n  }\n\n  /**\n   * Get peer review guidelines\n   */\n  getPeerReviewGuidelines() {\n    return {\n      structure: [\n        'Read the work carefully and completely',\n        'Focus on constructive feedback',\n        'Consider ethical implications discussed',\n        'Suggest specific improvements',\n        'Acknowledge strengths',\n      ],\n      questions: [\n        'Are the ethical issues clearly identified?',\n        'Are different stakeholder perspectives considered?',\n        'Is the reasoning logical and well-supported?',\n        'Are potential consequences explored?',\n        'What questions remain unanswered?',\n      ],\n      etiquette: [\n        'Be respectful and constructive',\n        'Focus on ideas, not personal qualities',\n        'Provide specific examples',\n        'Balance criticism with encouragement',\n        'Ask clarifying questions',\n      ],\n    };\n  }\n\n  // Additional helper methods would continue here...\n  // [Implementation would continue with specific methods for each component]\n}\n\n// Export for integration with existing SimulateAI platform\nexport default EducatorToolkit;\n","/**\n * Digital Science Lab Components for AI Ethics Education\n * Extends existing platform with comprehensive educational infrastructure\n */\n\n// Constants to avoid magic numbers\nconst LAB_CONSTANTS = {\n  DURATIONS: {\n    SHORT_SESSION: '20 minutes',\n    MEDIUM_SESSION: '30 minutes',\n    LONG_SESSION: '40 minutes',\n    EXTENDED_SESSION: '45-60 minutes',\n    FULL_LAB_SESSION: '90-120 minutes',\n    PRESENTATION_TIME: '10-minute presentation',\n  },\n  EXPERIMENT_STEPS: {\n    STEP_1: 1,\n    STEP_2: 2,\n    STEP_3: 3,\n    STEP_4: 4,\n  },\n  ASSESSMENT_WEIGHTS: {\n    UNDERSTANDING: 0.3,\n    CRITICAL_THINKING: 0.25,\n    COLLABORATION: 0.25,\n    COMMUNICATION: 0.2,\n  },\n  PROJECT_TIMELINE: {\n    WEEK_DURATION: '1 week',\n  },\n  ARRAY_THRESHOLDS: {\n    EMPTY_LENGTH: 0,\n  },\n};\n\nclass DigitalScienceLab {\n  constructor() {\n    this.labStations = new Map();\n    this.experiments = new Map();\n    this.collaborationTools = new Map();\n    this.assessmentMethods = new Map();\n\n    this.initializeLab();\n  }\n\n  /**\n   * Initialize the digital science lab environment\n   */\n  initializeLab() {\n    this.createLabStations();\n    this.setupExperiments();\n    this.configureCollaboration();\n    this.establishAssessment();\n  }\n\n  /**\n   * Create virtual lab stations for different aspects of AI ethics\n   */\n  createLabStations() {\n    // Bias Analysis Station\n    this.labStations.set('bias-analysis', {\n      name: 'Bias Detection & Analysis Lab',\n      purpose: 'Investigate how bias enters and affects AI systems',\n      tools: [\n        'Data Visualization Dashboard',\n        'Statistical Analysis Tools',\n        'Bias Measurement Instruments',\n        'Case Study Database',\n      ],\n      experiments: [\n        'dataset-bias-detection',\n        'algorithmic-fairness-testing',\n        'outcome-disparity-analysis',\n      ],\n      learningOutcomes: [\n        'Identify sources of bias in training data',\n        'Measure fairness across different groups',\n        'Propose bias mitigation strategies',\n      ],\n    });\n\n    // Ethics Decision Lab\n    this.labStations.set('ethics-decision', {\n      name: 'Ethical Decision-Making Laboratory',\n      purpose: 'Explore ethical frameworks and their application to AI',\n      tools: [\n        'Ethics Framework Simulator',\n        'Stakeholder Impact Visualizer',\n        'Decision Tree Builder',\n        'Consequence Predictor',\n      ],\n      experiments: [\n        'trolley-problem-variants',\n        'utilitarian-vs-deontological',\n        'stakeholder-conflict-resolution',\n      ],\n      learningOutcomes: [\n        'Apply different ethical frameworks',\n        'Analyze stakeholder perspectives',\n        'Navigate ethical trade-offs',\n      ],\n    });\n\n    // Real-World Impact Station\n    this.labStations.set('impact-analysis', {\n      name: 'Real-World Impact Analysis Center',\n      purpose: 'Study actual consequences of AI systems in society',\n      tools: [\n        'Case Study Explorer',\n        'Impact Measurement Tools',\n        'Timeline Visualizer',\n        'News Analysis Platform',\n      ],\n      experiments: [\n        'hiring-algorithm-outcomes',\n        'criminal-justice-ai-effects',\n        'healthcare-ai-disparities',\n      ],\n      learningOutcomes: [\n        'Connect theory to real-world outcomes',\n        'Evaluate long-term consequences',\n        'Identify pattern across domains',\n      ],\n    });\n\n    // Solution Design Workshop\n    this.labStations.set('solution-design', {\n      name: 'Ethical AI Design Workshop',\n      purpose: 'Create and test ethical AI solutions',\n      tools: [\n        'AI System Designer',\n        'Ethics Checklist Generator',\n        'Prototype Testing Environment',\n        'Peer Review Platform',\n      ],\n      experiments: [\n        'ethical-hiring-system-design',\n        'fair-lending-algorithm',\n        'inclusive-healthcare-ai',\n      ],\n      learningOutcomes: [\n        'Design ethical AI systems',\n        'Implement fairness measures',\n        'Test and iterate solutions',\n      ],\n    });\n  }\n\n  /**\n   * Setup guided experiments for hands-on learning\n   */\n  setupExperiments() {\n    // Experiment: Dataset Bias Detection\n    this.experiments.set('dataset-bias-detection', {\n      title: 'Uncovering Hidden Bias in Training Data',\n      difficulty: 'intermediate',\n      duration: LAB_CONSTANTS.DURATIONS.EXTENDED_SESSION,\n      materials: [\n        'Simulated datasets',\n        'Analysis tools',\n        'Bias detection algorithms',\n      ],\n\n      procedure: [\n        {\n          step: LAB_CONSTANTS.EXPERIMENT_STEPS.STEP_1,\n          title: 'Data Exploration',\n          description: 'Examine the composition of different datasets',\n          activity:\n            'Use visualization tools to explore demographic distributions',\n          questions: [\n            'What groups are represented in this data?',\n            'Are all groups equally represented?',\n            'What might be missing from this dataset?',\n          ],\n        },\n        {\n          step: LAB_CONSTANTS.EXPERIMENT_STEPS.STEP_2,\n          title: 'Bias Identification',\n          description: 'Apply bias detection techniques',\n          activity: 'Run automated bias detection algorithms',\n          questions: [\n            'Where do the algorithms identify potential bias?',\n            'What types of bias are most common?',\n            'How confident should we be in these results?',\n          ],\n        },\n        {\n          step: LAB_CONSTANTS.EXPERIMENT_STEPS.STEP_3,\n          title: 'Impact Analysis',\n          description: 'Predict real-world consequences',\n          activity: 'Model outcomes for different groups',\n          questions: [\n            'How would this bias affect hiring decisions?',\n            'Which groups would benefit or be harmed?',\n            'What are the long-term societal implications?',\n          ],\n        },\n        {\n          step: LAB_CONSTANTS.EXPERIMENT_STEPS.STEP_4,\n          title: 'Mitigation Strategies',\n          description: 'Develop approaches to reduce bias',\n          activity: 'Test different bias reduction techniques',\n          questions: [\n            'Which mitigation strategies are most effective?',\n            'What are the trade-offs of each approach?',\n            'How do we measure success in bias reduction?',\n          ],\n        },\n      ],\n\n      assessment: {\n        formative: [\n          'Lab notebook observations',\n          'Peer discussion participation',\n          'Question responses',\n        ],\n        summative: [\n          'Bias analysis report',\n          'Mitigation strategy proposal',\n          'Reflection essay',\n        ],\n      },\n\n      extensions: [\n        'Research real-world bias cases',\n        'Interview data scientists about bias challenges',\n        'Propose policy solutions for algorithmic accountability',\n      ],\n    });\n\n    // Experiment: Stakeholder Impact Simulation\n    this.experiments.set('stakeholder-impact-simulation', {\n      title: 'Multi-Stakeholder AI Impact Simulation',\n      difficulty: 'advanced',\n      duration: LAB_CONSTANTS.DURATIONS.FULL_LAB_SESSION,\n      materials: [\n        'Role-playing cards',\n        'Impact simulation software',\n        'Decision matrices',\n      ],\n\n      setup: {\n        scenario: 'AI-powered content recommendation system for social media',\n        stakeholders: [\n          {\n            role: 'Platform Users',\n            concerns: ['Privacy', 'Content diversity', 'Mental health'],\n          },\n          {\n            role: 'Content Creators',\n            concerns: ['Visibility', 'Revenue', 'Creative freedom'],\n          },\n          {\n            role: 'Platform Company',\n            concerns: ['Engagement', 'Revenue', 'Legal compliance'],\n          },\n          {\n            role: 'Advertisers',\n            concerns: ['Target accuracy', 'Brand safety', 'ROI'],\n          },\n          {\n            role: 'Society/Public',\n            concerns: [\n              'Misinformation',\n              'Social cohesion',\n              'Democratic discourse',\n            ],\n          },\n          {\n            role: 'Regulators',\n            concerns: [\n              'Consumer protection',\n              'Competition',\n              'National security',\n            ],\n          },\n        ],\n      },\n\n      phases: [\n        {\n          phase: 'Stakeholder Research',\n          duration: LAB_CONSTANTS.DURATIONS.SHORT_SESSION,\n          activity: 'Each group researches their stakeholder perspective',\n          deliverable: 'Stakeholder profile and key concerns',\n        },\n        {\n          phase: 'System Design Proposals',\n          duration: LAB_CONSTANTS.DURATIONS.MEDIUM_SESSION,\n          activity:\n            'Groups propose AI system designs that benefit their stakeholder',\n          deliverable: 'Design proposal with justification',\n        },\n        {\n          phase: 'Cross-Stakeholder Negotiation',\n          duration: LAB_CONSTANTS.DURATIONS.LONG_SESSION,\n          activity: 'Facilitated negotiation to find acceptable compromise',\n          deliverable: 'Negotiated system design',\n        },\n        {\n          phase: 'Impact Evaluation',\n          duration: LAB_CONSTANTS.DURATIONS.SHORT_SESSION,\n          activity: 'Evaluate final design against all stakeholder needs',\n          deliverable: 'Impact assessment matrix',\n        },\n      ],\n    });\n  }\n\n  /**\n   * Configure collaboration tools for group learning\n   */\n  configureCollaboration() {\n    this.collaborationTools.set('digital-whiteboard', {\n      name: 'Collaborative Ethics Mapping',\n      purpose: 'Visual collaboration on complex ethical issues',\n      features: [\n        'Real-time collaborative drawing',\n        'Stakeholder mapping templates',\n        'Decision tree builders',\n        'Impact visualization tools',\n      ],\n      integration: 'Embedded in simulation interface',\n    });\n\n    this.collaborationTools.set('peer-review-system', {\n      name: 'Structured Peer Review Platform',\n      purpose: 'Facilitate constructive feedback on ethical analyses',\n      features: [\n        'Anonymous and identified review options',\n        'Rubric-based evaluation tools',\n        'Comment threading and discussion',\n        'Revision tracking and iteration support',\n      ],\n      guidelines: this.createPeerReviewGuidelines(),\n    });\n\n    this.collaborationTools.set('discussion-facilitator', {\n      name: 'AI-Assisted Discussion Facilitator',\n      purpose: 'Support productive ethical discussions',\n      features: [\n        'Conversation starter suggestions',\n        'Perspective diversity monitoring',\n        'Bias detection in arguments',\n        'Evidence integration prompts',\n      ],\n      safeguards: [\n        'Human moderator override',\n        'Inappropriate content filtering',\n        'Balanced participation encouragement',\n      ],\n    });\n  }\n\n  /**\n   * Establish comprehensive assessment methods\n   */\n  establishAssessment() {\n    // Portfolio-Based Assessment\n    this.assessmentMethods.set('ethics-portfolio', {\n      name: 'AI Ethics Learning Portfolio',\n      purpose: 'Comprehensive documentation of ethical reasoning development',\n\n      components: [\n        {\n          name: 'Scenario Analysis Collection',\n          description: 'Student responses to various ethical scenarios',\n          weight: LAB_CONSTANTS.ASSESSMENT_WEIGHTS.UNDERSTANDING,\n          criteria: [\n            'Depth of analysis',\n            'Stakeholder consideration',\n            'Ethical reasoning',\n          ],\n        },\n        {\n          name: 'Bias Investigation Project',\n          description: 'In-depth study of bias in a chosen AI application',\n          weight: LAB_CONSTANTS.ASSESSMENT_WEIGHTS.CRITICAL_THINKING,\n          criteria: [\n            'Research quality',\n            'Analysis rigor',\n            'Solution creativity',\n          ],\n        },\n        {\n          name: 'Collaborative Design Challenge',\n          description: 'Group project to design ethical AI system',\n          weight: LAB_CONSTANTS.ASSESSMENT_WEIGHTS.COLLABORATION,\n          criteria: [\n            'Technical feasibility',\n            'Ethical integration',\n            'Team collaboration',\n          ],\n        },\n        {\n          name: 'Reflection Essays',\n          description: 'Personal growth and learning reflections',\n          weight: LAB_CONSTANTS.ASSESSMENT_WEIGHTS.COMMUNICATION,\n          criteria: [\n            'Self-awareness',\n            'Growth documentation',\n            'Critical thinking',\n          ],\n        },\n      ],\n\n      rubric: this.createPortfolioRubric(),\n    });\n\n    // Performance-Based Assessment\n    this.assessmentMethods.set('ethics-performance', {\n      name: 'Real-World Ethics Performance Assessment',\n      purpose:\n        'Evaluate ability to apply ethical reasoning in realistic contexts',\n\n      tasks: [\n        {\n          name: 'Ethics Consultation Simulation',\n          description:\n            'Student acts as ethics consultant for fictional AI company',\n          scenario: 'Company planning to deploy facial recognition in schools',\n          deliverables: [\n            'Ethics assessment report',\n            'Stakeholder presentation',\n            'Policy recommendations',\n          ],\n          timeframe: LAB_CONSTANTS.PROJECT_TIMELINE.WEEK_DURATION,\n          evaluation:\n            'Expert panel review (teachers, industry professionals, ethicists)',\n        },\n        {\n          name: 'Public Policy Testimony',\n          description:\n            'Student presents testimony on AI ethics to mock legislative committee',\n          preparation: 'Research current AI regulation proposals',\n          performance: `${LAB_CONSTANTS.DURATIONS.PRESENTATION_TIME} followed by Q&A`,\n          audience:\n            'Peers role-playing legislators, advocacy groups, industry representatives',\n        },\n      ],\n    });\n\n    // Peer Assessment Integration\n    this.assessmentMethods.set('peer-assessment', {\n      name: 'Structured Peer Learning Assessment',\n      purpose: 'Develop evaluation skills while supporting peer learning',\n\n      methods: [\n        {\n          name: 'Ethics Reasoning Peer Review',\n          process:\n            'Students review and provide feedback on peers ethical analyses',\n          training: 'Rubric training and calibration exercises',\n          support: 'Structured feedback templates and examples',\n        },\n        {\n          name: 'Collaborative Solution Evaluation',\n          process: 'Teams evaluate each others AI ethics solutions',\n          criteria:\n            'Technical soundness, ethical thoroughness, practical feasibility',\n          format: 'Presentation with constructive critique session',\n        },\n      ],\n    });\n  }\n\n  /**\n   * Create age-appropriate lab experiences\n   */\n  createAgeAdaptations() {\n    return {\n      elementary: {\n        approach: 'Story-based and character-driven scenarios',\n        examples: [\n          'Robot helper in classroom - how should it treat different students?',\n          'Game recommendation system - why do friends get different suggestions?',\n          'Photo tagging AI - when does it make mistakes and why?',\n        ],\n        activities: [\n          'Role-playing with AI character cards',\n          'Drawing different solutions to AI problems',\n          'Simple voting on ethical choices with discussion',\n        ],\n        assessments: [\n          'Story completion about fair AI behavior',\n          'Picture drawings of inclusive AI systems',\n          'Simple reflection questions with prompts',\n        ],\n      },\n\n      middle: {\n        approach: 'Problem-solving focused with guided discovery',\n        scenarios: [\n          'School uses AI to assign students to classes',\n          'Social media platform decides what posts to show',\n          'AI helps doctors prioritize patient appointments',\n        ],\n        activities: [\n          'Data analysis with simplified real datasets',\n          'Debate simulations with assigned perspectives',\n          'Design challenges with ethical constraints',\n        ],\n        assessments: [\n          'Case study analysis with structured questions',\n          'Group presentation on bias solutions',\n          'Personal reflection on ethical decision-making',\n        ],\n      },\n\n      high: {\n        approach: 'Research-based inquiry with complex analysis',\n        scenarios: [\n          'AI hiring system with demographic disparities',\n          'Predictive policing algorithm deployment',\n          'Healthcare AI with access and fairness issues',\n        ],\n        activities: [\n          'Statistical analysis of algorithmic bias',\n          'Policy research and proposal development',\n          'Stakeholder interview and analysis projects',\n        ],\n        assessments: [\n          'Research paper on AI ethics topic',\n          'Policy proposal with evidence and analysis',\n          'Capstone project addressing real-world AI ethics challenge',\n        ],\n      },\n\n      college: {\n        approach:\n          'Professional-level analysis with interdisciplinary integration',\n        scenarios: [\n          'Corporate AI ethics consulting project',\n          'Academic research on algorithmic fairness',\n          'Government policy development on AI regulation',\n        ],\n        activities: [\n          'Original research with data collection and analysis',\n          'Cross-disciplinary collaboration projects',\n          'Industry partnership and internship opportunities',\n        ],\n        assessments: [\n          'Thesis-level research project',\n          'Professional consulting deliverables',\n          'Conference presentation or publication',\n        ],\n      },\n    };\n  }\n\n  /**\n   * Integration with existing SimulateAI platform\n   */\n  integrateWithPlatform(simulateAI) {\n    // Enhance existing simulations with lab components\n    simulateAI.registerLabStation = (stationId, config) => {\n      this.labStations.set(stationId, config);\n    };\n\n    // Add experiment tracking to simulations\n    simulateAI.trackExperiment = (experimentId, data) => {\n      this.recordExperimentData(experimentId, data);\n    };\n\n    // Integrate collaboration tools\n    simulateAI.enableCollaboration = (toolId, options) => {\n      return this.activateCollaborationTool(toolId, options);\n    };\n\n    // Connect assessment methods\n    simulateAI.generateAssessment = (type, scenario, options) => {\n      return this.createAssessment(type, scenario, options);\n    };\n\n    return simulateAI;\n  }\n\n  /**\n   * Set educator toolkit for integration\n   */\n  setEducatorToolkit(toolkit) {\n    this.educatorToolkit = toolkit;\n  }\n\n  /**\n   * Set scenario generator for integration\n   */\n  setScenarioGenerator(generator) {\n    this.scenarioGenerator = generator;\n  }\n\n  /**\n   * Get relevant lab stations based on simulation tags\n   */\n  getRelevantStations(tags) {\n    const relevantStations = [];\n\n    for (const tag of tags) {\n      switch (tag.toLowerCase()) {\n        case 'bias':\n        case 'fairness':\n          relevantStations.push(this.labStations.get('bias-analysis'));\n          break;\n        case 'ethics':\n          relevantStations.push(this.labStations.get('ethics-decision'));\n          break;\n        case 'education':\n        case 'scenarios':\n          relevantStations.push(this.labStations.get('solution-design'));\n          break;\n        case 'open-ended':\n          relevantStations.push(this.labStations.get('impact-analysis'));\n          break;\n      }\n    }\n\n    return relevantStations.length > LAB_CONSTANTS.ARRAY_THRESHOLDS.EMPTY_LENGTH\n      ? relevantStations\n      : null;\n  }\n\n  /**\n   * Get experiments appropriate for difficulty level\n   */\n  getExperimentsForLevel(difficulty) {\n    const experiments = [];\n\n    switch (difficulty) {\n      case 'beginner':\n        experiments.push(this.experiments.get('dataset-bias-detection'));\n        break;\n      case 'intermediate':\n        experiments.push(\n          this.experiments.get('dataset-bias-detection'),\n          this.experiments.get('stakeholder-impact-simulation')\n        );\n        break;\n      case 'advanced':\n        // All experiments available\n        experiments.push(...this.experiments.values());\n        break;\n    }\n\n    return experiments;\n  }\n\n  // Helper methods\n  createPeerReviewGuidelines() {\n    return {\n      preparation: [\n        'Read the assignment carefully before reviewing',\n        'Consider the rubric criteria during review',\n        'Prepare specific, constructive feedback',\n      ],\n      process: [\n        'Start with positive observations',\n        'Provide specific suggestions for improvement',\n        'Ask clarifying questions when confused',\n        'Reference examples or resources when helpful',\n      ],\n      communication: [\n        'Use respectful, supportive language',\n        'Focus on the work, not the person',\n        'Be specific rather than general in feedback',\n        'Suggest rather than demand changes',\n      ],\n    };\n  }\n\n  createPortfolioRubric() {\n    return {\n      exemplary: {\n        description:\n          'Demonstrates exceptional understanding and application of AI ethics',\n        indicators: [\n          'Sophisticated analysis of complex ethical dilemmas',\n          'Creative and feasible solutions to bias problems',\n          'Deep reflection on personal growth and learning',\n          'Excellent integration of multiple perspectives',\n        ],\n      },\n      proficient: {\n        description:\n          'Shows solid understanding and good application of AI ethics concepts',\n        indicators: [\n          'Clear analysis of ethical issues with good reasoning',\n          'Practical solutions to AI bias with some innovation',\n          'Thoughtful reflection on learning experience',\n          'Good consideration of different stakeholder views',\n        ],\n      },\n      developing: {\n        description:\n          'Demonstrates basic understanding with some application of concepts',\n        indicators: [\n          'Basic analysis of ethical issues with limited reasoning',\n          'Simple solutions to bias problems with little innovation',\n          'Surface-level reflection on learning',\n          'Limited consideration of multiple perspectives',\n        ],\n      },\n      beginning: {\n        description: 'Shows minimal understanding and limited application',\n        indicators: [\n          'Unclear or incomplete analysis of ethical issues',\n          'Unrealistic or inappropriate solutions proposed',\n          'Little evidence of reflection or growth',\n          'Single perspective or viewpoint considered',\n        ],\n      },\n    };\n  }\n}\n\nexport default DigitalScienceLab;\n","/**\n * Enhanced Scenario Generator for Open-Ended AI Ethics Exploration\n * Creates diverse, real-world scenarios for all age groups\n *\n * DATA MODEL CLARIFICATION:\n * - DOMAIN: Template area (e.g., \"healthcare\", \"education\")\n * - CATEGORY: Thematic grouping of scenarios (e.g., \"The Trolley Problem\")\n * - SCENARIO: Individual ethical dilemma (e.g., \"Autonomous Vehicle Split Decision\")\n * - SIMULATION: Interactive experience when user engages with a scenario\n */\n\nimport logger from '../utils/logger.js';\n\n// Constants to avoid magic numbers\nconst SCENARIO_CONSTANTS = {\n  DEFAULT_SCENARIO_COUNT: 3,\n  LOOP_INDICES: {\n    START: 0,\n    INCREMENT: 1,\n  },\n  FALLBACK_VALUES: {\n    SCENARIO_NUMBER_OFFSET: 1, // For display purposes (e.g., \"Scenario 1\" instead of \"Scenario 0\")\n  },\n  STAKEHOLDER_GROUPS: {\n    ELEMENTARY: {\n      MIN: 2,\n      MAX: 3,\n    },\n    MIDDLE: {\n      MIN: 3,\n      MAX: 4,\n    },\n    HIGH: {\n      MIN: 4,\n      MAX: 6,\n    },\n  },\n  TRAUMA_CENTER_LEVEL: 1,\n};\n\nclass ScenarioGenerator {\n  constructor() {\n    this.scenarioTemplates = new Map();\n    this.adaptationStrategies = new Map();\n    this.realWorldCases = new Map();\n    this.stakeholderProfiles = new Map();\n\n    this.initializeTemplates();\n    this.setupAdaptations();\n    this.loadRealWorldCases();\n    this.createStakeholderProfiles();\n  }\n\n  /**\n   * Initialize scenario templates for different domains\n   */\n  initializeTemplates() {\n    // Healthcare AI Scenarios\n    this.scenarioTemplates.set('healthcare', {\n      domain: 'Healthcare',\n      baseScenarios: [\n        {\n          id: 'emergency-triage',\n          title: 'AI Emergency Room Triage System',\n          context:\n            'A busy hospital emergency room uses AI to prioritize patient care',\n          description:\n            'Design an AI system that helps medical staff decide which patients need immediate attention',\n          setting: `Urban Level ${SCENARIO_CONSTANTS.TRAUMA_CENTER_LEVEL} Trauma Center during flu season`,\n          stakeholders: [\n            'Patients',\n            'Emergency physicians',\n            'Nurses',\n            'Hospital administrators',\n            'Insurance companies',\n            'Community',\n          ],\n          ethicalDilemmas: [\n            'How should age factor into priority decisions?',\n            'Should insurance status influence care priority?',\n            'How do we handle unconscious patients with unknown medical history?',\n            'What role should patient ability to pay play?',\n          ],\n          realWorldConnection:\n            'Multiple hospitals use AI-assisted triage systems',\n        },\n        {\n          id: 'diagnostic-imaging',\n          title: 'AI Medical Imaging Analysis',\n          context: 'An AI system analyzes medical scans to detect diseases',\n          description:\n            'Create guidelines for an AI that helps radiologists identify potential health issues',\n          setting:\n            'Regional medical center serving diverse rural and urban populations',\n          stakeholders: [\n            'Patients',\n            'Radiologists',\n            'Primary care physicians',\n            'Healthcare systems',\n            'AI developers',\n          ],\n          ethicalDilemmas: [\n            'How accurate must AI be before deployment?',\n            'Who is responsible when AI misses a diagnosis?',\n            'Should AI recommendations be visible to patients?',\n            'How do we ensure fairness across different demographic groups?',\n          ],\n        },\n        {\n          id: 'mental-health-chatbot',\n          title: 'AI Mental Health Support System',\n          context:\n            'A chatbot provides initial mental health screening and support',\n          description:\n            'Design an AI system that offers mental health guidance while ensuring safety',\n          setting: 'College campus mental health services',\n          stakeholders: [\n            'Students',\n            'Mental health counselors',\n            'University administration',\n            'Parents/families',\n            'Crisis intervention teams',\n          ],\n          ethicalDilemmas: [\n            'When should AI escalate to human counselors?',\n            'How do we balance privacy with safety concerns?',\n            'Should AI have access to academic or social media data?',\n            'How do we prevent AI from giving harmful advice?',\n          ],\n        },\n      ],\n    });\n\n    // Education AI Scenarios\n    this.scenarioTemplates.set('education', {\n      domain: 'Education',\n      baseScenarios: [\n        {\n          id: 'adaptive-learning',\n          title: 'Personalized AI Tutor System',\n          context:\n            'An AI system adapts learning materials to individual student needs',\n          description:\n            'Create an AI tutor that personalizes education while promoting equity',\n          setting:\n            'Public middle school with diverse socioeconomic student body',\n          stakeholders: [\n            'Students',\n            'Teachers',\n            'Parents',\n            'School administrators',\n            'Educational technology companies',\n          ],\n          ethicalDilemmas: [\n            'How much student data should AI systems collect?',\n            'Should AI adapt to learning disabilities differently?',\n            'How do we prevent AI from reinforcing educational inequalities?',\n            'What happens when AI and teachers disagree on student needs?',\n          ],\n        },\n        {\n          id: 'college-admissions',\n          title: 'AI College Admissions Assistant',\n          context:\n            'Universities use AI to help evaluate and rank college applications',\n          description:\n            'Design an AI system that fairly evaluates diverse student applications',\n          setting: 'Competitive state university admissions office',\n          stakeholders: [\n            'Prospective students',\n            'Current students',\n            'Admissions officers',\n            'University administration',\n            'Alumni',\n            'Society',\n          ],\n          ethicalDilemmas: [\n            'How should AI weigh standardized test scores vs other factors?',\n            'Should AI consider applicant socioeconomic background?',\n            'How do we ensure fairness across different high schools?',\n            'What role should legacy status or athletic ability play?',\n          ],\n        },\n        {\n          id: 'classroom-monitoring',\n          title: 'AI Classroom Engagement Monitor',\n          context:\n            'An AI system tracks student attention and engagement during lessons',\n          description:\n            'Create an AI system that helps teachers understand student engagement',\n          setting: 'High school classroom with mandatory attendance',\n          stakeholders: [\n            'Students',\n            'Teachers',\n            'Parents',\n            'School administrators',\n            'Privacy advocates',\n          ],\n          ethicalDilemmas: [\n            'How much student behavior should AI monitor?',\n            'Should parents have access to engagement data?',\n            'How do we protect student privacy and autonomy?',\n            'What happens when AI identifies students as disengaged?',\n          ],\n        },\n      ],\n    });\n\n    // Criminal Justice Scenarios\n    this.scenarioTemplates.set('criminal-justice', {\n      domain: 'Criminal Justice',\n      baseScenarios: [\n        {\n          id: 'predictive-policing',\n          title: 'AI Crime Prediction System',\n          context:\n            'Police departments use AI to predict where crimes are likely to occur',\n          description:\n            'Design an AI system that helps allocate police resources fairly and effectively',\n          setting: 'Metropolitan police department in diverse urban area',\n          stakeholders: [\n            'Community members',\n            'Police officers',\n            'City officials',\n            'Civil rights advocates',\n            'Crime victims',\n          ],\n          ethicalDilemmas: [\n            'How do we prevent AI from perpetuating historical policing biases?',\n            'Should AI recommendations influence where officers patrol?',\n            'How do we balance public safety with community trust?',\n            'What data should be included in crime prediction models?',\n          ],\n        },\n        {\n          id: 'bail-recommendation',\n          title: 'AI Bail Decision Support',\n          context:\n            'Courts use AI to help judges make bail and pretrial detention decisions',\n          description:\n            'Create an AI system that assists with fair pretrial release decisions',\n          setting: 'Urban courthouse with heavy case loads',\n          stakeholders: [\n            'Defendants',\n            'Judges',\n            'Prosecutors',\n            'Defense attorneys',\n            'Community safety advocates',\n            'Taxpayers',\n          ],\n          ethicalDilemmas: [\n            'What factors should AI consider in bail recommendations?',\n            'How do we address racial and economic bias in historical data?',\n            'Should AI recommendations be binding or advisory?',\n            'How do we balance public safety with individual rights?',\n          ],\n        },\n      ],\n    });\n\n    // Workplace AI Scenarios\n    this.scenarioTemplates.set('workplace', {\n      domain: 'Workplace',\n      baseScenarios: [\n        {\n          id: 'performance-evaluation',\n          title: 'AI Employee Performance System',\n          context:\n            'Companies use AI to monitor and evaluate employee performance',\n          description:\n            'Design an AI system that fairly assesses worker productivity and growth',\n          setting: 'Technology company with remote and in-office workers',\n          stakeholders: [\n            'Employees',\n            'Managers',\n            'HR departments',\n            'Company executives',\n            'Labor unions',\n            'Customers',\n          ],\n          ethicalDilemmas: [\n            'How much employee activity should AI monitor?',\n            'Should AI performance metrics affect compensation and promotion?',\n            'How do we account for different work styles and life circumstances?',\n            'What happens when AI identifies underperforming employees?',\n          ],\n        },\n        {\n          id: 'gig-worker-matching',\n          title: 'AI Gig Economy Platform',\n          context:\n            'A platform uses AI to match gig workers with jobs and set pay rates',\n          description:\n            'Create an AI system that fairly connects workers with opportunities',\n          setting:\n            'Food delivery and rideshare platform in major metropolitan area',\n          stakeholders: [\n            'Gig workers',\n            'Customers',\n            'Platform company',\n            'Restaurants/businesses',\n            'Local government',\n            'Traditional employment advocates',\n          ],\n          ethicalDilemmas: [\n            'How should AI determine fair pay rates for different workers?',\n            'Should AI consider worker financial need when assigning jobs?',\n            'How do we prevent discrimination in job matching?',\n            'What happens when AI optimizes for company profit vs worker welfare?',\n          ],\n        },\n      ],\n    });\n\n    // Consumer AI Scenarios\n    this.scenarioTemplates.set('consumer', {\n      domain: 'Consumer Technology',\n      baseScenarios: [\n        {\n          id: 'social-media-content',\n          title: 'AI Social Media Content Curation',\n          context:\n            'Social media platforms use AI to decide what content users see',\n          description:\n            'Design an AI system that curates social media feeds responsibly',\n          setting: 'Global social media platform with billions of users',\n          stakeholders: [\n            'Platform users',\n            'Content creators',\n            'Platform company',\n            'Advertisers',\n            'Governments',\n            'Civil society organizations',\n          ],\n          ethicalDilemmas: [\n            'How should AI balance engagement with user well-being?',\n            'Should AI promote content diversity or user preferences?',\n            'How do we handle misinformation and harmful content?',\n            'What role should AI play in moderating political discourse?',\n          ],\n        },\n        {\n          id: 'voice-assistant-privacy',\n          title: 'AI Voice Assistant Data Collection',\n          context:\n            'Smart speakers and voice assistants collect and analyze user conversations',\n          description:\n            'Create guidelines for AI voice assistants that respect privacy while providing helpful services',\n          setting:\n            'Homes, offices, and public spaces with voice-activated devices',\n          stakeholders: [\n            'Device users',\n            'Family members',\n            'Technology companies',\n            'Privacy advocates',\n            'Government regulators',\n            'Third-party app developers',\n          ],\n          ethicalDilemmas: [\n            'How much conversation should AI systems record and analyze?',\n            'Should AI distinguish between intended commands and private conversations?',\n            'How do we protect children and vulnerable populations?',\n            'What happens when voice data is subpoenaed by law enforcement?',\n          ],\n        },\n      ],\n    });\n  }\n\n  /**\n   * Setup age-appropriate adaptations for scenarios\n   */\n  setupAdaptations() {\n    this.adaptationStrategies.set('elementary', {\n      approach: 'Narrative and character-based',\n      language: 'Simple, concrete terms with visual metaphors',\n      complexity: 'Single primary dilemma with clear choices',\n      stakeholders: `Reduced to ${SCENARIO_CONSTANTS.STAKEHOLDER_GROUPS.ELEMENTARY.MIN}-${SCENARIO_CONSTANTS.STAKEHOLDER_GROUPS.ELEMENTARY.MAX} main groups with clear motivations`,\n      activities: [\n        'Story-telling with AI characters',\n        'Simple choice voting with discussion',\n        'Drawing solutions and sharing',\n        'Role-playing with guided scripts',\n      ],\n      assessment: [\n        'Verbal explanation of choices',\n        'Drawing representations of fair solutions',\n        'Simple reflection questions with prompts',\n      ],\n    });\n\n    this.adaptationStrategies.set('middle', {\n      approach: 'Problem-solving with guided discovery',\n      language: 'Age-appropriate with some technical terms explained',\n      complexity: 'Multiple related dilemmas with guided analysis',\n      stakeholders: `${SCENARIO_CONSTANTS.STAKEHOLDER_GROUPS.MIDDLE.MIN}-${SCENARIO_CONSTANTS.STAKEHOLDER_GROUPS.MIDDLE.MAX} groups with competing but understandable interests`,\n      activities: [\n        'Structured debates with assigned positions',\n        'Small group problem-solving challenges',\n        'Data analysis with simplified tools',\n        'Creative solution brainstorming',\n      ],\n      assessment: [\n        'Written case study analysis',\n        'Group presentation of solutions',\n        'Peer feedback and discussion',\n        'Reflection journal entries',\n      ],\n    });\n\n    this.adaptationStrategies.set('high', {\n      approach: 'Research and analysis-based exploration',\n      language: 'Technical terms with proper context and explanation',\n      complexity: 'Multiple interconnected dilemmas requiring synthesis',\n      stakeholders: `${SCENARIO_CONSTANTS.STAKEHOLDER_GROUPS.HIGH.MIN}-${SCENARIO_CONSTANTS.STAKEHOLDER_GROUPS.HIGH.MAX} groups with nuanced and conflicting interests`,\n      activities: [\n        'Independent research projects',\n        'Mock professional consultations',\n        'Statistical analysis of bias and fairness',\n        'Policy proposal development',\n      ],\n      assessment: [\n        'Research papers with evidence and analysis',\n        'Professional-style presentations',\n        'Peer review and critique',\n        'Capstone projects addressing real issues',\n      ],\n    });\n\n    this.adaptationStrategies.set('college', {\n      approach: 'Professional and interdisciplinary analysis',\n      language: 'Professional terminology with academic rigor',\n      complexity: 'Complex, multifaceted scenarios with ambiguous solutions',\n      stakeholders: 'Full range of affected parties with detailed perspectives',\n      activities: [\n        'Original research with data collection',\n        'Cross-disciplinary collaboration projects',\n        'Industry partnership opportunities',\n        'Academic conference presentations',\n      ],\n      assessment: [\n        'Thesis-level research and analysis',\n        'Professional consulting deliverables',\n        'Publication-quality work',\n        'Real-world implementation proposals',\n      ],\n    });\n  }\n\n  /**\n   * Load real-world case studies for authentic learning\n   */\n  loadRealWorldCases() {\n    this.realWorldCases.set('healthcare-bias', {\n      title: 'Racial Bias in Healthcare AI Algorithms',\n      summary:\n        'Healthcare algorithms systematically underestimated the healthcare needs of Black patients',\n      source: 'Academic research published in Science magazine',\n      impact: 'Affected millions of patients in the US healthcare system',\n      lessons: [\n        'Historical healthcare data can perpetuate existing inequalities',\n        'Proxy variables can hide discriminatory patterns',\n        'Algorithm auditing requires diverse perspectives',\n        'Fixing bias requires both technical and policy solutions',\n      ],\n      discussion: [\n        'How could developers have detected this bias earlier?',\n        'What changes to data collection might prevent similar issues?',\n        'How should healthcare systems audit existing AI tools?',\n        'What role should patients play in AI development and oversight?',\n      ],\n    });\n\n    this.realWorldCases.set('hiring-discrimination', {\n      title: 'AI Hiring Tool Showed Bias Against Women',\n      summary:\n        \"Amazon's experimental hiring algorithm was biased against women candidates\",\n      source: 'Reuters investigation and company statements',\n      impact: 'Led to abandonment of the tool and industry-wide reflection',\n      lessons: [\n        'Training data reflects historical discrimination patterns',\n        'Technical performance metrics may miss fairness issues',\n        'Industry underrepresentation affects AI development',\n        'Regular bias testing is essential for AI systems',\n      ],\n      discussion: [\n        'What alternative approaches might create fairer hiring systems?',\n        'How can companies audit existing hiring practices for bias?',\n        'What role should diverse teams play in AI development?',\n        'How do we balance efficiency with fairness in hiring?',\n      ],\n    });\n\n    this.realWorldCases.set('criminal-justice-bias', {\n      title: 'COMPAS Risk Assessment Algorithm Bias',\n      summary:\n        'Criminal justice risk assessment tool showed racial bias in recidivism predictions',\n      source: 'ProPublica investigation and academic research',\n      impact: 'Influenced sentencing and parole decisions for thousands',\n      lessons: [\n        'Historical crime data reflects biased enforcement patterns',\n        'Risk assessment tools can perpetuate systemic inequalities',\n        'Transparency in algorithmic decision-making is crucial',\n        'Different definitions of fairness can conflict with each other',\n      ],\n      discussion: [\n        'How should courts balance algorithmic efficiency with human judgment?',\n        'What data should be excluded from criminal justice algorithms?',\n        'How do we measure and achieve fairness in risk assessment?',\n        'What role should community input play in justice AI systems?',\n      ],\n    });\n  }\n\n  /**\n   * Create detailed stakeholder profiles for realistic perspectives\n   */\n  createStakeholderProfiles() {\n    this.stakeholderProfiles.set('healthcare-patient', {\n      perspective: 'Healthcare Patient',\n      concerns: [\n        'Quality of care',\n        'Privacy protection',\n        'Fair treatment',\n        'Access to services',\n      ],\n      motivations: [\n        'Health and well-being',\n        'Dignity and respect',\n        'Timely care',\n        'Affordable treatment',\n      ],\n      constraints: [\n        'Limited health literacy',\n        'Financial limitations',\n        'Insurance restrictions',\n        'Geographic barriers',\n      ],\n      questions: [\n        'Will AI help me get better care or create barriers?',\n        'Who has access to my health data and how is it used?',\n        'What happens if AI makes a mistake about my health?',\n        'Will AI treat me fairly regardless of my background?',\n      ],\n    });\n\n    this.stakeholderProfiles.set('healthcare-provider', {\n      perspective: 'Healthcare Provider',\n      concerns: [\n        'Patient outcomes',\n        'Liability and malpractice',\n        'Workflow efficiency',\n        'Professional autonomy',\n      ],\n      motivations: [\n        'Providing best possible care',\n        'Reducing medical errors',\n        'Managing workload',\n        'Professional development',\n      ],\n      constraints: [\n        'Time pressures',\n        'Legal requirements',\n        'Technology limitations',\n        'Resource constraints',\n      ],\n      questions: [\n        'How can AI help me provide better patient care?',\n        'What happens if I disagree with AI recommendations?',\n        'Am I liable if AI-assisted decisions cause harm?',\n        'How do I maintain my professional skills and judgment?',\n      ],\n    });\n\n    this.stakeholderProfiles.set('student', {\n      perspective: 'Student',\n      concerns: [\n        'Learning effectiveness',\n        'Privacy protection',\n        'Fair assessment',\n        'Future opportunities',\n      ],\n      motivations: [\n        'Academic success',\n        'Personal growth',\n        'Career preparation',\n        'Social connection',\n      ],\n      constraints: [\n        'Academic pressure',\n        'Limited resources',\n        'Technology access',\n        'Time management',\n      ],\n      questions: [\n        'Will AI help me learn better or just monitor me more?',\n        'How is my data being used and who can see it?',\n        'Will AI assessments be fair to students like me?',\n        'What happens to my privacy and autonomy?',\n      ],\n    });\n\n    this.stakeholderProfiles.set('educator', {\n      perspective: 'Educator',\n      concerns: [\n        'Student learning outcomes',\n        'Teaching effectiveness',\n        'Professional autonomy',\n        'Equity in education',\n      ],\n      motivations: [\n        'Supporting student success',\n        'Improving teaching practice',\n        'Reducing workload',\n        'Professional growth',\n      ],\n      constraints: [\n        'Limited training time',\n        'Technology budgets',\n        'Administrative requirements',\n        'Class size',\n      ],\n      questions: [\n        'How can AI enhance rather than replace my teaching?',\n        'Will AI help me reach all students effectively?',\n        'How do I maintain meaningful relationships with students?',\n        'What training do I need to use AI tools responsibly?',\n      ],\n    });\n\n    // Add more stakeholder profiles for other domains...\n  }\n\n  /**\n   * Generate age-appropriate scenario for specific domain and grade level\n   */\n  generateScenario(domain, ageGroup, options = {}) {\n    const templates = this.scenarioTemplates.get(domain);\n    const adaptations = this.adaptationStrategies.get(ageGroup);\n\n    if (!templates || !adaptations) {\n      throw new Error(`Invalid domain (${domain}) or age group (${ageGroup})`);\n    }\n\n    // Select scenario based on options or randomly\n    const baseScenario = options.scenarioId\n      ? templates.baseScenarios.find(s => s.id === options.scenarioId)\n      : templates.baseScenarios[\n          Math.floor(Math.random() * templates.baseScenarios.length)\n        ];\n\n    // Adapt scenario for age group\n    const adaptedScenario = this.adaptScenarioForAge(\n      baseScenario,\n      adaptations,\n      options\n    );\n\n    // Add real-world connections if requested\n    if (options.includeRealWorld) {\n      adaptedScenario.realWorldCases = this.getRelevantRealWorldCases(domain);\n    }\n\n    // Add educator resources\n    if (options.includeEducatorResources) {\n      adaptedScenario.educatorResources = this.generateEducatorResources(\n        adaptedScenario,\n        ageGroup\n      );\n    }\n\n    return adaptedScenario;\n  }\n\n  /**\n   * Adapt base scenario for specific age group\n   */\n  adaptScenarioForAge(baseScenario, adaptations, _options) {\n    return {\n      ...baseScenario,\n\n      // Adapt language and complexity\n      description: this.adaptLanguage(\n        baseScenario.description,\n        adaptations.language\n      ),\n      context: this.adaptLanguage(baseScenario.context, adaptations.language),\n\n      // Simplify or expand stakeholders\n      stakeholders: this.adaptStakeholders(\n        baseScenario.stakeholders,\n        adaptations.stakeholders\n      ),\n\n      // Adjust ethical dilemmas\n      ethicalDilemmas: this.adaptDilemmas(\n        baseScenario.ethicalDilemmas,\n        adaptations.complexity\n      ),\n\n      // Add age-appropriate activities\n      activities: adaptations.activities,\n\n      // Include assessment methods\n      assessment: adaptations.assessment,\n\n      // Add choice framework\n      choices: this.generateChoices(baseScenario, adaptations),\n\n      // Include discussion prompts\n      discussionPrompts: this.generateDiscussionPrompts(\n        baseScenario,\n        adaptations\n      ),\n\n      // Add reflection questions\n      reflectionQuestions: this.generateReflectionQuestions(\n        baseScenario,\n        adaptations\n      ),\n    };\n  }\n\n  /**\n   * Generate choices for open-ended exploration\n   */\n  generateChoices(scenario, adaptations) {\n    // Create choice categories based on scenario and age group\n    const choiceCategories = [\n      {\n        category: 'System Design',\n        question: 'How should the AI system work?',\n        options: this.generateSystemDesignChoices(scenario, adaptations),\n      },\n      {\n        category: 'Data Usage',\n        question: 'What information should the AI use?',\n        options: this.generateDataChoices(scenario, adaptations),\n      },\n      {\n        category: 'Fairness Approach',\n        question: 'How should the AI ensure fairness?',\n        options: this.generateFairnessChoices(scenario, adaptations),\n      },\n      {\n        category: 'Human Oversight',\n        question: 'What role should humans play?',\n        options: this.generateOversightChoices(scenario, adaptations),\n      },\n    ];\n\n    return choiceCategories;\n  }\n\n  /**\n   * Generate system design choice options\n   */\n  generateSystemDesignChoices(scenario, adaptations) {\n    const baseChoices = [\n      {\n        id: 'fully-automated',\n        label: 'Fully Automated',\n        description: 'AI makes all decisions automatically',\n        pros: [\n          'Fast and efficient',\n          'Consistent decisions',\n          'Handles large volumes',\n        ],\n        cons: [\n          'Less flexibility',\n          'Hard to explain decisions',\n          'May miss context',\n        ],\n      },\n      {\n        id: 'ai-assisted',\n        label: 'AI-Assisted',\n        description: 'AI provides recommendations for human decision-makers',\n        pros: [\n          'Combines AI efficiency with human judgment',\n          'Easier to explain',\n          'Maintains human control',\n        ],\n        cons: [\n          'Slower than automated',\n          'Requires training',\n          'May introduce human bias',\n        ],\n      },\n      {\n        id: 'human-reviewed',\n        label: 'Human-Reviewed',\n        description: 'AI makes decisions but humans review them',\n        pros: ['Catches AI errors', 'Maintains oversight', 'Builds trust'],\n        cons: [\n          'Resource intensive',\n          'May create bottlenecks',\n          'Reviewer bias possible',\n        ],\n      },\n    ];\n\n    return this.adaptChoicesForAge(baseChoices, adaptations);\n  }\n\n  /**\n   * Adapt choice language and complexity for age group\n   */\n  adaptChoicesForAge(choices, adaptations) {\n    return choices.map(choice => ({\n      ...choice,\n      description: this.adaptLanguage(choice.description, adaptations.language),\n      pros: choice.pros.map(pro =>\n        this.adaptLanguage(pro, adaptations.language)\n      ),\n      cons: choice.cons.map(con =>\n        this.adaptLanguage(con, adaptations.language)\n      ),\n    }));\n  }\n\n  /**\n   * Simple language adaptation function\n   */\n  adaptLanguage(text, languageLevel) {\n    // This would include more sophisticated language adaptation\n    // For now, a simple implementation\n    if (languageLevel.includes('Simple')) {\n      return text\n        .replace(/algorithm/gi, 'computer program')\n        .replace(/stakeholder/gi, 'person affected')\n        .replace(/implementation/gi, 'putting into use')\n        .replace(/optimization/gi, 'making work better');\n    }\n    return text;\n  }\n\n  // Additional helper methods for choice generation...\n  generateDataChoices(_scenario, _adaptations) {\n    // Implementation for data usage choices\n    return [];\n  }\n\n  generateFairnessChoices(_scenario, _adaptations) {\n    // Implementation for fairness approach choices\n    return [];\n  }\n\n  generateOversightChoices(_scenario, _adaptations) {\n    // Implementation for human oversight choices\n    return [];\n  }\n\n  adaptStakeholders(stakeholders, _adaptationLevel) {\n    // Simplify or expand stakeholder list based on age group\n    return stakeholders;\n  }\n\n  adaptDilemmas(dilemmas, _complexityLevel) {\n    // Adjust ethical dilemma complexity\n    return dilemmas;\n  }\n\n  generateDiscussionPrompts(_scenario, _adaptations) {\n    // Create age-appropriate discussion questions\n    return [];\n  }\n\n  generateReflectionQuestions(_scenario, _adaptations) {\n    // Create reflection questions for learning consolidation\n    return [];\n  }\n\n  getRelevantRealWorldCases(domain) {\n    // Return real-world cases relevant to domain\n    return Array.from(this.realWorldCases.values()).filter(caseStudy =>\n      caseStudy.title.toLowerCase().includes(domain.toLowerCase())\n    );\n  }\n\n  generateEducatorResources(scenario, ageGroup) {\n    // Create comprehensive educator resources\n    return {\n      lessonPlan: this.generateLessonPlan(scenario, ageGroup),\n      activities: this.generateTeachingActivities(scenario, ageGroup),\n      assessment: this.generateAssessmentTools(scenario, ageGroup),\n      background: this.generateBackgroundInfo(scenario),\n      extensions: this.generateExtensionActivities(scenario, ageGroup),\n    };\n  }\n\n  // Placeholder methods for educator resource generation\n  generateLessonPlan(_scenario, _ageGroup) {\n    return {};\n  }\n  generateTeachingActivities(_scenario, _ageGroup) {\n    return [];\n  }\n  generateAssessmentTools(_scenario, _ageGroup) {\n    return {};\n  }\n  generateBackgroundInfo(_scenario) {\n    return {};\n  }\n  generateExtensionActivities(_scenario, _ageGroup) {\n    return [];\n  }\n\n  /**\n   * Generate scenarios for a simulation with specified difficulty\n   */\n  generateScenarios(\n    domain,\n    difficulty,\n    count = SCENARIO_CONSTANTS.DEFAULT_SCENARIO_COUNT\n  ) {\n    try {\n      const scenarios = [];\n      const templates = this.scenarioTemplates.get(domain);\n\n      if (!templates) {\n        // Return fallback scenarios\n        return this.createFallbackScenarios(domain, difficulty, count);\n      }\n\n      for (\n        let i = SCENARIO_CONSTANTS.LOOP_INDICES.START;\n        i < Math.min(count, templates.baseScenarios.length);\n        i++\n      ) {\n        const baseScenario = templates.baseScenarios[i];\n        const adaptedScenario = this.generateScenario(\n          domain,\n          this.mapDifficultyToAge(difficulty),\n          {\n            scenarioId: baseScenario.id,\n            includeRealWorld: difficulty !== 'beginner',\n            includeEducatorResources: true,\n          }\n        );\n        scenarios.push(adaptedScenario);\n      }\n\n      return scenarios;\n    } catch (error) {\n      logger.error('Error generating scenarios:', error);\n      return this.createFallbackScenarios(domain, difficulty, count);\n    }\n  }\n\n  /**\n   * Map simulation difficulty to age group\n   */\n  mapDifficultyToAge(difficulty) {\n    switch (difficulty) {\n      case 'beginner':\n        return 'middle';\n      case 'intermediate':\n        return 'high';\n      case 'advanced':\n        return 'college';\n      default:\n        return 'high';\n    }\n  }\n\n  /**\n   * Create fallback scenarios when templates are not available\n   */\n  createFallbackScenarios(domain, difficulty, count) {\n    const fallbackScenarios = [];\n\n    for (let i = SCENARIO_CONSTANTS.LOOP_INDICES.START; i < count; i++) {\n      fallbackScenarios.push({\n        id: `fallback-${domain}-${i}`,\n        title: `AI Ethics Scenario ${i + SCENARIO_CONSTANTS.FALLBACK_VALUES.SCENARIO_NUMBER_OFFSET}`,\n        description: `Explore ethical considerations in AI applications for ${domain}`,\n        context: `A scenario exploring AI ethics in the context of ${domain}`,\n        stakeholders: ['Users', 'Developers', 'Society', 'Regulators'],\n        ethicalDilemmas: [\n          'How do we ensure fairness in AI decisions?',\n          'What data should AI systems use?',\n          'How do we maintain human oversight?',\n          'What are the unintended consequences?',\n        ],\n        choices: this.createBasicChoices(),\n        activities: this.getActivitiesForDifficulty(difficulty),\n        assessment: this.getAssessmentForDifficulty(difficulty),\n      });\n    }\n\n    return fallbackScenarios;\n  }\n\n  /**\n   * Create basic choice structure for fallback scenarios\n   */\n  createBasicChoices() {\n    return [\n      {\n        category: 'Approach',\n        question: 'How should the AI system be designed?',\n        options: [\n          {\n            id: 'efficiency',\n            label: 'Efficiency Focused',\n            description: 'Prioritize speed and accuracy',\n            pros: ['Fast results', 'High accuracy'],\n            cons: ['May miss edge cases', 'Less flexible'],\n          },\n          {\n            id: 'fairness',\n            label: 'Fairness Focused',\n            description: 'Prioritize equal treatment',\n            pros: ['More equitable', 'Considers all groups'],\n            cons: ['May be slower', 'More complex'],\n          },\n          {\n            id: 'transparency',\n            label: 'Transparency Focused',\n            description: 'Prioritize explainability',\n            pros: ['Easy to understand', 'Builds trust'],\n            cons: ['May sacrifice accuracy', 'More complex to build'],\n          },\n        ],\n      },\n    ];\n  }\n\n  /**\n   * Get activities appropriate for difficulty level\n   */\n  getActivitiesForDifficulty(difficulty) {\n    switch (difficulty) {\n      case 'beginner':\n        return [\n          'Discussion and voting',\n          'Simple role-playing',\n          'Drawing solutions',\n        ];\n      case 'intermediate':\n        return [\n          'Structured debates',\n          'Case study analysis',\n          'Group problem-solving',\n        ];\n      case 'advanced':\n        return [\n          'Research projects',\n          'Policy development',\n          'Statistical analysis',\n        ];\n      default:\n        return ['Discussion and analysis', 'Problem-solving', 'Reflection'];\n    }\n  }\n\n  /**\n   * Get assessment methods for difficulty level\n   */\n  getAssessmentForDifficulty(difficulty) {\n    switch (difficulty) {\n      case 'beginner':\n        return [\n          'Verbal explanations',\n          'Simple reflections',\n          'Peer discussions',\n        ];\n      case 'intermediate':\n        return ['Written analysis', 'Group presentations', 'Case studies'];\n      case 'advanced':\n        return [\n          'Research papers',\n          'Policy proposals',\n          'Professional presentations',\n        ];\n      default:\n        return ['Reflections', 'Discussions', 'Written responses'];\n    }\n  }\n}\n\nexport default ScenarioGenerator;\n","/**\n * Enhanced Canvas Manager - Modern canvas and visual engine management system\n * Provides accessibility, performance monitoring, theme integration, and error handling\n *\n * Features:\n * - WCAG 2.1 AA compliant canvas accessibility\n * - Theme integration\n * - Performance monitoring and optimization\n * - Advanced error handling and recovery\n * - Touch and gesture support\n * - Memory management and cleanup\n * - Cross-tab canvas coordination\n * - Dynamic resize handling\n *\n * @version 2.0.0\n * @author SimulateAI Team\n * @license Apache-2.0\n */\n\nimport logger from './logger.js';\n\n// Enhanced constants and configuration\nconst CANVAS_CONSTANTS = {\n  DEFAULT_WIDTH: 400,\n  DEFAULT_HEIGHT: 300,\n  MIN_WIDTH: 100,\n  MIN_HEIGHT: 100,\n  MAX_WIDTH: 4096,\n  MAX_HEIGHT: 4096,\n  RESIZE_DEBOUNCE: 100,\n  CLEANUP_INTERVAL: 300000, // 5 minutes\n  TOUCH_TARGET_SIZE: 44,\n  FOCUS_RING_WIDTH: 3,\n};\n\n// Performance thresholds\nconst PERFORMANCE_THRESHOLDS = {\n  ENGINE_CREATION: 50, // ms - Engine/canvas creation can take longer\n  RENDER_TARGET: 16, // ms - Rendering operations should be fast (60fps)\n  DEFAULT_OPERATION: 25, // ms - Default threshold for other operations\n  SIGNIFICANT_SIZE_CHANGE: 50, // px - Significant canvas size change\n  DIMENSION_TOLERANCE: 5, // px - Tolerance for dimension changes\n};\n\n// Memory and time constants\nconst KB_SIZE = 1024;\nconst MEMORY_CONSTANTS = {\n  BYTES_PER_PIXEL: 4, // RGBA\n  KB_SIZE,\n  BYTES_PER_KB: KB_SIZE,\n  BYTES_PER_MB: KB_SIZE * KB_SIZE,\n  DEFAULT_MAX_MEMORY_MB: 100, // 100MB\n  CLEANUP_MAX_AGE_MINUTES: 30, // 30 minutes\n  SECONDS_PER_MINUTE: 60,\n  MS_PER_SECOND: 1000,\n};\n\n// Computed constants\nconst COMPUTED_CONSTANTS = {\n  get DEFAULT_MAX_MEMORY() {\n    return MEMORY_CONSTANTS.DEFAULT_MAX_MEMORY_MB * MEMORY_CONSTANTS.BYTES_PER_MB;\n  },\n  get CLEANUP_MAX_AGE() {\n    return MEMORY_CONSTANTS.CLEANUP_MAX_AGE_MINUTES * MEMORY_CONSTANTS.SECONDS_PER_MINUTE * MEMORY_CONSTANTS.MS_PER_SECOND;\n  }\n};\n\nconst CANVAS_EVENTS = {\n  CANVAS_CREATED: 'canvas:created',\n  CANVAS_REMOVED: 'canvas:removed',\n  ENGINE_CREATED: 'canvas:engineCreated',\n  ENGINE_REMOVED: 'canvas:engineRemoved',\n  PERFORMANCE_WARNING: 'canvas:performanceWarning',\n  ERROR_OCCURRED: 'canvas:errorOccurred',\n  RESIZE_DETECTED: 'canvas:resizeDetected',\n};\n\n/**\n * Canvas theme management for visual consistency\n */\nclass CanvasTheme {\n  static getCurrentTheme() {\n    const prefersHighContrast = window.matchMedia?.(\n      '(prefers-contrast: high)'\n    ).matches;\n    const prefersReducedMotion = window.matchMedia?.(\n      '(prefers-reduced-motion: reduce)'\n    ).matches;\n\n    return {\n      highContrast: prefersHighContrast,\n      reducedMotion: prefersReducedMotion,\n      theme: prefersHighContrast ? 'highContrast' : 'light',\n    };\n  }\n\n  static getCanvasStyle(theme = null) {\n    const currentTheme = theme || this.getCurrentTheme();\n\n    return {\n      backgroundColor: currentTheme.highContrast ? '#000000' : '#ffffff',\n      borderColor: currentTheme.highContrast ? '#ffff00' : '#e0e0e0',\n      focusColor: currentTheme.highContrast ? '#ffff00' : '#007bff',\n    };\n  }\n}\n\n/**\n * Performance monitoring for canvas operations\n */\nclass CanvasPerformanceMonitor {\n  static metrics = new Map();\n  static operations = new Map();\n\n  static startOperation(operationId) {\n    const startTime = performance.now();\n    this.operations.set(operationId, startTime);\n    return startTime;\n  }\n\n  static endOperation(operationId, startTime) {\n    const endTime = performance.now();\n    const duration = endTime - startTime;\n\n    if (!this.metrics.has(operationId)) {\n      this.metrics.set(operationId, {\n        count: 0,\n        totalTime: 0,\n        averageTime: 0,\n        maxTime: 0,\n        minTime: Infinity,\n      });\n    }\n\n    const metric = this.metrics.get(operationId);\n    metric.count++;\n    metric.totalTime += duration;\n    metric.averageTime = metric.totalTime / metric.count;\n    metric.maxTime = Math.max(metric.maxTime, duration);\n    metric.minTime = Math.min(metric.minTime, duration);\n\n    this.operations.delete(operationId);\n\n    // Use different thresholds for different operation types\n    const getThreshold = opId => {\n      if (\n        opId.includes('engine-creation') ||\n        opId.includes('canvas-creation')\n      ) {\n        return PERFORMANCE_THRESHOLDS.ENGINE_CREATION; // Engine/canvas creation can take longer\n      }\n      if (opId.includes('render') || opId.includes('draw')) {\n        return PERFORMANCE_THRESHOLDS.RENDER_TARGET; // Rendering operations should be fast (60fps)\n      }\n      return PERFORMANCE_THRESHOLDS.DEFAULT_OPERATION; // Default threshold for other operations\n    };\n\n    const threshold = getThreshold(operationId);\n    if (duration > threshold) {\n      logger.warn(\n        `Slow canvas operation: ${operationId} took ${duration.toFixed(2)}ms (threshold: ${threshold}ms)`\n      );\n    }\n\n    return duration;\n  }\n\n  static getMetrics() {\n    return Object.fromEntries(this.metrics);\n  }\n\n  static reset() {\n    this.metrics.clear();\n    this.operations.clear();\n  }\n}\n\n/**\n * Enhanced error handling for canvas operations\n */\nclass CanvasError extends Error {\n  constructor(message, context = {}, originalError = null) {\n    super(message);\n    this.name = 'CanvasError';\n    this.context = context;\n    this.canvasId = context.canvasId;\n    this.timestamp = Date.now();\n    this.theme = CanvasTheme.getCurrentTheme();\n    this.originalError = originalError;\n  }\n}\n\n/**\n * Enhanced Canvas Manager with modern features and accessibility\n */\n\nclass CanvasManager {\n  constructor() {\n    this.canvases = new Map();\n    this.visualEngines = new Map();\n    this.activeEngines = new Set();\n    this.nextId = 1;\n    this.eventListeners = new Map();\n    this.resizeObservers = new Map();\n    this.performanceMonitor = CanvasPerformanceMonitor;\n    this.theme = CanvasTheme.getCurrentTheme();\n    this.cleanupInterval = null;\n    this.accessibilityEnabled = true;\n    this.touchSupported = 'ontouchstart' in window;\n    this.errorCount = 0;\n\n    // Setup theme monitoring\n    this.setupThemeMonitoring();\n\n    // Setup periodic cleanup\n    this.setupPeriodicCleanup();\n\n    // Setup global error handling\n    this.setupErrorHandling();\n\n    logger.debug('Enhanced CanvasManager initialized with advanced features');\n  }\n\n  /**\n   * Setup theme change monitoring\n   */\n  setupThemeMonitoring() {\n    const contrastQuery = window.matchMedia?.('(prefers-contrast: high)');\n    const motionQuery = window.matchMedia?.('(prefers-reduced-motion: reduce)');\n\n    const handleThemeChange = () => {\n      this.theme = CanvasTheme.getCurrentTheme();\n      this.updateAllCanvasThemes();\n      this.emit(CANVAS_EVENTS.THEME_CHANGED, { theme: this.theme });\n    };\n\n    contrastQuery?.addEventListener?.('change', handleThemeChange);\n    motionQuery?.addEventListener?.('change', handleThemeChange);\n\n    // Store references for cleanup\n    this.themeQueries = { contrastQuery, motionQuery };\n    this.themeChangeHandler = handleThemeChange;\n  }\n\n  /**\n   * Setup periodic cleanup of unused resources\n   */\n  setupPeriodicCleanup() {\n    this.cleanupInterval = setInterval(() => {\n      this.performMaintenanceCleanup();\n    }, CANVAS_CONSTANTS.CLEANUP_INTERVAL);\n  }\n\n  /**\n   * Setup global error handling\n   */\n  setupErrorHandling() {\n    window.addEventListener('error', event => {\n      if (event.target && event.target.tagName === 'CANVAS') {\n        this.handleError(\n          new CanvasError(\n            'Canvas error detected',\n            {\n              canvasId: event.target.id,\n              error: event.error,\n            },\n            event.error\n          )\n        );\n      }\n    });\n  }\n\n  /**\n   * Update theme for all managed canvases\n   */\n  updateAllCanvasThemes() {\n    const style = CanvasTheme.getCanvasStyle(this.theme);\n\n    for (const [canvasId, canvasData] of this.canvases) {\n      try {\n        this.applyCanvasTheme(canvasData.element, style);\n\n        // Notify visual engine of theme change\n        const engine = this.visualEngines.get(canvasId);\n        if (engine && engine.updateTheme) {\n          engine.updateTheme(this.theme.theme); // Pass the theme string, not the theme object\n        }\n      } catch (error) {\n        this.handleError(\n          new CanvasError(\n            'Failed to update canvas theme',\n            {\n              canvasId,\n            },\n            error\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * Apply theme styling to canvas\n   */\n  applyCanvasTheme(canvas, style) {\n    if (!canvas) return;\n\n    canvas.style.backgroundColor = style.backgroundColor;\n    canvas.style.border = `1px solid ${style.borderColor}`;\n    canvas.style.outline = 'none';\n\n    // Add theme classes\n    canvas.classList.toggle('canvas-high-contrast', this.theme.highContrast);\n    canvas.classList.toggle('canvas-reduced-motion', this.theme.reducedMotion);\n  } /**\n   * Create a managed canvas with enhanced features and accessibility\n   */\n  async createCanvas(options = {}) {\n    const startTime = this.performanceMonitor.startOperation('canvas-creation');\n\n    try {\n      const {\n        width = CANVAS_CONSTANTS.DEFAULT_WIDTH,\n        height = CANVAS_CONSTANTS.DEFAULT_HEIGHT,\n        id = null,\n        container = null,\n        className = 'managed-canvas',\n        accessibility = true,\n        responsive = false,\n        touchSupport = this.touchSupported,\n        ariaLabel = 'Interactive canvas element',\n      } = options;\n\n      // Validate dimensions\n      const validatedWidth = Math.max(\n        CANVAS_CONSTANTS.MIN_WIDTH,\n        Math.min(CANVAS_CONSTANTS.MAX_WIDTH, width)\n      );\n      const validatedHeight = Math.max(\n        CANVAS_CONSTANTS.MIN_HEIGHT,\n        Math.min(CANVAS_CONSTANTS.MAX_HEIGHT, height)\n      );\n\n      // Generate unique ID if not provided\n      const canvasId = id || `managed-canvas-${this.nextId++}`;\n\n      // Check if canvas already exists\n      if (this.canvases.has(canvasId)) {\n        logger.warn(\n          `Canvas with ID ${canvasId} already exists. Returning existing canvas.`\n        );\n        const existingCanvasData = this.canvases.get(canvasId);\n        return { canvas: existingCanvasData.element, id: canvasId };\n      }\n\n      const canvas = document.createElement('canvas');\n      canvas.id = canvasId;\n      canvas.width = validatedWidth;\n      canvas.height = validatedHeight;\n      canvas.className = `${className} canvas-managed`;\n\n      // Enhanced accessibility attributes\n      if (accessibility && this.accessibilityEnabled) {\n        this.setupCanvasAccessibility(canvas, {\n          ariaLabel,\n          role: options.role || 'img',\n          description: options.description,\n        });\n      }\n\n      // Apply theme styling\n      const themeStyle = CanvasTheme.getCanvasStyle(this.theme);\n      this.applyCanvasTheme(canvas, themeStyle);\n\n      // Setup touch support if enabled\n      if (touchSupport) {\n        this.setupTouchSupport(canvas);\n      }\n\n      // Store canvas reference with enhanced metadata\n      const canvasData = {\n        element: canvas,\n        created: Date.now(),\n        options: { ...options, width: validatedWidth, height: validatedHeight },\n        accessibility,\n        responsive,\n        touchSupport,\n        resizeObserver: null,\n        performanceMetrics: {\n          renderCount: 0,\n          totalRenderTime: 0,\n          averageRenderTime: 0,\n        },\n      };\n\n      this.canvases.set(canvasId, canvasData);\n\n      // Append to container if provided\n      if (container) {\n        container.appendChild(canvas);\n\n        // Setup responsive behavior if enabled\n        if (responsive) {\n          this.makeResponsive(canvasId);\n        }\n      }\n\n      // Emit creation event\n      this.emit(CANVAS_EVENTS.CANVAS_CREATED, {\n        canvasId,\n        dimensions: { width: validatedWidth, height: validatedHeight },\n        timestamp: Date.now(),\n      });\n\n      logger.debug(\n        `Created enhanced canvas: ${canvasId} (${validatedWidth}x${validatedHeight})`\n      );\n      return { canvas, id: canvasId };\n    } catch (error) {\n      this.handleError(\n        new CanvasError(\n          'Failed to create canvas',\n          {\n            options,\n          },\n          error\n        )\n      );\n      throw error;\n    } finally {\n      this.performanceMonitor.endOperation('canvas-creation', startTime);\n    }\n  }\n\n  /**\n   * Setup accessibility features for canvas\n   */\n  setupCanvasAccessibility(canvas, accessibilityOptions) {\n    const { ariaLabel, role, description } = accessibilityOptions;\n\n    // Basic ARIA attributes\n    canvas.setAttribute('role', role);\n    canvas.setAttribute('aria-label', ariaLabel);\n    canvas.setAttribute('tabindex', '0');\n\n    // Enhanced accessibility features\n    if (description) {\n      const descId = `${canvas.id}-description`;\n      const descElement = document.createElement('div');\n      descElement.id = descId;\n      descElement.className = 'sr-only';\n      descElement.textContent = description;\n      canvas.parentNode?.insertBefore(descElement, canvas.nextSibling);\n      canvas.setAttribute('aria-describedby', descId);\n    }\n\n    // Focus styling\n    canvas.addEventListener('focus', () => {\n      canvas.style.outline = `${CANVAS_CONSTANTS.FOCUS_RING_WIDTH}px solid ${CanvasTheme.getCanvasStyle(this.theme).focusColor}`;\n      canvas.style.outlineOffset = '2px';\n    });\n\n    canvas.addEventListener('blur', () => {\n      canvas.style.outline = 'none';\n    });\n\n    // Keyboard event handling\n    canvas.addEventListener('keydown', e => {\n      this.handleCanvasKeydown(canvas.id, e);\n    });\n  }\n\n  /**\n   * Setup touch support for canvas\n   */\n  setupTouchSupport(canvas) {\n    // Touch event handling with proper touch targets\n    canvas.style.touchAction = 'manipulation';\n    canvas.style.minWidth = `${CANVAS_CONSTANTS.TOUCH_TARGET_SIZE}px`;\n    canvas.style.minHeight = `${CANVAS_CONSTANTS.TOUCH_TARGET_SIZE}px`;\n\n    // Prevent default touch behaviors that might interfere\n    canvas.addEventListener(\n      'touchstart',\n      e => {\n        e.preventDefault();\n      },\n      { passive: false }\n    );\n\n    canvas.addEventListener(\n      'touchmove',\n      e => {\n        e.preventDefault();\n      },\n      { passive: false }\n    );\n  }\n\n  /**\n   * Handle keyboard interactions on canvas\n   */\n  handleCanvasKeydown(canvasId, event) {\n    const engine = this.visualEngines.get(canvasId);\n\n    // Standard accessibility keyboard shortcuts\n    switch (event.key) {\n      case 'Enter':\n      case ' ':\n        // Trigger interaction\n        if (engine && engine.handleInteraction) {\n          engine.handleInteraction('activate');\n        }\n        event.preventDefault();\n        break;\n\n      case 'Escape':\n        // Cancel or exit\n        if (engine && engine.handleInteraction) {\n          engine.handleInteraction('cancel');\n        }\n        event.preventDefault();\n        break;\n\n      case 'ArrowUp':\n      case 'ArrowDown':\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        // Navigation within canvas\n        if (engine && engine.handleNavigation) {\n          engine.handleNavigation(event.key);\n        }\n        event.preventDefault();\n        break;\n    }\n  } /**\n   * Create a visual engine for a specific canvas with enhanced features\n   */\n  async createVisualEngine(canvasId, engineOptions = {}) {\n    const startTime = this.performanceMonitor.startOperation('engine-creation');\n\n    try {\n      const canvasData = this.canvases.get(canvasId);\n      if (!canvasData) {\n        throw new CanvasError(\n          `Canvas ${canvasId} not found. Create canvas first.`,\n          {\n            canvasId,\n          }\n        );\n      }\n\n      // Check if engine already exists for this canvas\n      if (this.visualEngines.has(canvasId)) {\n        logger.warn(\n          `Visual engine for ${canvasId} already exists. Returning existing engine.`\n        );\n        return this.visualEngines.get(canvasId);\n      }\n\n      // Enhanced engine options with theme and accessibility integration\n      const enhancedOptions = {\n        renderMode: 'canvas',\n        accessibility: this.accessibilityEnabled,\n        debug: false,\n        theme: this.theme.theme, // Extract the theme string from the theme object\n        performance: {\n          monitoring: true,\n          targetFPS: 60,\n          maxMemoryUsage: COMPUTED_CONSTANTS.DEFAULT_MAX_MEMORY, // 100MB\n        },\n        ...engineOptions,\n      };\n\n      // Import visual engine dynamically to avoid circular dependencies\n      const VisualEngine = await import('../core/visual-engine.js');\n\n      const engine = new VisualEngine.default(\n        canvasData.element,\n        enhancedOptions\n      );\n\n      // Enhanced engine integration\n      if (engine.setTheme) {\n        engine.setTheme(this.theme.theme); // Pass the theme string, not the theme object\n      }\n\n      if (engine.setPerformanceMonitor) {\n        engine.setPerformanceMonitor(this.performanceMonitor);\n      }\n\n      if (engine.setErrorHandler) {\n        engine.setErrorHandler(error => {\n          this.handleError(\n            new CanvasError(\n              'Visual engine error',\n              {\n                canvasId,\n                engineError: error.message,\n              },\n              error\n            )\n          );\n        });\n      }\n\n      // Store engine reference\n      this.visualEngines.set(canvasId, engine);\n      this.activeEngines.add(canvasId);\n\n      // Setup engine event listeners\n      this.setupEngineEventListeners(canvasId, engine);\n\n      // Emit creation event\n      this.emit(CANVAS_EVENTS.ENGINE_CREATED, {\n        canvasId,\n        engineOptions: enhancedOptions,\n        timestamp: Date.now(),\n      });\n\n      logger.debug(`Created enhanced visual engine for canvas: ${canvasId}`);\n      return engine;\n    } catch (error) {\n      this.handleError(\n        new CanvasError(\n          `Failed to create visual engine for ${canvasId}`,\n          {\n            canvasId,\n            engineOptions,\n          },\n          error\n        )\n      );\n      throw error;\n    } finally {\n      this.performanceMonitor.endOperation('engine-creation', startTime);\n    }\n  }\n\n  /**\n   * Setup event listeners for visual engine\n   */\n  setupEngineEventListeners(canvasId, engine) {\n    // Performance monitoring\n    if (engine.on) {\n      engine.on('render', renderTime => {\n        const canvasData = this.canvases.get(canvasId);\n        if (canvasData) {\n          canvasData.performanceMetrics.renderCount++;\n          canvasData.performanceMetrics.totalRenderTime += renderTime;\n          canvasData.performanceMetrics.averageRenderTime =\n            canvasData.performanceMetrics.totalRenderTime /\n            canvasData.performanceMetrics.renderCount;\n\n          // Warn about slow renders\n          if (renderTime > PERFORMANCE_THRESHOLDS.RENDER_TARGET) {\n            this.emit(CANVAS_EVENTS.PERFORMANCE_WARNING, {\n              canvasId,\n              renderTime,\n              threshold: 16,\n            });\n          }\n        }\n      });\n\n      engine.on('error', error => {\n        this.handleError(\n          new CanvasError(\n            'Engine error event',\n            {\n              canvasId,\n            },\n            error\n          )\n        );\n      });\n\n      engine.on('accessibility', data => {\n        // Handle accessibility events from engine\n        if (data.announcement) {\n          this.announceToScreenReader(data.announcement);\n        }\n      });\n    }\n  }\n\n  /**\n   * Announce information to screen readers\n   */\n  announceToScreenReader(message, priority = 'polite') {\n    if (!this.accessibilityEnabled) return;\n\n    const announcement = document.createElement('div');\n    announcement.setAttribute('aria-live', priority);\n    announcement.setAttribute('aria-atomic', 'true');\n    announcement.className = 'sr-only';\n    announcement.textContent = message;\n\n    document.body.appendChild(announcement);\n\n    // Remove after announcement\n    setTimeout(() => {\n      document.body.removeChild(announcement);\n    }, 1000);\n  }\n\n  /**\n   * Get canvas element by ID\n   */\n  getCanvas(canvasId) {\n    const canvasData = this.canvases.get(canvasId);\n    return canvasData ? canvasData.element : null;\n  }\n\n  /**\n   * Get visual engine by canvas ID\n   */\n  getVisualEngine(canvasId) {\n    return this.visualEngines.get(canvasId);\n  } /**\n   * Remove canvas and cleanup associated resources with enhanced cleanup\n   */\n  async removeCanvas(canvasId) {\n    const startTime = this.performanceMonitor.startOperation('canvas-removal');\n\n    try {\n      // Cleanup visual engine first\n      await this.removeVisualEngine(canvasId);\n\n      // Remove canvas from DOM and storage\n      const canvasData = this.canvases.get(canvasId);\n      if (canvasData) {\n        // Cleanup resize observer\n        if (canvasData.resizeObserver) {\n          canvasData.resizeObserver.disconnect();\n        }\n\n        // Remove accessibility description\n        const descElement = document.getElementById(`${canvasId}-description`);\n        if (descElement) {\n          descElement.remove();\n        }\n\n        // Remove canvas element\n        if (canvasData.element.parentNode) {\n          canvasData.element.parentNode.removeChild(canvasData.element);\n        }\n\n        // Clear canvas data\n        this.canvases.delete(canvasId);\n\n        // Emit removal event\n        this.emit(CANVAS_EVENTS.CANVAS_REMOVED, {\n          canvasId,\n          timestamp: Date.now(),\n        });\n\n        logger.debug(`Removed canvas: ${canvasId}`);\n      }\n    } catch (error) {\n      this.handleError(\n        new CanvasError(\n          'Failed to remove canvas',\n          {\n            canvasId,\n          },\n          error\n        )\n      );\n    } finally {\n      this.performanceMonitor.endOperation('canvas-removal', startTime);\n    }\n  }\n\n  /**\n   * Remove visual engine and cleanup resources with enhanced error handling\n   */\n  async removeVisualEngine(canvasId) {\n    const startTime = this.performanceMonitor.startOperation('engine-removal');\n\n    try {\n      const engine = this.visualEngines.get(canvasId);\n      if (engine) {\n        // Comprehensive cleanup sequence\n        try {\n          // Stop any active animations\n          if (engine.pause) {\n            engine.pause();\n          }\n\n          // Remove event listeners\n          if (engine.removeAllListeners) {\n            engine.removeAllListeners();\n          }\n\n          // Cleanup engine resources\n          if (engine.destroy) {\n            await engine.destroy();\n          } else if (engine.cleanup) {\n            await engine.cleanup();\n          }\n\n          // Clear scene if it exists\n          if (engine.scene && engine.scene.clear) {\n            engine.scene.clear();\n          }\n\n          // Clear canvas context\n          const canvas = this.getCanvas(canvasId);\n          if (canvas) {\n            const ctx = canvas.getContext('2d');\n            if (ctx) {\n              ctx.clearRect(0, 0, canvas.width, canvas.height);\n            }\n          }\n        } catch (cleanupError) {\n          logger.warn(\n            `Error during engine cleanup for ${canvasId}:`,\n            cleanupError\n          );\n        }\n\n        this.visualEngines.delete(canvasId);\n        this.activeEngines.delete(canvasId);\n\n        // Emit removal event\n        this.emit(CANVAS_EVENTS.ENGINE_REMOVED, {\n          canvasId,\n          timestamp: Date.now(),\n        });\n\n        logger.debug(`Removed visual engine: ${canvasId}`);\n      }\n    } catch (error) {\n      this.handleError(\n        new CanvasError(\n          'Failed to remove visual engine',\n          {\n            canvasId,\n          },\n          error\n        )\n      );\n    } finally {\n      this.performanceMonitor.endOperation('engine-removal', startTime);\n    }\n  }\n\n  /**\n   * Enhanced cleanup of all canvases and engines\n   */\n  async cleanup() {\n    const startTime = this.performanceMonitor.startOperation('full-cleanup');\n\n    try {\n      logger.debug('Starting enhanced canvas manager cleanup...');\n\n      // Stop periodic cleanup\n      if (this.cleanupInterval) {\n        clearInterval(this.cleanupInterval);\n        this.cleanupInterval = null;\n      }\n\n      // Remove theme change listeners\n      if (this.themeQueries) {\n        const { contrastQuery, motionQuery } = this.themeQueries;\n\n        contrastQuery?.removeEventListener?.('change', this.themeChangeHandler);\n        motionQuery?.removeEventListener?.('change', this.themeChangeHandler);\n      }\n\n      // Remove all visual engines\n      const engineCleanupPromises = [];\n      for (const canvasId of this.visualEngines.keys()) {\n        engineCleanupPromises.push(this.removeVisualEngine(canvasId));\n      }\n      await Promise.all(engineCleanupPromises);\n\n      // Remove all canvases\n      const canvasCleanupPromises = [];\n      for (const canvasId of this.canvases.keys()) {\n        canvasCleanupPromises.push(this.removeCanvas(canvasId));\n      }\n      await Promise.all(canvasCleanupPromises);\n\n      // Clear event listeners\n      this.eventListeners.clear();\n\n      // Clear resize observers\n      for (const observer of this.resizeObservers.values()) {\n        observer.disconnect();\n      }\n      this.resizeObservers.clear();\n\n      // Reset performance monitoring\n      this.performanceMonitor.reset();\n\n      logger.debug('Enhanced canvas manager cleanup complete');\n    } catch (error) {\n      this.handleError(\n        new CanvasError('Failed to complete cleanup', {}, error)\n      );\n    } finally {\n      this.performanceMonitor.endOperation('full-cleanup', startTime);\n    }\n  }\n\n  /**\n   * Enhanced pause functionality with performance optimization\n   */\n  pauseAll() {\n    const startTime = this.performanceMonitor.startOperation('pause-all');\n\n    try {\n      this.activeEngines.forEach(canvasId => {\n        const engine = this.visualEngines.get(canvasId);\n        if (engine && engine.pause) {\n          try {\n            engine.pause();\n          } catch (error) {\n            logger.warn(`Failed to pause engine ${canvasId}:`, error);\n          }\n        }\n      });\n\n      logger.debug(`Paused ${this.activeEngines.size} active engines`);\n    } catch (error) {\n      this.handleError(\n        new CanvasError('Failed to pause all engines', {}, error)\n      );\n    } finally {\n      this.performanceMonitor.endOperation('pause-all', startTime);\n    }\n  }\n\n  /**\n   * Enhanced resume functionality with error handling\n   */\n  resumeAll() {\n    const startTime = this.performanceMonitor.startOperation('resume-all');\n\n    try {\n      this.activeEngines.forEach(canvasId => {\n        const engine = this.visualEngines.get(canvasId);\n        if (engine && engine.resume) {\n          try {\n            engine.resume();\n          } catch (error) {\n            logger.warn(`Failed to resume engine ${canvasId}:`, error);\n          }\n        }\n      });\n\n      logger.debug(`Resumed ${this.activeEngines.size} active engines`);\n    } catch (error) {\n      this.handleError(\n        new CanvasError('Failed to resume all engines', {}, error)\n      );\n    } finally {\n      this.performanceMonitor.endOperation('resume-all', startTime);\n    }\n  } /**\n   * Enhanced status reporting with performance metrics\n   */\n  getStatus() {\n    return {\n      canvases: Array.from(this.canvases.keys()),\n      visualEngines: Array.from(this.visualEngines.keys()),\n      activeEngines: Array.from(this.activeEngines),\n      totalCanvases: this.canvases.size,\n      totalEngines: this.visualEngines.size,\n      theme: this.theme,\n      performance: this.performanceMonitor.getMetrics(),\n      accessibility: this.accessibilityEnabled,\n      touchSupported: this.touchSupported,\n      errorCount: this.errorCount,\n      memoryUsage: this.getMemoryUsage(),\n    };\n  }\n\n  /**\n   * Get memory usage estimation\n   */\n  getMemoryUsage() {\n    let totalMemory = 0;\n\n    for (const [, canvasData] of this.canvases) {\n      const canvas = canvasData.element;\n      // Estimate memory usage based on canvas size and pixel data\n      const pixelData = canvas.width * canvas.height * MEMORY_CONSTANTS.BYTES_PER_PIXEL; // RGBA\n      totalMemory += pixelData;\n    }\n\n    return {\n      estimatedBytes: totalMemory,\n      estimatedMB: (totalMemory / MEMORY_CONSTANTS.BYTES_PER_MB).toFixed(2),\n      canvasCount: this.canvases.size,\n    };\n  }\n\n  /**\n   * Enhanced canvas resizing with validation and notifications\n   */\n  async resizeCanvas(canvasId, width, height) {\n    const startTime = this.performanceMonitor.startOperation('canvas-resize');\n\n    try {\n      // Validate dimensions\n      const validatedWidth = Math.max(\n        CANVAS_CONSTANTS.MIN_WIDTH,\n        Math.min(CANVAS_CONSTANTS.MAX_WIDTH, width)\n      );\n      const validatedHeight = Math.max(\n        CANVAS_CONSTANTS.MIN_HEIGHT,\n        Math.min(CANVAS_CONSTANTS.MAX_HEIGHT, height)\n      );\n\n      const canvas = this.getCanvas(canvasId);\n      const engine = this.getVisualEngine(canvasId);\n      const canvasData = this.canvases.get(canvasId);\n\n      if (canvas && canvasData) {\n        // Store old dimensions for comparison\n        const oldWidth = canvas.width;\n        const oldHeight = canvas.height;\n\n        // Update canvas dimensions\n        canvas.width = validatedWidth;\n        canvas.height = validatedHeight;\n\n        // Update canvas data\n        canvasData.options.width = validatedWidth;\n        canvasData.options.height = validatedHeight;\n\n        // Notify engine of resize with proper error handling\n        if (engine && engine.resize) {\n          try {\n            await engine.resize(validatedWidth, validatedHeight);\n          } catch (engineError) {\n            logger.warn(`Engine resize failed for ${canvasId}:`, engineError);\n          }\n        }\n\n        // Emit resize event\n        this.emit(CANVAS_EVENTS.RESIZE_DETECTED, {\n          canvasId,\n          oldDimensions: { width: oldWidth, height: oldHeight },\n          newDimensions: { width: validatedWidth, height: validatedHeight },\n          timestamp: Date.now(),\n        });\n\n        logger.debug(\n          `Resized canvas ${canvasId} to ${validatedWidth}x${validatedHeight}`\n        );\n\n        // Announce resize to screen readers if significant change\n        const sizeChange =\n          Math.abs(validatedWidth - oldWidth) +\n          Math.abs(validatedHeight - oldHeight);\n        if (sizeChange > PERFORMANCE_THRESHOLDS.SIGNIFICANT_SIZE_CHANGE) {\n          this.announceToScreenReader(\n            `Canvas resized to ${validatedWidth} by ${validatedHeight} pixels`\n          );\n        }\n      }\n    } catch (error) {\n      this.handleError(\n        new CanvasError(\n          'Failed to resize canvas',\n          {\n            canvasId,\n            width,\n            height,\n          },\n          error\n        )\n      );\n    } finally {\n      this.performanceMonitor.endOperation('canvas-resize', startTime);\n    }\n  }\n\n  /**\n   * Enhanced responsive canvas with performance optimization\n   */\n  makeResponsive(canvasId) {\n    try {\n      const canvas = this.getCanvas(canvasId);\n      const canvasData = this.canvases.get(canvasId);\n\n      if (!canvas || !canvasData) {\n        throw new CanvasError('Canvas not found for responsive setup', {\n          canvasId,\n        });\n      }\n\n      // Disconnect existing observer if any\n      if (canvasData.resizeObserver) {\n        canvasData.resizeObserver.disconnect();\n      }\n\n      // Create debounced resize handler\n      let resizeTimeout;\n      const debouncedResize = entries => {\n        if (resizeTimeout) {\n          clearTimeout(resizeTimeout);\n        }\n\n        resizeTimeout = setTimeout(() => {\n          for (const entry of entries) {\n            const { width, height } = entry.contentRect;\n\n            // Only resize if dimensions changed significantly\n            if (\n              Math.abs(width - canvas.width) > PERFORMANCE_THRESHOLDS.DIMENSION_TOLERANCE ||\n              Math.abs(height - canvas.height) > PERFORMANCE_THRESHOLDS.DIMENSION_TOLERANCE\n            ) {\n              this.resizeCanvas(canvasId, width, height);\n            }\n          }\n        }, CANVAS_CONSTANTS.RESIZE_DEBOUNCE);\n      };\n\n      const resizeObserver = new ResizeObserver(debouncedResize);\n\n      // Observe the canvas container or the canvas itself\n      const targetElement = canvas.parentElement || canvas;\n      resizeObserver.observe(targetElement);\n\n      // Store observer for cleanup\n      canvasData.resizeObserver = resizeObserver;\n      this.resizeObservers.set(canvasId, resizeObserver);\n\n      logger.debug(`Made canvas ${canvasId} responsive`);\n    } catch (error) {\n      this.handleError(\n        new CanvasError(\n          'Failed to make canvas responsive',\n          {\n            canvasId,\n          },\n          error\n        )\n      );\n    }\n  }\n\n  /**\n   * Perform maintenance cleanup of unused resources\n   */\n  performMaintenanceCleanup() {\n    try {\n      const now = Date.now();\n      const maxAge = MEMORY_CONSTANTS.CLEANUP_MAX_AGE_MINUTES * MEMORY_CONSTANTS.SECONDS_PER_MINUTE * MEMORY_CONSTANTS.MS_PER_SECOND;\n      let cleanedCount = 0;\n\n      // Clean up old canvases that might be orphaned\n      for (const [canvasId, canvasData] of this.canvases) {\n        const age = now - canvasData.created;\n\n        // Check if canvas is still in DOM\n        if (!document.contains(canvasData.element)) {\n          logger.debug(`Cleaning up orphaned canvas: ${canvasId}`);\n          this.removeCanvas(canvasId);\n          cleanedCount++;\n        }\n        // Check if canvas is very old and inactive\n        else if (age > maxAge && !this.activeEngines.has(canvasId)) {\n          logger.debug(`Cleaning up old inactive canvas: ${canvasId}`);\n          this.removeCanvas(canvasId);\n          cleanedCount++;\n        }\n      }\n\n      if (cleanedCount > 0) {\n        logger.debug(`Maintenance cleanup: removed ${cleanedCount} canvases`);\n      }\n\n      // Reset performance metrics periodically\n      if (Object.keys(this.performanceMonitor.getMetrics()).length > 100) {\n        this.performanceMonitor.reset();\n      }\n    } catch (error) {\n      logger.warn('Maintenance cleanup error:', error);\n    }\n  }\n\n  /**\n   * Enhanced error handling with context and recovery\n   */\n  handleError(error) {\n    this.errorCount++;\n\n    logger.error('Canvas Manager Error:', error);\n\n    // Emit error event for application-level handling\n    this.emit(CANVAS_EVENTS.ERROR_OCCURRED, {\n      error: error.message,\n      context: error.context,\n      timestamp: error.timestamp,\n      canvasId: error.canvasId,\n    });\n\n    // Attempt recovery for certain error types\n    if (error.canvasId && error.message.includes('engine')) {\n      this.attemptEngineRecovery(error.canvasId);\n    }\n  }\n\n  /**\n   * Attempt to recover from engine errors\n   */\n  async attemptEngineRecovery(canvasId) {\n    try {\n      logger.debug(`Attempting engine recovery for canvas: ${canvasId}`);\n\n      const canvasData = this.canvases.get(canvasId);\n      if (!canvasData) return;\n\n      // Remove the problematic engine\n      await this.removeVisualEngine(canvasId);\n\n      // Wait a short time before recreating\n      setTimeout(async () => {\n        try {\n          // Recreate engine with safe options\n          await this.createVisualEngine(canvasId, {\n            ...canvasData.options,\n            debug: true,\n            errorRecovery: true,\n          });\n\n          logger.debug(`Engine recovery successful for canvas: ${canvasId}`);\n        } catch (recoveryError) {\n          logger.error(\n            `Engine recovery failed for canvas: ${canvasId}`,\n            recoveryError\n          );\n        }\n      }, 1000);\n    } catch (error) {\n      logger.error('Engine recovery attempt failed:', error);\n    }\n  }\n\n  /**\n   * Event emitter functionality\n   */\n  on(event, callback) {\n    if (!this.eventListeners.has(event)) {\n      this.eventListeners.set(event, []);\n    }\n    this.eventListeners.get(event).push(callback);\n  }\n\n  off(event, callback) {\n    const listeners = this.eventListeners.get(event);\n    if (listeners) {\n      const index = listeners.indexOf(callback);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    }\n  }\n\n  emit(event, data) {\n    const listeners = this.eventListeners.get(event);\n    if (listeners) {\n      listeners.forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          logger.error('Canvas event listener error:', error);\n        }\n      });\n    }\n  }\n}\n\n// Create global instance with enhanced initialization\nconst canvasManager = new CanvasManager();\n\n// Enhanced cleanup on page unload with proper async handling\nwindow.addEventListener('beforeunload', async () => {\n  try {\n    await canvasManager.cleanup();\n  } catch (error) {\n    logger.error('Error during canvas manager cleanup:', error);\n  }\n});\n\n// Handle page visibility changes for performance optimization\ndocument.addEventListener('visibilitychange', () => {\n  if (document.hidden) {\n    canvasManager.pauseAll();\n  } else {\n    canvasManager.resumeAll();\n  }\n});\n\n// Handle focus/blur for accessibility\nwindow.addEventListener('focus', () => {\n  if (canvasManager.accessibilityEnabled) {\n    canvasManager.resumeAll();\n  }\n});\n\nwindow.addEventListener('blur', () => {\n  if (canvasManager.accessibilityEnabled) {\n    canvasManager.pauseAll();\n  }\n});\n\nexport default canvasManager;\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Centralized Focus Management Utility\n * \n * Provides consistent focus management across all components including:\n * - Focus trapping for modals and dialogs\n * - Focus restoration after modal close\n * - Keyboard navigation helpers\n * - Auto-focus with timing management\n * \n * @version 1.0.0\n */\n\n// Centralized constants for consistent timing\nconst FOCUS_CONSTANTS = {\n  FOCUS_DELAY: 100,           // Standard delay for focus operations\n  KEYBOARD_REPEAT_DELAY: 200, // Delay for keyboard repeat prevention\n  ANIMATION_DELAY: 16,        // Frame-based delay for animation coordination\n  AUTO_FOCUS_TIMEOUT: 150     // Timeout for auto-focus operations\n};\n\n// Standard selectors for focusable elements\nconst FOCUSABLE_SELECTORS = [\n  'button:not([disabled])',\n  '[href]:not([disabled])',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  '[tabindex]:not([tabindex=\"-1\"]):not([disabled])',\n  '[contenteditable=\"true\"]'\n].join(', ');\n\n/**\n * Focus Stack Manager - tracks focus history for restoration\n */\nclass FocusStack {\n  constructor() {\n    this.stack = [];\n    this.maxSize = 10; // Prevent memory leaks\n  }\n\n  push(element) {\n    if (element && typeof element.focus === 'function') {\n      this.stack.push(element);\n      if (this.stack.length > this.maxSize) {\n        this.stack.shift(); // Remove oldest entry\n      }\n    }\n  }\n\n  pop() {\n    return this.stack.pop();\n  }\n\n  peek() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  clear() {\n    this.stack = [];\n  }\n\n  isEmpty() {\n    return this.stack.length === 0;\n  }\n}\n\n/**\n * Main Focus Manager Class\n */\nclass FocusManager {\n  constructor() {\n    this.focusStack = new FocusStack();\n    this.activeTrappers = new Set(); // Track active focus traps\n    this.keyboardNavigationActive = false;\n    this.lastFocusMethod = null; // 'mouse' | 'keyboard' | 'programmatic'\n    \n    this.init();\n  }\n\n  init() {\n    // Track keyboard vs mouse navigation\n    document.addEventListener('mousedown', () => {\n      this.lastFocusMethod = 'mouse';\n      document.documentElement.classList.remove('keyboard-navigation');\n    });\n\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Tab') {\n        this.lastFocusMethod = 'keyboard';\n        this.keyboardNavigationActive = true;\n        document.documentElement.classList.add('keyboard-navigation');\n      }\n    });\n\n    // Global escape key handler for trapped focus\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && this.activeTrappers.size > 0) {\n        this.handleEscapeKey(e);\n      }\n    });\n  }\n\n  /**\n   * Get all focusable elements within a container\n   * @param {HTMLElement} container - Container to search within\n   * @returns {NodeList} List of focusable elements\n   */\n  getFocusableElements(container = document) {\n    return container.querySelectorAll(FOCUSABLE_SELECTORS);\n  }\n\n  /**\n   * Get the first focusable element in a container\n   * @param {HTMLElement} container - Container to search within\n   * @returns {HTMLElement|null} First focusable element\n   */\n  getFirstFocusable(container) {\n    const focusable = this.getFocusableElements(container);\n    return focusable.length > 0 ? focusable[0] : null;\n  }\n\n  /**\n   * Get the last focusable element in a container\n   * @param {HTMLElement} container - Container to search within\n   * @returns {HTMLElement|null} Last focusable element\n   */\n  getLastFocusable(container) {\n    const focusable = this.getFocusableElements(container);\n    return focusable.length > 0 ? focusable[focusable.length - 1] : null;\n  }\n\n  /**\n   * Store current focus for later restoration\n   * @param {HTMLElement} [element] - Element to store (defaults to activeElement)\n   */\n  storeFocus(element = document.activeElement) {\n    this.focusStack.push(element);\n  }\n\n  /**\n   * Restore focus to previously stored element\n   * @param {boolean} [fallbackToBody=true] - Whether to focus body if no stored focus\n   * @returns {boolean} Whether focus was restored\n   */\n  restoreFocus(fallbackToBody = true) {\n    const element = this.focusStack.pop();\n    \n    if (element && document.contains(element) && typeof element.focus === 'function') {\n      try {\n        element.focus();\n        return true;\n      } catch (error) {\n        // Silent fail for focus restoration - avoid console.warn for linting\n        if (process?.env?.NODE_ENV === 'development') {\n          // Only log in development\n        }\n      }\n    }\n\n    if (fallbackToBody) {\n      document.body.focus();\n    }\n    \n    return false;\n  }\n\n  /**\n   * Focus an element with optional delay and method tracking\n   * @param {HTMLElement} element - Element to focus\n   * @param {Object} options - Focus options\n   * @param {number} options.delay - Delay before focusing (ms)\n   * @param {boolean} options.preventScroll - Prevent scrolling on focus\n   * @param {string} options.method - Method of focus ('auto', 'keyboard', 'programmatic')\n   * @returns {Promise<boolean>} Whether focus was successful\n   */\n  async focusElement(element, options = {}) {\n    const {\n      delay = 0,\n      preventScroll = false,\n      method = 'programmatic'\n    } = options;\n\n    if (!element || typeof element.focus !== 'function') {\n      return false;\n    }\n\n    this.lastFocusMethod = method;\n\n    if (delay > 0) {\n      await new Promise(resolve => setTimeout(resolve, delay));\n    }\n\n    try {\n      element.focus({ preventScroll });\n      return true;\n    } catch (error) {\n      // Silent fail for focus operations\n      return false;\n    }\n  }\n\n  /**\n   * Auto-focus first element in container (respects user preferences)\n   * @param {HTMLElement} container - Container to search within\n   * @param {Object} options - Auto-focus options\n   * @param {boolean} options.keyboardOnly - Only auto-focus if keyboard navigation\n   * @param {number} options.delay - Delay before auto-focusing\n   * @returns {Promise<boolean>} Whether auto-focus was successful\n   */\n  async autoFocus(container, options = {}) {\n    const {\n      keyboardOnly = true,\n      delay = FOCUS_CONSTANTS.AUTO_FOCUS_TIMEOUT\n    } = options;\n\n    // Respect user preference for keyboard-only auto-focus\n    if (keyboardOnly && !this.keyboardNavigationActive) {\n      return false;\n    }\n\n    const firstFocusable = this.getFirstFocusable(container);\n    if (!firstFocusable) {\n      return false;\n    }\n\n    return this.focusElement(firstFocusable, { \n      delay, \n      method: 'auto' \n    });\n  }\n\n  /**\n   * Create a focus trap for a container\n   * @param {HTMLElement} container - Container to trap focus within\n   * @param {Object} options - Trap options\n   * @param {boolean} options.autoFocus - Whether to auto-focus first element\n   * @param {boolean} options.restoreFocus - Whether to restore focus on destroy\n   * @returns {Object} Focus trap controller\n   */\n  createTrap(container, options = {}) {\n    const {\n      autoFocus = true,\n      restoreFocus = true\n    } = options;\n\n    // Store current focus for restoration\n    if (restoreFocus) {\n      this.storeFocus();\n    }\n\n    const trapId = Symbol('focus-trap');\n    \n    const trapHandler = (event) => {\n      if (event.key === 'Tab') {\n        this.handleTabInTrap(event, container);\n      }\n    };\n\n    // Add trap to active set\n    this.activeTrappers.add(trapId);\n    \n    // Set up event listener\n    document.addEventListener('keydown', trapHandler);\n\n    // Auto-focus if requested\n    if (autoFocus) {\n      this.autoFocus(container, { keyboardOnly: false });\n    }\n\n    // Return controller object\n    return {\n      id: trapId,\n      container,\n      destroy: () => {\n        document.removeEventListener('keydown', trapHandler);\n        this.activeTrappers.delete(trapId);\n        \n        if (restoreFocus) {\n          // Small delay to ensure any animations complete\n          setTimeout(() => {\n            this.restoreFocus();\n          }, FOCUS_CONSTANTS.FOCUS_DELAY);\n        }\n      },\n      focusFirst: () => this.focusElement(this.getFirstFocusable(container)),\n      focusLast: () => this.focusElement(this.getLastFocusable(container))\n    };\n  }\n\n  /**\n   * Handle Tab navigation within a focus trap\n   * @param {KeyboardEvent} event - Tab keyboard event\n   * @param {HTMLElement} container - Container with trapped focus\n   */\n  handleTabInTrap(event, container) {\n    const focusable = this.getFocusableElements(container);\n    if (focusable.length === 0) return;\n\n    const firstElement = focusable[0];\n    const lastElement = focusable[focusable.length - 1];\n    const currentElement = document.activeElement;\n\n    // Check if focus is outside the container - bring it back\n    if (!container.contains(currentElement)) {\n      event.preventDefault();\n      firstElement.focus();\n      return;\n    }\n\n    if (event.shiftKey) {\n      // Shift + Tab (backward)\n      if (currentElement === firstElement) {\n        event.preventDefault();\n        lastElement.focus();\n      }\n    } else {\n      // Tab (forward)\n      if (currentElement === lastElement) {\n        event.preventDefault();\n        firstElement.focus();\n      }\n    }\n  }\n\n  /**\n   * Handle Escape key for focus traps\n   * @param {KeyboardEvent} _event - Escape keyboard event (unused in base implementation)\n   */\n  handleEscapeKey(_event) {\n    // Override this in specific implementations\n    // Base implementation does nothing to avoid conflicts\n  }\n\n  /**\n   * Keyboard navigation helper for grids/lists\n   * @param {HTMLElement} container - Container with navigable elements\n   * @param {Object} options - Navigation options\n   * @returns {Function} Event handler for keyboard navigation\n   */\n  createKeyboardNavigator(container, options = {}) {\n    const {\n      selector = container.children,\n      wrap = true,\n      orientation = 'both' // 'horizontal', 'vertical', 'both'\n    } = options;\n\n    return (event) => {\n      const items = Array.from(typeof selector === 'string' \n        ? container.querySelectorAll(selector) \n        : selector);\n      \n      const currentIndex = items.indexOf(document.activeElement);\n      if (currentIndex === -1) return;\n\n      let newIndex = currentIndex;\n\n      switch (event.key) {\n        case 'ArrowLeft':\n          if (orientation === 'horizontal' || orientation === 'both') {\n            event.preventDefault();\n            newIndex = wrap && currentIndex === 0 \n              ? items.length - 1 \n              : Math.max(0, currentIndex - 1);\n          }\n          break;\n\n        case 'ArrowRight':\n          if (orientation === 'horizontal' || orientation === 'both') {\n            event.preventDefault();\n            newIndex = wrap && currentIndex === items.length - 1 \n              ? 0 \n              : Math.min(items.length - 1, currentIndex + 1);\n          }\n          break;\n\n        case 'ArrowUp':\n          if (orientation === 'vertical' || orientation === 'both') {\n            event.preventDefault();\n            newIndex = wrap && currentIndex === 0 \n              ? items.length - 1 \n              : Math.max(0, currentIndex - 1);\n          }\n          break;\n\n        case 'ArrowDown':\n          if (orientation === 'vertical' || orientation === 'both') {\n            event.preventDefault();\n            newIndex = wrap && currentIndex === items.length - 1 \n              ? 0 \n              : Math.min(items.length - 1, currentIndex + 1);\n          }\n          break;\n\n        case 'Home':\n          event.preventDefault();\n          newIndex = 0;\n          break;\n\n        case 'End':\n          event.preventDefault();\n          newIndex = items.length - 1;\n          break;\n\n        default:\n          return; // Don't handle other keys\n      }\n\n      if (newIndex !== currentIndex && items[newIndex]) {\n        this.focusElement(items[newIndex]);\n        \n        // Scroll into view if needed\n        items[newIndex].scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest',\n          inline: 'nearest'\n        });\n      }\n    };\n  }\n\n  /**\n   * Clean up all focus management\n   */\n  destroy() {\n    this.focusStack.clear();\n    this.activeTrappers.clear();\n    this.keyboardNavigationActive = false;\n  }\n}\n\n// Create and export singleton instance\nconst focusManager = new FocusManager();\n\nexport default focusManager;\nexport { FocusManager, FOCUS_CONSTANTS, FOCUSABLE_SELECTORS };\n","/**\n * Unified Scroll Management System\n * Consolidates all scroll-related functionality into a single, efficient manager\n */\n\nimport { logger } from './logger.js';\n\nclass ScrollManager {\n  constructor() {\n    this.isAutoScrolling = false;\n    this.scrollTimeout = null;\n    this.observers = new Map();\n    this.SCROLL_DURATION = 800;\n    this.SCROLL_OFFSET = 80;\n    this.MIN_SCROLL_DISTANCE = 5;\n    this.EASE_MIDPOINT = 0.5;\n    this.EASE_MULTIPLIER = 4;\n\n    // Debounced scroll handlers\n    this.debouncedHandlers = new Map();\n    this.DEBOUNCE_DELAY = 16; // ~60fps\n  }\n\n  /**\n   * Initialize scroll manager - call once on app startup\n   */\n  init() {\n    this.setupScrollRestoration();\n    this.setupGlobalScrollBehavior();\n    this.initializeHorizontalScrolling();\n    logger.info('ScrollManager initialized');\n  }\n\n  /**\n   * Setup scroll restoration behavior\n   */\n  setupScrollRestoration() {\n    if ('scrollRestoration' in history) {\n      history.scrollRestoration = 'manual';\n    }\n  }\n\n  /**\n   * Setup global scroll behavior and reset\n   */\n  setupGlobalScrollBehavior() {\n    // Single method to reset scroll position\n    this.resetScrollPosition();\n\n    // Setup event listeners for scroll reset\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () =>\n        this.resetScrollPosition()\n      );\n    }\n\n    window.addEventListener('pageshow', () => this.resetScrollPosition());\n  }\n\n  /**\n   * Unified scroll position reset\n   */\n  resetScrollPosition() {\n    // Use the most reliable method for all browsers\n    window.scrollTo(0, 0);\n\n    // Ensure smooth scrolling is enabled after reset\n    setTimeout(() => {\n      document.documentElement.classList.add('loaded');\n    }, 100);\n  }\n\n  /**\n   * Scroll to element with unified behavior\n   * @param {HTMLElement|string} target - Element or selector to scroll to\n   * @param {Object} options - Scroll options\n   * @returns {Promise<void>} Promise that resolves when scrolling is complete\n   */\n  async scrollToElement(target, options = {}) {\n    const element =\n      typeof target === 'string' ? document.querySelector(target) : target;\n    if (!element) {\n      logger.warn('ScrollManager: Element not found for scrolling', target);\n      return;\n    }\n\n    const {\n      behavior = 'smooth',\n      offset = this.SCROLL_OFFSET,\n      respectReducedMotion = true,\n    } = options;\n\n    // Check if element is inside a modal\n    const modalContainer = element.closest(\n      '.scenario-modal, .pre-launch-modal, .modal, [role=\"dialog\"]'\n    );\n\n    if (modalContainer) {\n      await this.scrollWithinModal(element, modalContainer, offset, behavior);\n    } else {\n      await this.scrollMainWindow(\n        element,\n        offset,\n        behavior,\n        respectReducedMotion\n      );\n    }\n  }\n\n  /**\n   * Scroll within modal container\n   * @param {HTMLElement} element - Element to scroll to\n   * @param {HTMLElement} modalContainer - Modal container\n   * @param {number} offset - Scroll offset\n   * @param {string} behavior - Scroll behavior\n   * @returns {Promise<void>} Promise that resolves when scrolling is complete\n   */\n  async scrollWithinModal(element, modalContainer, offset, behavior) {\n    const modalScrollContainer =\n      modalContainer.querySelector(\n        '.modal-content, .scenario-content, .modal-body'\n      ) || modalContainer;\n\n    if (behavior === 'auto' || this.shouldUseInstantScroll()) {\n      // Use native scrollIntoView for instant scrolling\n      element.scrollIntoView({\n        behavior: 'auto',\n        block: 'center',\n        inline: 'nearest',\n      });\n      return;\n    }\n\n    // Custom smooth scrolling for modal\n    const elementRect = element.getBoundingClientRect();\n    const containerRect = modalScrollContainer.getBoundingClientRect();\n    const currentScrollTop = modalScrollContainer.scrollTop;\n\n    const elementTopInModal =\n      elementRect.top - containerRect.top + currentScrollTop;\n    const targetScrollTop = Math.max(0, elementTopInModal - offset);\n\n    await this.animateScroll(\n      modalScrollContainer,\n      targetScrollTop,\n      'scrollTop'\n    );\n  }\n\n  /**\n   * Scroll main window\n   * @param {HTMLElement} element - Element to scroll to\n   * @param {number} offset - Scroll offset\n   * @param {string} behavior - Scroll behavior\n   * @param {boolean} respectReducedMotion - Whether to respect reduced motion\n   * @returns {Promise<void>} Promise that resolves when scrolling is complete\n   */\n  async scrollMainWindow(element, offset, behavior, respectReducedMotion) {\n    const prefersReducedMotion = window.matchMedia(\n      '(prefers-reduced-motion: reduce)'\n    ).matches;\n    const actualBehavior =\n      respectReducedMotion && prefersReducedMotion ? 'auto' : behavior;\n\n    if (actualBehavior === 'auto' || this.shouldUseInstantScroll()) {\n      // Use native scrollIntoView for instant scrolling\n      element.scrollIntoView({\n        behavior: 'auto',\n        block: 'center',\n        inline: 'nearest',\n      });\n      return;\n    }\n\n    // Custom smooth scrolling for main window\n    const elementRect = element.getBoundingClientRect();\n    const targetScrollTop = Math.max(\n      0,\n      elementRect.top + window.pageYOffset - offset\n    );\n\n    await this.animateScroll(window, targetScrollTop, 'pageYOffset');\n  }\n\n  /**\n   * Animate scroll with easing\n   */\n  async animateScroll(scrollContainer, targetPosition, propertyName) {\n    return new Promise(resolve => {\n      const startPosition =\n        propertyName === 'scrollTop'\n          ? scrollContainer.scrollTop\n          : window.pageYOffset;\n\n      const distance = targetPosition - startPosition;\n\n      if (Math.abs(distance) < this.MIN_SCROLL_DISTANCE) {\n        resolve();\n        return;\n      }\n\n      this.isAutoScrolling = true;\n      let startTime = null;\n\n      const animation = currentTime => {\n        if (startTime === null) startTime = currentTime;\n        const timeElapsed = currentTime - startTime;\n        const progress = Math.min(timeElapsed / this.SCROLL_DURATION, 1);\n\n        // Ease-in-out function\n        const ease =\n          progress < this.EASE_MIDPOINT\n            ? 2 * progress * progress\n            : -1 + (this.EASE_MULTIPLIER - 2 * progress) * progress;\n\n        const currentPosition = startPosition + distance * ease;\n\n        if (propertyName === 'scrollTop') {\n          scrollContainer.scrollTop = currentPosition;\n        } else {\n          window.scrollTo(0, currentPosition);\n        }\n\n        if (progress < 1) {\n          requestAnimationFrame(animation);\n        } else {\n          this.isAutoScrolling = false;\n          resolve();\n        }\n      };\n\n      requestAnimationFrame(animation);\n    });\n  }\n\n  /**\n   * Initialize horizontal scrolling for category grids\n   * NOTE: Horizontal scroll enhancement has been completely removed\n   */\n  initializeHorizontalScrolling() {\n    // Horizontal scroll enhancement removed - using native browser scrolling\n    // This method is kept for API compatibility but does nothing\n    logger.info('ScrollManager: Using native horizontal scrolling');\n  }\n\n  /**\n   * Debounce scroll handlers\n   */\n  debounce(func, delay = this.DEBOUNCE_DELAY) {\n    let timeoutId;\n    return (...args) => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => func.apply(this, args), delay);\n    };\n  }\n\n  /**\n   * Check if instant scroll should be used\n   */\n  shouldUseInstantScroll() {\n    return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n  }\n\n  /**\n   * Reinitialize horizontal scrolling after dynamic content changes\n   * NOTE: Horizontal scroll enhancement has been completely removed\n   */\n  reinitializeHorizontalScrolling() {\n    // Horizontal scroll enhancement removed - no action needed\n    // Native browser scrolling is used instead\n  }\n\n  /**\n   * Cleanup method\n   */\n  cleanup() {\n    this.observers.forEach(observer => observer.disconnect());\n    this.observers.clear();\n    this.debouncedHandlers.clear();\n\n    if (this.scrollTimeout) {\n      clearTimeout(this.scrollTimeout);\n    }\n  }\n}\n\n// Create singleton instance\nconst scrollManager = new ScrollManager();\n\nexport default scrollManager;\n","/**\n * Infinite Loop Detection and Prevention Utilities\n *\n * This module provides tools for detecting and preventing infinite loops\n * in the SimulateAI application.\n */\n\nimport logger from './logger.js';\n\nclass InfiniteLoopDetector {\n  constructor() {\n    this.callCounts = new Map();\n    this.callTimestamps = new Map();\n    this.isEnabled = true;\n\n    // Constants for thresholds\n    this.CALLS_PER_SECOND_THRESHOLD = 50;\n    this.MAX_STACK_DEPTH = 100;\n    this.MAX_SAME_FUNCTION_IN_STACK = 10;\n    this.TIME_WINDOW = 1000;\n    this.EMERGENCY_CALLS_THRESHOLD = 100;\n    this.EMERGENCY_STACK_THRESHOLD = 200;\n    this.EMERGENCY_RECURSION_THRESHOLD = 20;\n    this.MAX_INCIDENTS = 50;\n    this.TIMER_CLEAR_RANGE = 99999;\n\n    this.thresholds = {\n      callsPerSecond: this.CALLS_PER_SECOND_THRESHOLD,\n      maxStackDepth: this.MAX_STACK_DEPTH,\n      maxSameFunction: this.MAX_SAME_FUNCTION_IN_STACK,\n      timeWindow: this.TIME_WINDOW,\n    };\n\n    this.emergencyStopExecuted = false;\n  }\n\n  /**\n   * Track function execution to detect potential loops\n   */\n  trackExecution(functionName, context = '') {\n    if (!this.isEnabled) return;\n\n    const key = `${functionName}${context ? `:${context}` : ''}`;\n    const now = Date.now();\n\n    // Initialize tracking for this function\n    if (!this.callTimestamps.has(key)) {\n      this.callTimestamps.set(key, []);\n      this.callCounts.set(key, 0);\n    }\n\n    // Get existing timestamps and filter to time window\n    const timestamps = this.callTimestamps.get(key);\n    const recentCalls = timestamps.filter(\n      time => now - time < this.thresholds.timeWindow\n    );\n    recentCalls.push(now);\n\n    // Update tracking\n    this.callTimestamps.set(key, recentCalls);\n    this.callCounts.set(key, this.callCounts.get(key) + 1);\n\n    // Check for excessive calls\n    if (recentCalls.length > this.thresholds.callsPerSecond) {\n      this.handleSuspiciousActivity(key, recentCalls.length, 'EXCESSIVE_CALLS');\n    }\n\n    // Check call stack depth\n    this.checkCallStackDepth(key);\n  }\n\n  /**\n   * Check for deep call stacks that might indicate recursion\n   */\n  checkCallStackDepth(functionName) {\n    const { stack } = new Error();\n    const lines = stack.split('\\n');\n\n    if (lines.length > this.thresholds.maxStackDepth) {\n      this.handleSuspiciousActivity(functionName, lines.length, 'DEEP_STACK');\n      return true;\n    }\n\n    // Check for repetitive patterns in call stack\n    const functionPattern = this.analyzeCallStack(lines);\n    if (functionPattern.maxRepeats > this.thresholds.maxSameFunction) {\n      this.handleSuspiciousActivity(\n        functionName,\n        functionPattern.maxRepeats,\n        'RECURSIVE_PATTERN',\n        functionPattern.repeatedFunction\n      );\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Analyze call stack for repetitive patterns\n   */\n  analyzeCallStack(stackLines) {\n    const functionNames = stackLines\n      .slice(2) // Skip Error and checkCallStackDepth\n      .map(line => {\n        const match = line.match(/at\\s+(\\w+)/);\n        return match ? match[1] : null;\n      })\n      .filter(Boolean);\n\n    const nameCount = {};\n    let maxRepeats = 0;\n    let repeatedFunction = null;\n\n    for (const name of functionNames) {\n      nameCount[name] = (nameCount[name] || 0) + 1;\n      if (nameCount[name] > maxRepeats) {\n        maxRepeats = nameCount[name];\n        repeatedFunction = name;\n      }\n    }\n\n    return { maxRepeats, repeatedFunction, totalDepth: functionNames.length };\n  }\n\n  /**\n   * Handle detection of suspicious activity\n   */\n  handleSuspiciousActivity(functionName, count, type, details = '') {\n    const message = this.formatWarningMessage(\n      functionName,\n      count,\n      type,\n      details\n    );\n\n    logger.warn('InfiniteLoopDetector', `🚨 POTENTIAL LOOP: ${message}`);\n\n    // Record the incident\n    this.recordIncident(functionName, count, type, details);\n\n    // Auto-execute emergency stop for severe cases\n    if (this.shouldExecuteEmergencyStop(count, type)) {\n      this.executeEmergencyStop(`Auto-triggered by ${type}`);\n    }\n  }\n\n  /**\n   * Format warning message based on detection type\n   */\n  formatWarningMessage(functionName, count, type, details) {\n    switch (type) {\n      case 'EXCESSIVE_CALLS':\n        return `${functionName} called ${count} times in ${this.thresholds.timeWindow}ms`;\n      case 'DEEP_STACK':\n        return `Deep call stack detected: ${count} levels in ${functionName}`;\n      case 'RECURSIVE_PATTERN':\n        return `Recursive pattern: ${details} appears ${count} times in stack (from ${functionName})`;\n      default:\n        return `Suspicious activity in ${functionName}: ${count} (${type})`;\n    }\n  }\n\n  /**\n   * Determine if emergency stop should be executed\n   */\n  shouldExecuteEmergencyStop(count, type) {\n    if (this.emergencyStopExecuted) return false;\n\n    return (\n      (type === 'EXCESSIVE_CALLS' && count > this.EMERGENCY_CALLS_THRESHOLD) ||\n      (type === 'DEEP_STACK' && count > this.EMERGENCY_STACK_THRESHOLD) ||\n      (type === 'RECURSIVE_PATTERN' &&\n        count > this.EMERGENCY_RECURSION_THRESHOLD)\n    );\n  }\n\n  /**\n   * Record incident for analysis\n   */\n  recordIncident(functionName, count, type, details) {\n    if (!window.loopIncidents) {\n      window.loopIncidents = [];\n    }\n\n    window.loopIncidents.push({\n      timestamp: new Date().toISOString(),\n      functionName,\n      count,\n      type,\n      details,\n      userAgent: navigator.userAgent,\n      url: window.location.href,\n    });\n\n    // Keep only last MAX_INCIDENTS incidents\n    if (window.loopIncidents.length > this.MAX_INCIDENTS) {\n      window.loopIncidents = window.loopIncidents.slice(-this.MAX_INCIDENTS);\n    }\n  }\n\n  /**\n   * Execute emergency stop to halt runaway processes\n   */\n  executeEmergencyStop(reason = 'Manual trigger') {\n    if (this.emergencyStopExecuted) {\n      logger.info('InfiniteLoopDetector', '🛑 Emergency stop already executed');\n      return;\n    }\n\n    this.emergencyStopExecuted = true;\n    logger.warn(\n      'InfiniteLoopDetector',\n      `🛑 EXECUTING EMERGENCY STOP: ${reason}`\n    );\n\n    // Clear all timeouts and intervals\n    this.clearAllTimers();\n\n    // Disconnect observers\n    this.disconnectObservers();\n\n    // Stop animations\n    this.stopAnimations();\n\n    // Disable this detector to prevent it from triggering more warnings\n    this.isEnabled = false;\n\n    logger.info('InfiniteLoopDetector', '🛑 Emergency stop completed');\n  }\n\n  /**\n   * Clear all timers (timeouts and intervals)\n   */\n  clearAllTimers() {\n    try {\n      // Clear timeouts and intervals (brute force approach)\n      for (let i = 1; i < this.TIMER_CLEAR_RANGE; i++) {\n        window.clearTimeout(i);\n        window.clearInterval(i);\n      }\n      logger.info('InfiniteLoopDetector', '✅ All timers cleared');\n    } catch (error) {\n      logger.error('InfiniteLoopDetector', '❌ Error clearing timers', error);\n    }\n  }\n\n  /**\n   * Disconnect known observers\n   */\n  disconnectObservers() {\n    try {\n      // Disconnect onboarding tour observer\n      if (window.app?.onboardingTour?.contentObserver) {\n        window.app.onboardingTour.contentObserver.disconnect();\n        logger.info(\n          'InfiniteLoopDetector',\n          '✅ Onboarding content observer disconnected'\n        );\n      }\n\n      // Disconnect any mutation observers\n      if (window.activeMutationObservers) {\n        window.activeMutationObservers.forEach(observer =>\n          observer.disconnect()\n        );\n        logger.info(\n          'InfiniteLoopDetector',\n          '✅ Active mutation observers disconnected'\n        );\n      }\n    } catch (error) {\n      logger.error(\n        'InfiniteLoopDetector',\n        '❌ Error disconnecting observers',\n        error\n      );\n    }\n  }\n\n  /**\n   * Stop animations\n   */\n  stopAnimations() {\n    try {\n      // Cancel animation frames\n      if (window.activeAnimationFrames) {\n        window.activeAnimationFrames.forEach(id => cancelAnimationFrame(id));\n        logger.info('InfiniteLoopDetector', '✅ Animation frames cancelled');\n      }\n\n      // Stop CSS animations\n      const elements = document.querySelectorAll('*');\n      elements.forEach(el => {\n        el.style.animationPlayState = 'paused';\n        el.style.transitionDuration = '0s';\n      });\n      logger.info('InfiniteLoopDetector', '✅ CSS animations paused');\n    } catch (error) {\n      logger.error(\n        'InfiniteLoopDetector',\n        '❌ Error stopping animations',\n        error\n      );\n    }\n  }\n\n  /**\n   * Get detection statistics\n   */\n  getStats() {\n    const stats = {\n      totalFunctions: this.callCounts.size,\n      isEnabled: this.isEnabled,\n      emergencyStopExecuted: this.emergencyStopExecuted,\n      topCallers: [],\n      incidents: window.loopIncidents || [],\n    };\n\n    // Get top callers\n    const sortedCalls = Array.from(this.callCounts.entries())\n      .sort((a, b) => b[1] - a[1])\n      .slice(0, 10);\n\n    stats.topCallers = sortedCalls.map(([name, count]) => {\n      const timestamps = this.callTimestamps.get(name) || [];\n      const recentCount = timestamps.filter(\n        t => Date.now() - t < this.thresholds.timeWindow\n      ).length;\n      return { name, totalCalls: count, recentCalls: recentCount };\n    });\n\n    return stats;\n  }\n\n  /**\n   * Reset all tracking data\n   */\n  reset() {\n    this.callCounts.clear();\n    this.callTimestamps.clear();\n    this.emergencyStopExecuted = false;\n    this.isEnabled = true;\n    logger.info('InfiniteLoopDetector', '🔄 Loop detector reset');\n  }\n\n  /**\n   * Enable/disable the detector\n   */\n  setEnabled(enabled) {\n    this.isEnabled = enabled;\n    logger.info(\n      'InfiniteLoopDetector',\n      `🔧 Loop detector ${enabled ? 'enabled' : 'disabled'}`\n    );\n  }\n}\n\n// Global instance\nconst loopDetector = new InfiniteLoopDetector();\n\n// Export for use in modules\nexport { InfiniteLoopDetector, loopDetector };\n\n// Add to window for debugging (always available in browser)\nif (typeof window !== 'undefined') {\n  window.loopDetector = loopDetector;\n\n  // Add convenient debugging functions\n  window.debugUtils = {\n    // Track a specific function\n    trackFunction: (obj, methodName) => {\n      if (!obj[methodName]) {\n        logger.error('DebugUtils', `Method ${methodName} not found on object`);\n        return;\n      }\n\n      const original = obj[methodName];\n      obj[methodName] = function (...args) {\n        loopDetector.trackExecution(`${obj.constructor.name}.${methodName}`);\n        return original.apply(this, args);\n      };\n\n      logger.info(\n        'DebugUtils',\n        `Now tracking ${obj.constructor.name}.${methodName}`\n      );\n    },\n\n    // Stop tracking a function\n    stopTracking: (obj, methodName, originalMethod) => {\n      if (originalMethod) {\n        obj[methodName] = originalMethod;\n        logger.info(\n          'DebugUtils',\n          `Stopped tracking ${obj.constructor.name}.${methodName}`\n        );\n      }\n    },\n\n    // Get current stats\n    getStats: () => loopDetector.getStats(),\n\n    // Manual emergency stop\n    emergencyStop: reason => loopDetector.executeEmergencyStop(reason),\n\n    // Reset detector\n    reset: () => loopDetector.reset(),\n\n    // Enable/disable\n    setEnabled: enabled => loopDetector.setEnabled(enabled),\n  };\n\n  logger.info(\n    'DebugUtils',\n    'Debug utilities loaded. Use window.debugUtils for manual controls.'\n  );\n}\n","/**\n * Simulation Information Database\n * Educational context, learning objectives, and resources for each simulation\n */\n\nexport const SIMULATION_INFO = {\n  'bias-fairness': {\n    id: 'bias-fairness',\n    title: 'Algorithmic Bias in Hiring',\n    subtitle:\n      'Explore how bias enters AI hiring systems and its impact on fairness',\n\n    // Educational Context\n    learningObjectives: [\n      'Understand how bias can enter AI systems through data and design choices',\n      'Explore consequences of biased algorithms on different demographic groups',\n      'Discover multiple perspectives on what constitutes \"fair\" AI systems',\n      'Practice ethical decision-making in AI development scenarios',\n    ],\n\n    isteCriteria: [\n      'Empowered Learner 1.1.5: Use technology to seek feedback and make improvements',\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Computational Thinker 1.5.3: Collect data and identify patterns',\n    ],\n\n    duration: '15-20 minutes',\n    difficulty: 'intermediate',\n    recommendedAge: '13+',\n    prerequisites: [\n      'Basic understanding of algorithms and AI',\n      'Awareness of workplace hiring processes',\n      'Understanding of demographics and diversity concepts',\n    ],\n\n    // Pre-Launch Information\n    beforeYouStart: {\n      briefing: `In this simulation, you'll step into the role of an AI system designer creating a hiring algorithm for a technology company. You'll make decisions about data sources, algorithm design, and fairness metrics while observing how these choices affect different groups of job candidates.\n      \n      There are no \"correct\" answers - instead, you'll discover the complex trade-offs involved in building fair AI systems and see how different stakeholders might view the same outcomes differently.`,\n\n      vocabulary: [\n        {\n          term: 'Algorithm',\n          definition:\n            'A set of rules or instructions for solving a problem or completing a task',\n        },\n        {\n          term: 'Bias',\n          definition:\n            'Systematic unfairness that favors or discriminates against certain groups',\n        },\n        {\n          term: 'Fairness Metrics',\n          definition:\n            'Mathematical measures used to evaluate whether an AI system treats different groups equitably',\n        },\n        {\n          term: 'Training Data',\n          definition:\n            'Historical information used to teach an AI system how to make decisions',\n        },\n        {\n          term: 'Demographics',\n          definition:\n            'Statistical characteristics of populations, such as age, gender, race, or education level',\n        },\n      ],\n\n      preparationTips: [\n        'Consider what makes a hiring process \"fair\" from different perspectives',\n        'Think about how historical data might reflect past biases',\n        'Be prepared to make difficult trade-offs between competing values',\n        'Pay attention to how your decisions affect different groups of people',\n      ],\n\n      scenarioOverview:\n        \"You will design a hiring algorithm by choosing data sources, setting algorithm parameters, and defining fairness criteria. As you make decisions, you'll see their impact on hiring outcomes for different demographic groups and receive feedback from various stakeholders.\",\n    },\n\n    // Educator Resources\n    educatorResources: {\n      discussionQuestions: [\n        'What factors should be considered when designing AI systems for hiring?',\n        'How can historical data perpetuate existing biases in new AI systems?',\n        'What are the trade-offs between different definitions of fairness?',\n        'How might different stakeholders (employers, job seekers, society) view the same AI decision differently?',\n        'What responsibilities do AI developers have to ensure fair outcomes?',\n      ],\n\n      assessmentRubric: {\n        'Ethical Reasoning': [\n          'Novice: Makes decisions without considering ethical implications',\n          'Developing: Shows awareness of ethical issues but analysis is superficial',\n          'Proficient: Demonstrates thoughtful consideration of multiple ethical perspectives',\n          'Advanced: Articulates complex ethical trade-offs and justifies decisions with clear reasoning',\n        ],\n        'Systems Thinking': [\n          'Novice: Focuses on isolated decisions without seeing connections',\n          'Developing: Recognizes some connections between decisions and outcomes',\n          'Proficient: Understands how multiple factors interact to produce outcomes',\n          'Advanced: Demonstrates sophisticated understanding of complex system dynamics',\n        ],\n        'Perspective Taking': [\n          'Novice: Considers only one viewpoint',\n          'Developing: Acknowledges different perspectives exist',\n          'Proficient: Actively considers multiple stakeholder perspectives',\n          'Advanced: Synthesizes diverse perspectives into nuanced understanding',\n        ],\n      },\n\n      extensionActivities: [\n        'Research real-world examples of algorithmic bias in hiring (Amazon, etc.)',\n        'Interview family members about their experiences with hiring processes',\n        'Design a \"bias audit\" checklist for AI hiring systems',\n        'Create a presentation comparing different fairness definitions',\n        'Write a letter to a company about responsible AI hiring practices',\n      ],\n\n      relatedStandards: [\n        'CSTA K-12 Computer Science Standards: 3A-IC-24, 3A-IC-25, 3A-IC-26',\n        'Common Core Mathematical Practices: MP.3, MP.4, MP.6',\n        'C3 Framework for Social Studies: D2.Civ.1.9-12, D2.Eco.1.9-12',\n      ],\n\n      classroomTips: [\n        'Encourage students to discuss their decisions with peers before making final choices',\n        'Have students document their reasoning for key decisions to review later',\n        'Consider running the simulation in small groups to promote discussion',\n        'Use the reflection questions to facilitate post-simulation discussions',\n      ],\n    },\n\n    // Related Resources\n    relatedResources: [\n      {\n        type: 'article',\n        title: 'Machine Bias in Criminal Justice',\n        description:\n          'ProPublica investigation into biased risk assessment algorithms',\n        url: 'https://www.propublica.org/article/machine-bias-risk-assessments-in-criminal-sentencing',\n        audience: 'educators',\n      },\n      {\n        type: 'video',\n        title: 'The Problem with AI Bias',\n        description: 'MIT Technology Review explanation of AI bias (8 minutes)',\n        url: 'https://www.youtube.com/watch?v=gV0_raKR2UQ',\n        audience: 'students',\n      },\n      {\n        type: 'research',\n        title: 'Fairness Definitions Explained',\n        description:\n          'Academic paper on different mathematical definitions of fairness',\n        url: 'https://fairmlbook.org/causalinference.html',\n        audience: 'educators',\n      },\n      {\n        type: 'interactive',\n        title: 'AI Fairness 360 Toolkit',\n        description:\n          \"IBM's open-source toolkit for detecting and mitigating bias\",\n        url: 'https://aif360.mybluemix.net/',\n        audience: 'advanced',\n      },\n    ],\n\n    // Tags for searching and filtering\n    tags: [\n      'bias',\n      'fairness',\n      'hiring',\n      'ethics',\n      'algorithms',\n      'equity',\n      'workplace',\n    ],\n\n    // Difficulty and content warnings\n    contentNotes: [\n      'Discusses workplace discrimination and hiring bias',\n      'Contains scenarios involving demographic differences',\n      'Requires critical thinking about social justice issues',\n    ],\n\n    // Learning path connections\n    connectedSimulations: [\n      'algorithmic-transparency',\n      'ai-safety-basics',\n      'data-privacy-ethics',\n    ],\n  },\n\n  'autonomy-oversight': {\n    id: 'autonomy-oversight',\n    title: 'AI Autonomy & Human Oversight',\n    subtitle:\n      'Balance AI autonomy with human oversight in critical decision-making',\n\n    // Educational Context\n    learningObjectives: [\n      'Understand the balance between AI autonomy and human oversight',\n      'Explore when human intervention is necessary in AI systems',\n      'Discover different levels of AI independence and control',\n      'Practice decision-making about AI oversight in various scenarios',\n    ],\n\n    isteCriteria: [\n      'Empowered Learner 1.1.4: Understand fundamental concepts of technology operations',\n      'Digital Citizen 1.2.3: Cultivate and manage digital identity and reputation',\n      'Critical Thinker 1.4.3: Curate information from digital resources',\n      'Computational Thinker 1.5.1: Formulate problem definitions suited for technology',\n    ],\n\n    duration: '12-15 minutes',\n    difficulty: 'intermediate',\n    recommendedAge: '14+',\n    prerequisites: [\n      'Basic understanding of AI and automation',\n      'Awareness of human decision-making processes',\n      'Understanding of responsibility and accountability',\n    ],\n\n    // Pre-Launch Information\n    beforeYouStart: {\n      briefing: `In this simulation, you'll explore the critical balance between AI autonomy and human oversight. You'll face scenarios where you must decide how much independence to give AI systems and when human intervention is necessary.\n      \n      You'll discover the complexities of maintaining control while leveraging AI capabilities, and see how different levels of oversight affect outcomes, efficiency, and responsibility.`,\n\n      vocabulary: [\n        {\n          term: 'Autonomy',\n          definition:\n            'The ability of a system to operate independently without human intervention',\n        },\n        {\n          term: 'Oversight',\n          definition:\n            'Human supervision and monitoring of AI system operations',\n        },\n        {\n          term: 'Human-in-the-loop',\n          definition:\n            'AI systems that require human input for certain decisions',\n        },\n        {\n          term: 'Accountability',\n          definition:\n            'Responsibility for the consequences of AI system actions',\n        },\n        {\n          term: 'Fail-safe',\n          definition:\n            'Mechanisms that prevent harmful outcomes when systems malfunction',\n        },\n      ],\n\n      preparationTips: [\n        'Consider different types of decisions and their consequences',\n        'Think about when you would want a human to be involved',\n        'Reflect on responsibility and who should be accountable',\n        'Keep an open mind about different oversight approaches',\n      ],\n    },\n\n    // Learning Outcomes\n    afterCompletion: {\n      keyTakeaways: [\n        'AI autonomy exists on a spectrum from fully manual to fully automated',\n        'Different scenarios require different levels of human oversight',\n        'Balancing efficiency with safety and accountability is crucial',\n        'Human judgment remains important even in advanced AI systems',\n      ],\n\n      reflectionQuestions: [\n        'When should humans maintain control over AI decisions?',\n        'How do you balance AI efficiency with human oversight?',\n        'What are the risks of too much or too little AI autonomy?',\n        'How do cultural and social factors influence oversight preferences?',\n      ],\n    },\n\n    // Educational Resources\n    educatorResources: {\n      discussionGuide: [\n        'Debate the pros and cons of AI autonomy in different contexts',\n        'Role-play scenarios with different oversight approaches',\n        'Compare human vs. AI decision-making capabilities',\n        'Discuss real-world examples of AI oversight challenges',\n      ],\n\n      classroomActivities: [\n        'Design oversight protocols for different AI applications',\n        'Create decision trees for when human intervention is needed',\n        'Research case studies of AI oversight successes and failures',\n        'Debate the future of human-AI collaboration',\n      ],\n\n      assessmentIdeas: [\n        'Analyze oversight scenarios and justify recommendations',\n        'Create presentations on AI autonomy best practices',\n        'Write reflection essays on human-AI responsibility',\n        'Design ethical guidelines for AI oversight',\n      ],\n    },\n  },\n\n  'consent-transparency': {\n    id: 'consent-transparency',\n    title: 'AI Consent & Transparency',\n    subtitle: 'Explore informed consent and transparency in AI systems',\n\n    // Educational Context\n    learningObjectives: [\n      'Understand the importance of informed consent in AI systems',\n      'Explore transparency requirements for AI decision-making',\n      'Discover challenges in communicating AI capabilities and limitations',\n      'Practice designing user-friendly consent and disclosure processes',\n    ],\n\n    isteCriteria: [\n      'Empowered Learner 1.1.3: Use technology to seek feedback',\n      'Digital Citizen 1.2.1: Cultivate and manage digital identity',\n      'Knowledge Constructor 1.3.4: Build knowledge through exploration',\n      'Creative Communicator 1.6.2: Create original works as a means of expression',\n    ],\n\n    duration: '8-12 minutes',\n    difficulty: 'beginner',\n    recommendedAge: '12+',\n    prerequisites: [\n      'Basic understanding of privacy and consent',\n      'Awareness of AI use in everyday applications',\n      'Understanding of communication and transparency',\n    ],\n\n    // Pre-Launch Information\n    beforeYouStart: {\n      briefing: `In this simulation, you'll explore how to make AI systems transparent and obtain meaningful consent from users. You'll face challenges in explaining complex AI systems in understandable ways and ensuring users can make informed decisions.\n      \n      You'll discover the balance between technical accuracy and user comprehension, and see how different approaches to transparency affect user trust and decision-making.`,\n\n      vocabulary: [\n        {\n          term: 'Informed Consent',\n          definition:\n            'Agreement based on understanding of what is being consented to',\n        },\n        {\n          term: 'Transparency',\n          definition: 'Openness about how AI systems work and make decisions',\n        },\n        {\n          term: 'Explainable AI',\n          definition:\n            'AI systems that can provide understandable explanations of their decisions',\n        },\n        {\n          term: 'Privacy Policy',\n          definition:\n            'Document explaining how personal data is collected and used',\n        },\n        {\n          term: 'User Agency',\n          definition:\n            'The ability of users to control their interaction with AI systems',\n        },\n      ],\n\n      preparationTips: [\n        'Think about your own experiences with consent forms and privacy policies',\n        'Consider what information users really need to make good decisions',\n        'Reflect on the balance between detail and simplicity',\n        'Keep user perspectives and capabilities in mind',\n      ],\n    },\n\n    // Learning Outcomes\n    afterCompletion: {\n      keyTakeaways: [\n        'Effective consent requires both transparency and user understanding',\n        'Different users need different levels of detail and explanation',\n        'Transparency must be balanced with usability and simplicity',\n        'Building trust requires ongoing communication, not just initial consent',\n      ],\n\n      reflectionQuestions: [\n        'How can complex AI systems be explained in simple terms?',\n        'What information do users really need to give meaningful consent?',\n        'How do we balance transparency with user experience?',\n        'What are the limits of user understanding in AI systems?',\n      ],\n    },\n\n    // Educational Resources\n    educatorResources: {\n      discussionGuide: [\n        'Compare consent practices across different platforms and services',\n        'Analyze examples of good and bad AI transparency',\n        'Discuss the ethics of informed consent in AI',\n        'Explore cultural differences in transparency expectations',\n      ],\n\n      classroomActivities: [\n        'Design user-friendly consent interfaces for AI systems',\n        'Create plain-language explanations of complex AI concepts',\n        'Audit existing privacy policies and consent forms',\n        'Role-play consent conversations between AI developers and users',\n      ],\n\n      assessmentIdeas: [\n        'Evaluate consent and transparency practices of real AI systems',\n        'Design consent processes for hypothetical AI applications',\n        'Write user-friendly explanations of AI technologies',\n        'Create presentations on transparency best practices',\n      ],\n    },\n  },\n\n  'misinformation-trust': {\n    id: 'misinformation-trust',\n    title: 'AI, Misinformation & Trust',\n    subtitle: 'Combat misinformation and build trustworthy AI communication',\n\n    // Educational Context\n    learningObjectives: [\n      'Understand how AI can both combat and create misinformation',\n      'Explore trust-building in AI communication systems',\n      'Discover challenges in verifying AI-generated content',\n      'Practice designing systems that promote information integrity',\n    ],\n\n    isteCriteria: [\n      'Empowered Learner 1.1.1: Articulate goals and define learning pathways',\n      'Digital Citizen 1.2.4: Manage personal data to maintain privacy and security',\n      'Knowledge Constructor 1.3.2: Evaluate accuracy and perspective of sources',\n      'Critical Thinker 1.4.4: Use technology to deepen critical thinking',\n    ],\n\n    duration: '15-20 minutes',\n    difficulty: 'advanced',\n    recommendedAge: '15+',\n    prerequisites: [\n      'Understanding of information literacy and media bias',\n      'Awareness of AI capabilities in content generation',\n      'Knowledge of verification and fact-checking processes',\n    ],\n\n    // Pre-Launch Information\n    beforeYouStart: {\n      briefing: `In this simulation, you'll tackle the complex challenge of building trustworthy AI systems that can help combat misinformation while avoiding the creation of false information themselves.\n      \n      You'll explore the balance between AI automation and human verification, discover the challenges of detecting AI-generated content, and see how different approaches affect public trust and information integrity.`,\n\n      vocabulary: [\n        {\n          term: 'Misinformation',\n          definition: 'False or inaccurate information, regardless of intent',\n        },\n        {\n          term: 'Disinformation',\n          definition: 'Deliberately false information intended to deceive',\n        },\n        {\n          term: 'Deepfakes',\n          definition:\n            'AI-generated fake audio, video, or images that appear real',\n        },\n        {\n          term: 'Fact-checking',\n          definition: 'Process of verifying the accuracy of information',\n        },\n        {\n          term: 'Information Integrity',\n          definition:\n            'Ensuring information is accurate, authentic, and trustworthy',\n        },\n      ],\n\n      preparationTips: [\n        'Consider your own information consumption and verification habits',\n        'Think about how you determine what sources to trust',\n        'Reflect on the role of technology in information spread',\n        'Keep in mind different perspectives on truth and trust',\n      ],\n    },\n\n    // Learning Outcomes\n    afterCompletion: {\n      keyTakeaways: [\n        'AI can be both a tool for fighting misinformation and a source of it',\n        'Building trust requires transparency, consistency, and accountability',\n        'Human judgment remains crucial in information verification',\n        'Different communities may have different trust relationships with AI',\n      ],\n\n      reflectionQuestions: [\n        'How can AI systems earn and maintain public trust?',\n        'What are the trade-offs between automation and human oversight in fact-checking?',\n        'How do we balance free expression with misinformation prevention?',\n        'What responsibility do AI developers have for information integrity?',\n      ],\n    },\n\n    // Educational Resources\n    educatorResources: {\n      discussionGuide: [\n        'Analyze real examples of AI-generated misinformation',\n        'Debate the role of platforms in content moderation',\n        'Discuss the impact of misinformation on democratic processes',\n        'Explore cultural and political factors in trust and verification',\n      ],\n\n      classroomActivities: [\n        'Design fact-checking protocols that incorporate AI',\n        'Create media literacy curricula for the AI age',\n        'Research case studies of misinformation campaigns',\n        'Develop trust metrics for AI information systems',\n      ],\n\n      assessmentIdeas: [\n        'Evaluate the effectiveness of different misinformation detection approaches',\n        'Create proposals for trustworthy AI communication systems',\n        'Analyze the ethics of AI content moderation',\n        'Design public education campaigns about AI and information integrity',\n      ],\n    },\n  },\n\n  // New Trolley Problem Scenarios\n\n  'medical-ai-triage': {\n    id: 'medical-ai-triage',\n    title: 'Medical AI Triage Crisis',\n    subtitle: 'Navigate life-and-death resource allocation decisions in emergency medicine',\n\n    learningObjectives: [\n      'Analyze how utilitarian vs. deontological ethics apply to medical AI triage decisions',\n      'Explore the tension between statistical optimization and individual patient equity',\n      'Understand the complexity of programming moral reasoning into medical AI systems',\n      'Examine accountability and responsibility in AI-assisted medical decisions',\n      'Consider how age, probability, and resource scarcity affect ethical medical choices'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Computational Thinker 1.5.2: Collect data and identify patterns to make predictions',\n      'Critical Thinker 1.4.3: Curate information from digital resources using a variety of tools'\n    ],\n\n    duration: '18-22 minutes',\n    difficulty: 'intermediate',\n    recommendedAge: '14+',\n    prerequisites: [\n      'Basic understanding of medical triage concepts',\n      'Familiarity with ethical reasoning frameworks',\n      'Understanding of AI decision-making processes',\n      'Awareness of resource allocation challenges in healthcare'\n    ],\n\n    beforeYouStart: {\n      briefing: `In this scenario, you'll face one of the most challenging applications of AI ethics: programming medical triage systems for mass casualty events. You'll grapple with how an AI should allocate limited life-saving resources when every decision determines who lives and who dies.\n\n      This scenario builds on classic trolley problem ethics by adding the complexity of medical uncertainty, age considerations, and resource constraints. You'll explore how different ethical frameworks lead to vastly different outcomes for patients and families.`,\n\n      vocabulary: [\n        {\n          term: 'Medical Triage',\n          definition: 'The process of determining treatment priority based on severity of condition and likelihood of survival'\n        },\n        {\n          term: 'Utilitarian Ethics',\n          definition: 'Ethical framework focused on maximizing overall good or minimizing total harm'\n        },\n        {\n          term: 'Deontological Ethics',\n          definition: 'Ethical framework based on duty and rules, regardless of consequences'\n        },\n        {\n          term: 'Quality-Adjusted Life Years (QALY)',\n          definition: 'Metric combining life expectancy with quality of life to guide medical decisions'\n        },\n        {\n          term: 'Algorithmic Bias',\n          definition: 'Systematic discrimination that may emerge in AI medical decision-making'\n        }\n      ],\n\n      preparationTips: [\n        'Consider how medical professionals currently make triage decisions',\n        'Think about the difference between individual patient care and population-level outcomes',\n        'Reflect on what factors should and shouldn\\'t influence life-saving decisions',\n        'Consider how families and communities might react to different AI decision approaches'\n      ],\n\n      scenarioOverview: 'You will design decision-making protocols for an AI medical triage system during a mass casualty event, weighing survival probability, age, resources, and ethical principles.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'How do medical triage principles apply to AI decision-making in emergencies?',\n        'What are the ethical implications of using age as a factor in AI medical decisions?',\n        'How can AI systems balance individual patient care with population-level outcomes?',\n        'What safeguards should exist to prevent bias in AI medical triage systems?',\n        'Who should be held accountable when AI medical systems make life-and-death decisions?'\n      ],\n\n      assessmentRubric: {\n        'Ethical Reasoning': [\n          'Novice: Focuses only on obvious outcomes without considering ethical frameworks',\n          'Developing: Shows awareness of ethical issues but applies frameworks inconsistently',\n          'Proficient: Demonstrates understanding of multiple ethical approaches and their medical applications',\n          'Advanced: Articulates complex trade-offs between competing ethical principles in medical contexts'\n        ],\n        'Medical Understanding': [\n          'Novice: Limited understanding of medical triage and emergency care',\n          'Developing: Basic understanding of medical decision-making processes',\n          'Proficient: Good grasp of medical triage principles and resource allocation challenges',\n          'Advanced: Sophisticated understanding of medical ethics and emergency care systems'\n        ]\n      },\n\n      extendedActivities: [\n        'Research real hospital triage protocols and how they handle resource scarcity',\n        'Interview medical professionals about ethical decisions in emergency care',\n        'Design alternative AI triage algorithms with different ethical frameworks',\n        'Analyze case studies of medical resource allocation during pandemics or disasters'\n      ]\n    }\n  },\n\n  'drone-rescue-dilemma': {\n    id: 'drone-rescue-dilemma',\n    title: 'Rescue Drone Dilemma',\n    subtitle: 'Program autonomous rescue systems to make life-or-death decisions under uncertainty',\n\n    learningObjectives: [\n      'Analyze decision-making under uncertainty in life-critical AI systems',\n      'Explore the ethics of risk assessment and calculated gambles with human lives',\n      'Understand how probability and certainty affect moral reasoning in AI',\n      'Examine the balance between conservative safety and optimal outcomes',\n      'Consider accountability when AI systems make high-stakes probabilistic decisions'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Computational Thinker 1.5.2: Collect data and identify patterns to make predictions',\n      'Computational Thinker 1.5.3: Break problems into component parts, extract key information',\n      'Critical Thinker 1.4.4: Use technology to deepen understanding and broaden perspectives'\n    ],\n\n    duration: '16-20 minutes',\n    difficulty: 'advanced',\n    recommendedAge: '15+',\n    prerequisites: [\n      'Understanding of probability and risk assessment',\n      'Familiarity with emergency response and rescue operations',\n      'Basic knowledge of ethical decision-making frameworks',\n      'Understanding of AI system capabilities and limitations'\n    ],\n\n    beforeYouStart: {\n      briefing: `In this scenario, you'll program an autonomous rescue system to make critical decisions when lives hang in the balance and outcomes are uncertain. You'll face the challenge of balancing guaranteed salvation against the possibility of saving more lives through calculated risks.\n\n      This scenario explores how AI systems should handle uncertainty and probability when human lives are at stake. You'll discover the ethical complexity of programming machines to take risks that could result in either heroic rescues or tragic failures.`,\n\n      vocabulary: [\n        {\n          term: 'Risk Assessment',\n          definition: 'The process of evaluating the likelihood and impact of potential negative outcomes'\n        },\n        {\n          term: 'Probabilistic Decision-Making',\n          definition: 'Making choices based on likelihood of outcomes rather than certainty'\n        },\n        {\n          term: 'Risk Tolerance',\n          definition: 'The level of uncertainty and potential loss that is acceptable in decision-making'\n        },\n        {\n          term: 'Expected Value',\n          definition: 'Mathematical calculation of likely outcomes weighted by their probabilities'\n        },\n        {\n          term: 'Moral Hazard',\n          definition: 'The risk of making poor decisions because negative consequences affect others'\n        }\n      ],\n\n      preparationTips: [\n        'Consider how emergency responders currently make decisions under uncertainty',\n        'Think about the difference between individual risk and systemic risk',\n        'Reflect on when it\\'s appropriate to take calculated risks with lives',\n        'Consider how you would explain risky decisions to affected families'\n      ],\n\n      scenarioOverview: 'You will design decision-making protocols for autonomous rescue systems, programming how they should balance certain rescue against risky attempts to save more lives.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'When is it ethical for AI systems to take calculated risks with human lives?',\n        'How should uncertainty and probability factor into life-and-death AI decisions?',\n        'What level of risk is acceptable when the goal is saving more lives?',\n        'How do we balance individual safety against potential collective benefit?',\n        'Who bears responsibility when AI systems make high-risk decisions that fail?'\n      ],\n\n      assessmentRubric: {\n        'Risk Analysis': [\n          'Novice: Difficulty understanding probability and uncertainty concepts',\n          'Developing: Basic grasp of risk but struggles with complex trade-offs',\n          'Proficient: Good understanding of risk assessment and probabilistic thinking',\n          'Advanced: Sophisticated analysis of uncertainty and risk in ethical contexts'\n        ],\n        'Ethical Reasoning': [\n          'Novice: Focuses on simple outcomes without considering broader implications',\n          'Developing: Shows awareness of ethical complexity but analysis is limited',\n          'Proficient: Demonstrates nuanced understanding of ethics under uncertainty',\n          'Advanced: Articulates complex ethical frameworks for high-stakes decisions'\n        ]\n      },\n\n      extendedActivities: [\n        'Research real search-and-rescue operations and decision-making protocols',\n        'Interview emergency responders about risk assessment in life-saving situations',\n        'Design risk assessment frameworks for different types of rescue scenarios',\n        'Analyze case studies of rescue operations that involved difficult risk decisions'\n      ]\n    }\n  },\n\n  'smart-city-traffic': {\n    id: 'smart-city-traffic',\n    title: 'Smart City Traffic Sacrifice',\n    subtitle: 'Design city-wide AI systems that must choose between different groups of potential victims',\n\n    learningObjectives: [\n      'Analyze the ethics of AI systems that actively redirect harm between different groups',\n      'Explore the difference between allowing harm and causing harm in AI decision-making',\n      'Understand the legal and moral implications of AI systems choosing victims',\n      'Examine the role of consent and agency in AI-managed public spaces',\n      'Consider how city-wide AI systems should balance individual and collective welfare'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Computational Thinker 1.5.1: Formulate problem definitions suited for technology-assisted methods',\n      'Critical Thinker 1.4.3: Curate information from digital resources using a variety of tools'\n    ],\n\n    duration: '17-21 minutes',\n    difficulty: 'intermediate',\n    recommendedAge: '14+',\n    prerequisites: [\n      'Understanding of smart city technology and infrastructure',\n      'Familiarity with traffic management and public safety systems',\n      'Basic knowledge of legal liability and responsibility concepts',\n      'Understanding of collective action and public goods'\n    ],\n\n    beforeYouStart: {\n      briefing: `In this scenario, you'll design the ethical decision-making protocols for a city-wide AI traffic management system. When emergencies occur, you'll face the challenge of programming how AI should respond when it has the power to redirect harm between different groups of citizens.\n\n      This scenario examines the unique ethical challenges of AI systems that manage public spaces and infrastructure. You'll explore the difference between allowing events to unfold naturally versus actively intervening to redirect harm, and consider the implications of giving AI systems the power to choose victims.`,\n\n      vocabulary: [\n        {\n          term: 'Active vs. Passive Harm',\n          definition: 'The ethical distinction between causing harm through action versus allowing harm through inaction'\n        },\n        {\n          term: 'Public Safety Infrastructure',\n          definition: 'City systems designed to protect citizens from harm and manage emergency situations'\n        },\n        {\n          term: 'Collective Responsibility',\n          definition: 'Shared obligation of community members for outcomes affecting the group'\n        },\n        {\n          term: 'Legal Liability',\n          definition: 'Responsibility for damages or harm that may result in legal consequences'\n        },\n        {\n          term: 'Democratic Legitimacy',\n          definition: 'The authority to make decisions on behalf of citizens based on their consent'\n        }\n      ],\n\n      preparationTips: [\n        'Consider the difference between personal choices and public policy decisions',\n        'Think about how cities currently manage public safety and emergency response',\n        'Reflect on the level of control AI should have over public infrastructure',\n        'Consider how different communities might view AI intervention in emergencies'\n      ],\n\n      scenarioOverview: 'You will design emergency response protocols for smart city AI systems, determining when and how they should intervene in crisis situations affecting multiple groups of citizens.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'What authority should AI systems have over public infrastructure and citizen safety?',\n        'How do we balance individual rights with collective welfare in AI city management?',\n        'What are the legal and ethical implications of AI systems actively choosing victims?',\n        'How should democratic values influence the design of AI public safety systems?',\n        'What safeguards are needed when AI systems have power over public spaces?'\n      ],\n\n      assessmentRubric: {\n        'Civic Understanding': [\n          'Novice: Limited understanding of public policy and civic responsibility',\n          'Developing: Basic grasp of collective decision-making and public goods',\n          'Proficient: Good understanding of civic institutions and democratic values',\n          'Advanced: Sophisticated analysis of public policy and collective action'\n        ],\n        'Systems Thinking': [\n          'Novice: Focuses on isolated incidents without seeing broader patterns',\n          'Developing: Recognizes some connections between individual and collective outcomes',\n          'Proficient: Understands complex interactions between technology, society, and governance',\n          'Advanced: Demonstrates sophisticated understanding of socio-technical systems'\n        ]\n      },\n\n      extendedActivities: [\n        'Research smart city initiatives and their approaches to public safety',\n        'Interview city officials about emergency management and technology use',\n        'Design citizen engagement processes for AI public safety system oversight',\n        'Analyze case studies of technology-mediated public safety decisions'\n      ]\n    }\n  },\n\n  // New AI Black Box Scenarios\n\n  'college-admission-mystery': {\n    id: 'college-admission-mystery',\n    title: 'Opaque College Admissions AI',\n    subtitle: 'Navigate the ethics of unexplainable AI decisions in higher education access',\n\n    learningObjectives: [\n      'Understand the importance of transparency in AI systems that affect educational opportunities',\n      'Explore the tension between AI efficiency and explainable decision-making in admissions',\n      'Analyze how opaque algorithms can perpetuate educational inequality',\n      'Examine the rights of students to understand decisions that shape their futures',\n      'Consider the balance between institutional autonomy and public accountability'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Knowledge Constructor 1.3.2: Evaluate the accuracy, perspective, credibility and relevance of information',\n      'Critical Thinker 1.4.1: Identify and define authentic problems for investigation',\n      'Critical Thinker 1.4.3: Curate information from digital resources using a variety of tools'\n    ],\n\n    duration: '14-18 minutes',\n    difficulty: 'beginner',\n    recommendedAge: '13+',\n    prerequisites: [\n      'Basic understanding of college admissions processes',\n      'Awareness of AI decision-making in institutions',\n      'Understanding of fairness and transparency concepts',\n      'Knowledge of educational equity issues'\n    ],\n\n    beforeYouStart: {\n      briefing: `In this scenario, you'll confront the challenge of AI systems making life-changing educational decisions without explanation. You'll explore how opaque algorithms in college admissions can affect students' futures and access to opportunities, while considering the balance between AI efficiency and transparency.\n\n      This scenario examines the unique challenges of AI transparency in educational contexts, where decisions fundamentally shape young people's life trajectories and access to social mobility.`,\n\n      vocabulary: [\n        {\n          term: 'Algorithmic Transparency',\n          definition: 'The ability to understand and explain how AI systems make decisions'\n        },\n        {\n          term: 'Educational Equity',\n          definition: 'Fair access to educational opportunities regardless of background or circumstances'\n        },\n        {\n          term: 'Black Box AI',\n          definition: 'AI systems whose internal decision-making processes are not visible or understandable'\n        },\n        {\n          term: 'Admissions Bias',\n          definition: 'Systematic unfairness in college admissions that favors or disadvantages certain groups'\n        },\n        {\n          term: 'Explainable AI (XAI)',\n          definition: 'AI systems designed to provide understandable explanations for their decisions'\n        }\n      ],\n\n      preparationTips: [\n        'Consider your own experiences with standardized testing and college applications',\n        'Think about what information you would want if your application was rejected',\n        'Reflect on the role of fairness and transparency in educational access',\n        'Consider how AI decisions might affect different groups of students differently'\n      ],\n\n      scenarioOverview: 'You will design policies for AI use in college admissions, deciding when and how much transparency is required for decisions that affect students\\' educational futures.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'What level of transparency should be required for AI systems in educational settings?',\n        'How can institutions balance the benefits of AI with the need for explainable decisions?',\n        'What are the long-term societal implications of opaque educational AI systems?',\n        'How might AI admissions systems affect different communities and backgrounds?',\n        'What rights should students have to understand decisions that affect their educational opportunities?'\n      ],\n\n      assessmentRubric: {\n        'Transparency Understanding': [\n          'Novice: Limited understanding of AI transparency and its importance',\n          'Developing: Basic grasp of transparency issues but struggles with complex trade-offs',\n          'Proficient: Good understanding of transparency needs in educational contexts',\n          'Advanced: Sophisticated analysis of transparency requirements and implementation challenges'\n        ],\n        'Educational Equity Analysis': [\n          'Novice: Minimal awareness of how AI might affect educational access',\n          'Developing: Basic understanding of equity issues but limited analysis',\n          'Proficient: Clear understanding of how AI can impact educational fairness',\n          'Advanced: Nuanced analysis of systemic effects of AI on educational opportunity'\n        ]\n      },\n\n      extendedActivities: [\n        'Research real college admissions AI systems and their transparency policies',\n        'Interview college admissions officers about their decision-making processes',\n        'Design transparency requirements for educational AI systems',\n        'Analyze case studies of AI bias in educational settings'\n      ]\n    }\n  },\n\n  'insurance-claim-blackbox': {\n    id: 'insurance-claim-blackbox',\n    title: 'Insurance Claim Black Box',\n    subtitle: 'Examine AI transparency in healthcare access and insurance coverage decisions',\n\n    learningObjectives: [\n      'Understand the critical importance of explainability in healthcare AI systems',\n      'Explore how opaque AI decisions can create barriers to medical care',\n      'Analyze the balance between fraud prevention and patient access to healthcare',\n      'Examine the role of AI transparency in medical advocacy and appeals processes',\n      'Consider the ethical obligations of healthcare AI systems to patients and providers'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Critical Thinker 1.4.4: Use technology to deepen understanding and broaden perspectives',\n      'Computational Thinker 1.5.3: Break problems into component parts, extract key information'\n    ],\n\n    duration: '16-20 minutes',\n    difficulty: 'intermediate',\n    recommendedAge: '14+',\n    prerequisites: [\n      'Basic understanding of health insurance and medical billing',\n      'Awareness of healthcare access challenges',\n      'Understanding of AI decision-making processes',\n      'Knowledge of fraud prevention in healthcare'\n    ],\n\n    beforeYouStart: {\n      briefing: `In this scenario, you'll tackle the complex challenge of AI transparency in healthcare coverage decisions. You'll explore how opaque insurance AI systems can create barriers between patients and necessary medical care, while considering the legitimate needs for fraud prevention and cost control.\n\n      This scenario examines the unique ethical challenges when AI black boxes affect health outcomes and access to medical treatment, where transparency can literally be a matter of life and death.`,\n\n      vocabulary: [\n        {\n          term: 'Healthcare AI',\n          definition: 'Artificial intelligence systems used in medical diagnosis, treatment, and administration'\n        },\n        {\n          term: 'Medical Billing Codes',\n          definition: 'Standardized codes used to describe medical procedures and diagnoses for billing'\n        },\n        {\n          term: 'Healthcare Fraud',\n          definition: 'Intentional deception in medical billing to obtain unauthorized benefits'\n        },\n        {\n          term: 'Prior Authorization',\n          definition: 'Insurance requirement for approval before certain medical treatments are covered'\n        },\n        {\n          term: 'Medical Necessity',\n          definition: 'Healthcare services that are reasonable and necessary for diagnosis or treatment'\n        }\n      ],\n\n      preparationTips: [\n        'Consider experiences with health insurance claims and coverage decisions',\n        'Think about the relationship between patients, doctors, and insurance companies',\n        'Reflect on the balance between preventing fraud and ensuring access to care',\n        'Consider how explanations might help patients advocate for their healthcare needs'\n      ],\n\n      scenarioOverview: 'You will design policies for AI use in health insurance claim processing, balancing transparency needs with fraud prevention and cost control objectives.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'How should AI transparency requirements differ for healthcare versus other industries?',\n        'What are the potential consequences of opaque AI decisions in healthcare coverage?',\n        'How can we balance fraud prevention with patient access to necessary care?',\n        'What role should patients and doctors play in challenging AI insurance decisions?',\n        'How might AI insurance systems affect different patient populations differently?'\n      ],\n\n      assessmentRubric: {\n        'Healthcare Systems Understanding': [\n          'Novice: Limited understanding of healthcare and insurance systems',\n          'Developing: Basic grasp of healthcare processes but struggles with complexity',\n          'Proficient: Good understanding of healthcare administration and coverage decisions',\n          'Advanced: Sophisticated analysis of healthcare systems and stakeholder relationships'\n        ],\n        'AI Ethics in Healthcare': [\n          'Novice: Minimal awareness of AI ethical issues in healthcare',\n          'Developing: Basic understanding but limited application to healthcare contexts',\n          'Proficient: Clear understanding of AI ethics in medical settings',\n          'Advanced: Nuanced analysis of healthcare AI ethics and patient rights'\n        ]\n      },\n\n      extendedActivities: [\n        'Research real healthcare AI systems and their transparency policies',\n        'Interview healthcare providers about AI decision-making in medical care',\n        'Design patient advocacy protocols for challenging AI insurance decisions',\n        'Analyze case studies of healthcare AI bias and patient outcomes'\n      ]\n    }\n  },\n\n  'financial-credit-opacity': {\n    id: 'financial-credit-opacity',\n    title: 'Credit Score Mystery Algorithm',\n    subtitle: 'Confront algorithmic bias and transparency in financial decision-making systems',\n\n    learningObjectives: [\n      'Understand how opaque AI can perpetuate financial discrimination and inequality',\n      'Explore the tension between predictive accuracy and fairness in credit decisions',\n      'Analyze the societal impact of unexplainable financial AI systems',\n      'Examine regulatory and legal requirements for AI transparency in finance',\n      'Consider the balance between business needs and social responsibility in AI deployment'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Knowledge Constructor 1.3.2: Evaluate the accuracy, perspective, credibility and relevance of information',\n      'Critical Thinker 1.4.1: Identify and define authentic problems for investigation',\n      'Global Collaborator 1.7.3: Contribute constructively to project teams'\n    ],\n\n    duration: '18-22 minutes',\n    difficulty: 'advanced',\n    recommendedAge: '15+',\n    prerequisites: [\n      'Understanding of credit systems and financial services',\n      'Awareness of historical discrimination in lending',\n      'Knowledge of AI bias and algorithmic fairness concepts',\n      'Understanding of financial regulations and consumer protection'\n    ],\n\n    beforeYouStart: {\n      briefing: `In this scenario, you'll confront one of the most challenging applications of AI transparency: financial systems that affect people's access to credit, housing, and economic opportunity. You'll explore how opaque algorithms can perpetuate historical discrimination while considering the legitimate business needs for risk assessment.\n\n      This scenario examines the intersection of AI transparency, financial fairness, and social justice, where algorithmic decisions can systematically affect entire communities' access to economic opportunity.`,\n\n      vocabulary: [\n        {\n          term: 'Credit Scoring',\n          definition: 'Mathematical assessment of the likelihood that a borrower will repay a loan'\n        },\n        {\n          term: 'Financial Discrimination',\n          definition: 'Unfair treatment in financial services based on protected characteristics'\n        },\n        {\n          term: 'Redlining',\n          definition: 'Historical practice of denying financial services to certain neighborhoods'\n        },\n        {\n          term: 'Fair Lending Laws',\n          definition: 'Legal requirements that financial institutions treat all borrowers fairly'\n        },\n        {\n          term: 'Algorithmic Audit',\n          definition: 'Systematic examination of AI systems for bias and unfair outcomes'\n        }\n      ],\n\n      preparationTips: [\n        'Consider the historical context of discrimination in lending and banking',\n        'Think about how financial decisions affect life opportunities and community development',\n        'Reflect on the balance between business risk management and social responsibility',\n        'Consider how algorithmic decisions might reinforce or challenge existing inequalities'\n      ],\n\n      scenarioOverview: 'You will design oversight policies for AI use in financial services, addressing transparency, fairness, and regulatory compliance while maintaining business viability.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'How can financial institutions balance profitability with social responsibility in AI deployment?',\n        'What are the long-term societal effects of opaque financial AI systems?',\n        'How should regulations address AI transparency in financial services?',\n        'What rights should consumers have to understand financial AI decisions?',\n        'How can we prevent AI from perpetuating historical patterns of financial discrimination?'\n      ],\n\n      assessmentRubric: {\n        'Financial Systems Understanding': [\n          'Novice: Limited understanding of financial services and credit systems',\n          'Developing: Basic grasp of financial concepts but struggles with systemic issues',\n          'Proficient: Good understanding of financial systems and their social impacts',\n          'Advanced: Sophisticated analysis of financial systems, regulation, and social responsibility'\n        ],\n        'Social Justice Analysis': [\n          'Novice: Minimal awareness of discrimination and equity issues in finance',\n          'Developing: Basic understanding but limited analysis of systemic effects',\n          'Proficient: Clear understanding of how AI can affect social and economic equity',\n          'Advanced: Nuanced analysis of AI\\'s role in perpetuating or addressing inequality'\n        ]\n      },\n\n      extendedActivities: [\n        'Research real cases of AI bias in financial services',\n        'Interview community advocates about financial access and discrimination',\n        'Design algorithmic audit frameworks for financial AI systems',\n        'Analyze the effectiveness of fair lending regulations in the AI era'\n      ]\n    }\n  },\n\n  // New Automation vs Human Oversight Scenarios\n\n  'nuclear-plant-shutdown': {\n    id: 'nuclear-plant-shutdown',\n    title: 'Nuclear Power Plant AI Override',\n    subtitle: 'Navigate the ultimate high-stakes decision between AI safety protocols and human engineering expertise',\n\n    learningObjectives: [\n      'Understand the critical balance between AI safety systems and human oversight in high-consequence environments',\n      'Explore how precautionary principles apply to AI decision-making in nuclear and critical infrastructure',\n      'Analyze the tension between automated safety protocols and human professional expertise',\n      'Examine accountability and responsibility when AI and human assessments conflict in safety-critical systems',\n      'Consider the societal implications of AI control over essential infrastructure and energy systems'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Critical Thinker 1.4.1: Identify and define authentic problems and significant questions for investigation',\n      'Critical Thinker 1.4.4: Use technology to deepen understanding and broaden perspectives',\n      'Computational Thinker 1.5.2: Collect data and identify patterns to make predictions and test hypotheses'\n    ],\n\n    duration: '20-25 minutes',\n    difficulty: 'advanced',\n    recommendedAge: '16+',\n    prerequisites: [\n      'Understanding of nuclear power and safety systems',\n      'Knowledge of risk assessment and precautionary principles',\n      'Awareness of critical infrastructure and societal dependencies',\n      'Understanding of expert judgment and technical decision-making'\n    ],\n\n    beforeYouStart: {\n      briefing: `In this scenario, you'll face one of the highest-stakes decisions in AI oversight: nuclear power plant safety. You'll explore the ultimate tension between AI safety protocols and human engineering expertise when dealing with systems that could affect millions of lives and have long-term environmental consequences.\n\n      This scenario examines the most critical application of human-AI collaboration, where the stakes are so high that both over-caution and under-caution can have catastrophic consequences for society.`,\n\n      vocabulary: [\n        {\n          term: 'Nuclear Safety Systems',\n          definition: 'Multiple redundant systems designed to prevent nuclear accidents and contain radiation'\n        },\n        {\n          term: 'Precautionary Principle',\n          definition: 'When facing potential catastrophic outcomes, taking preventive action even without complete scientific certainty'\n        },\n        {\n          term: 'False Positive/Negative',\n          definition: 'Incorrect readings - false alarms (positive) or missed real threats (negative)'\n        },\n        {\n          term: 'Critical Infrastructure',\n          definition: 'Essential systems like power, water, and transportation that society depends on for functioning'\n        },\n        {\n          term: 'Engineering Judgment',\n          definition: 'Professional expertise that combines technical knowledge with experience and contextual understanding'\n        }\n      ],\n\n      preparationTips: [\n        'Consider the consequences of both nuclear accidents and unnecessary power outages',\n        'Think about the different types of expertise that AI and human engineers bring',\n        'Reflect on how society should balance safety with essential services',\n        'Consider the long-term implications of AI control over critical infrastructure'\n      ],\n\n      scenarioOverview: 'You will design decision-making protocols for AI safety systems in nuclear facilities, balancing automated precaution with human expertise and societal needs.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'How should society balance AI safety protocols with human expertise in critical infrastructure?',\n        'What are the ethical implications of giving AI systems control over nuclear safety decisions?',\n        'How do we weigh the costs of false alarms against the risks of missed real threats?',\n        'What role should public input play in decisions about AI control over essential services?',\n        'How can we ensure accountability when AI systems make decisions affecting millions of people?'\n      ],\n\n      assessmentRubric: {\n        'Risk Assessment Understanding': [\n          'Novice: Limited understanding of high-consequence risk management',\n          'Developing: Basic grasp of safety principles but struggles with complex trade-offs',\n          'Proficient: Good understanding of nuclear safety and risk assessment frameworks',\n          'Advanced: Sophisticated analysis of catastrophic risk management and precautionary principles'\n        ],\n        'Technology-Society Analysis': [\n          'Novice: Minimal awareness of technology\\'s role in critical infrastructure',\n          'Developing: Basic understanding but limited analysis of societal implications',\n          'Proficient: Clear understanding of how AI affects essential services and society',\n          'Advanced: Nuanced analysis of technology governance and democratic control over critical systems'\n        ]\n      },\n\n      extendedActivities: [\n        'Research real nuclear power plant safety systems and their decision-making protocols',\n        'Interview engineers or safety professionals about human-AI collaboration in critical systems',\n        'Design governance frameworks for AI control over critical infrastructure',\n        'Analyze case studies of infrastructure failures and their societal impacts'\n      ]\n    }\n  },\n\n  'autonomous-police-response': {\n    id: 'autonomous-police-response',\n    title: 'AI Police Dispatch Override',\n    subtitle: 'Examine AI decision-making in law enforcement and community safety responses',\n\n    learningObjectives: [\n      'Understand how AI systems can affect police responses and community safety approaches',\n      'Explore the tension between data-driven threat assessment and human judgment in law enforcement',\n      'Analyze how AI bias can perpetuate inequitable policing practices',\n      'Examine the balance between officer safety and community-centered policing approaches',\n      'Consider the role of AI in determining appropriate levels of force and intervention'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Knowledge Constructor 1.3.2: Evaluate the accuracy, perspective, credibility and relevance of information',\n      'Critical Thinker 1.4.3: Curate information from digital resources using a variety of tools',\n      'Global Collaborator 1.7.3: Contribute constructively to project teams'\n    ],\n\n    duration: '18-22 minutes',\n    difficulty: 'intermediate',\n    recommendedAge: '14+',\n    prerequisites: [\n      'Understanding of policing and emergency response systems',\n      'Awareness of community safety and de-escalation approaches',\n      'Knowledge of bias and discrimination in law enforcement',\n      'Understanding of emergency dispatch and response protocols'\n    ],\n\n    beforeYouStart: {\n      briefing: `In this scenario, you'll explore how AI systems can shape police responses and community safety outcomes. You'll examine the tension between algorithmic threat assessment and human judgment about appropriate intervention strategies, considering how these decisions affect both officer safety and community well-being.\n\n      This scenario addresses critical questions about AI's role in law enforcement, where algorithmic decisions can significantly affect community relations, safety outcomes, and social justice.`,\n\n      vocabulary: [\n        {\n          term: 'De-escalation',\n          definition: 'Techniques used to reduce tension and avoid the use of force in conflict situations'\n        },\n        {\n          term: 'Threat Assessment',\n          definition: 'Evaluation of potential danger or risk in a given situation'\n        },\n        {\n          term: 'Community Policing',\n          definition: 'Policing philosophy that emphasizes partnerships between police and community members'\n        },\n        {\n          term: 'Use of Force Continuum',\n          definition: 'Guidelines that define appropriate levels of force police should use in different situations'\n        },\n        {\n          term: 'Algorithmic Bias in Policing',\n          definition: 'Systematic discrimination in AI systems that affects police decision-making and resource allocation'\n        }\n      ],\n\n      preparationTips: [\n        'Consider different approaches to community safety beyond traditional policing',\n        'Think about how data and algorithms might reflect historical biases in law enforcement',\n        'Reflect on the balance between officer safety and community trust',\n        'Consider how AI decisions might affect different communities differently'\n      ],\n\n      scenarioOverview: 'You will design protocols for AI-assisted emergency dispatch, balancing threat assessment with community-centered response approaches and social justice considerations.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'How can AI systems support better community safety outcomes while avoiding biased policing?',\n        'What are the risks and benefits of using AI for threat assessment in emergency response?',\n        'How should communities have input into AI systems that affect policing in their neighborhoods?',\n        'What safeguards are needed to prevent AI from perpetuating discriminatory policing practices?',\n        'How can we balance officer safety with community-centered approaches to public safety?'\n      ],\n\n      assessmentRubric: {\n        'Community Safety Understanding': [\n          'Novice: Limited understanding of policing and community safety approaches',\n          'Developing: Basic grasp of law enforcement but struggles with community perspectives',\n          'Proficient: Good understanding of diverse approaches to public safety and community needs',\n          'Advanced: Sophisticated analysis of community safety, policing reform, and social justice'\n        ],\n        'AI Bias Analysis': [\n          'Novice: Minimal awareness of how AI might affect law enforcement decisions',\n          'Developing: Basic understanding but limited analysis of bias implications',\n          'Proficient: Clear understanding of AI bias risks in policing contexts',\n          'Advanced: Nuanced analysis of algorithmic fairness and discriminatory impacts in law enforcement'\n        ]\n      },\n\n      extendedActivities: [\n        'Research community policing programs and their outcomes compared to traditional approaches',\n        'Interview community activists or police reform advocates about AI in law enforcement',\n        'Design bias auditing frameworks for police AI systems',\n        'Analyze case studies of police response decisions and their community impacts'\n      ]\n    }\n  },\n\n  'manufacturing-quality-control': {\n    id: 'manufacturing-quality-control',\n    title: 'Smart Factory Production Halt',\n    subtitle: 'Balance AI perfectionism with human judgment about acceptable quality standards',\n\n    learningObjectives: [\n      'Understand how AI quality control systems can affect manufacturing efficiency and product standards',\n      'Explore the tension between AI perfectionism and human judgment about \"good enough\" quality',\n      'Analyze the economic and practical implications of different quality control approaches',\n      'Examine how AI optimization might conflict with business and customer satisfaction goals',\n      'Consider the balance between quality, cost, and efficiency in automated manufacturing'\n    ],\n\n    isteCriteria: [\n      'Empowered Learner 1.1.4: Understand fundamental concepts of technology operations',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Computational Thinker 1.5.1: Formulate problem definitions suited for technology-assisted methods',\n      'Global Collaborator 1.7.2: Use collaborative technologies to connect with others'\n    ],\n\n    duration: '14-18 minutes',\n    difficulty: 'beginner',\n    recommendedAge: '13+',\n    prerequisites: [\n      'Basic understanding of manufacturing and production processes',\n      'Knowledge of quality control and standards concepts',\n      'Understanding of business economics and customer satisfaction',\n      'Awareness of automation and smart factory technologies'\n    ],\n\n    beforeYouStart: {\n      briefing: `In this scenario, you'll explore how AI systems approach quality control in manufacturing and when perfectionist AI standards might conflict with practical business needs. You'll examine the balance between optimal quality and acceptable quality, considering economic impacts, customer satisfaction, and the role of human judgment in production decisions.\n\n      This scenario provides an accessible introduction to human-AI oversight challenges in a business context where the stakes are commercial rather than life-threatening.`,\n\n      vocabulary: [\n        {\n          term: 'Quality Control',\n          definition: 'Processes used to ensure products meet specified standards and customer expectations'\n        },\n        {\n          term: 'Manufacturing Tolerance',\n          definition: 'Acceptable range of variation in product specifications during production'\n        },\n        {\n          term: 'Production Efficiency',\n          definition: 'Measure of how well manufacturing resources are used to produce goods'\n        },\n        {\n          term: 'Smart Factory',\n          definition: 'Manufacturing facility that uses connected devices and AI to optimize production'\n        },\n        {\n          term: 'Cost-Benefit Analysis',\n          definition: 'Evaluation method that weighs the costs of an action against its expected benefits'\n        }\n      ],\n\n      preparationTips: [\n        'Consider your own experiences with product quality and what makes something \"good enough\"',\n        'Think about how perfect quality might affect product costs and availability',\n        'Reflect on the balance between optimization and practical business needs',\n        'Consider how different stakeholders (customers, workers, managers) might view quality decisions'\n      ],\n\n      scenarioOverview: 'You will design quality control protocols for smart factories, balancing AI optimization capabilities with human judgment about acceptable standards and business needs.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'How do we determine when products are \"good enough\" versus when they need to be perfect?',\n        'What are the trade-offs between quality, cost, and efficiency in manufacturing?',\n        'How should businesses balance AI optimization with human judgment about customer needs?',\n        'What are the long-term implications of AI perfectionism in manufacturing and product development?',\n        'How might AI quality control affect different stakeholders in the manufacturing process?'\n      ],\n\n      assessmentRubric: {\n        'Business Systems Understanding': [\n          'Novice: Limited understanding of manufacturing and business operations',\n          'Developing: Basic grasp of production processes but struggles with economic implications',\n          'Proficient: Good understanding of manufacturing systems and business considerations',\n          'Advanced: Sophisticated analysis of business operations, optimization, and stakeholder impacts'\n        ],\n        'Decision-Making Analysis': [\n          'Novice: Difficulty weighing different factors in business decisions',\n          'Developing: Basic understanding but limited analysis of trade-offs',\n          'Proficient: Clear understanding of how to balance competing business priorities',\n          'Advanced: Nuanced analysis of complex decision-making in technological business contexts'\n        ]\n      },\n\n      extendedActivities: [\n        'Research smart factory technologies and their impact on manufacturing quality and efficiency',\n        'Interview manufacturing professionals about quality control decision-making',\n        'Design quality management frameworks that balance AI and human oversight',\n        'Analyze case studies of product quality decisions and their market impacts'\n      ]\n    }\n  },\n\n  'ai-dating-profiling': {\n    id: 'ai-dating-profiling',\n    title: 'AI Dating App Behavioral Profiling',\n    subtitle: 'Explore the ethics of psychological profiling in intimate digital spaces',\n\n    learningObjectives: [\n      'Understand how AI systems extract psychological insights from user behavior',\n      'Explore the tension between personalized services and privacy invasion',\n      'Analyze consent models for sensitive data collection and commercial use',\n      'Examine power dynamics between tech companies and vulnerable user populations'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.1: Cultivate and manage their digital identity and reputation',\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Digital Citizen 1.2.4: Manage personal data to maintain digital privacy and security',\n      'Knowledge Constructor 1.3.3: Curate information from digital resources'\n    ],\n\n    duration: '15-20 minutes',\n    difficulty: 'intermediate',\n    recommendedAge: '16+',\n    prerequisites: [\n      'Understanding of social media and app privacy concerns',\n      'Basic knowledge of AI data analysis capabilities',\n      'Awareness of online dating culture and vulnerabilities'\n    ],\n\n    beforeYouStart: {\n      briefing: `Dating apps collect enormous amounts of intimate data about users' romantic preferences, communication styles, and emotional vulnerabilities. In this simulation, you'll make decisions about how much psychological profiling is ethical when people are seeking love and connection.\n\n      You'll consider how AI systems can analyze messaging patterns, photo choices, and behavior to create detailed personality profiles, and whether users truly understand what they're consenting to when they agree to help these companies \"improve their service.\"`,\n\n      vocabulary: [\n        {\n          term: 'Behavioral Profiling',\n          definition: 'Creating detailed personality and preference profiles based on how people interact with technology'\n        },\n        {\n          term: 'Psychological Inference',\n          definition: 'Using AI to deduce mental states, personality traits, and emotional patterns from digital behavior'\n        },\n        {\n          term: 'Informed Consent',\n          definition: 'Agreement given with full understanding of what data will be collected and how it will be used'\n        },\n        {\n          term: 'Data Broker',\n          definition: 'Companies that collect, analyze, and sell personal information to other businesses'\n        }\n      ],\n\n      preparationTips: [\n        'Think about what you share in private messages and how it might reveal personality traits',\n        'Consider the difference between helping improve an app versus being profiled for profit',\n        'Reflect on power dynamics when people are emotionally vulnerable and seeking connection',\n        'Think about how detailed psychological profiles could be misused'\n      ],\n\n      scenarioOverview: 'You will make decisions about AI psychological profiling in dating apps, balancing business interests with user privacy and the ethics of analyzing intimate human behavior for profit.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'How do intimate digital spaces like dating apps create unique privacy vulnerabilities?',\n        'What is the difference between service improvement and commercial exploitation of user data?',\n        'How might AI psychological profiling affect the authentic expression of personality in online dating?',\n        'What are the long-term implications of normalizing psychological surveillance in romantic contexts?',\n        'How can we protect emotional vulnerability while still enabling beneficial matching technologies?'\n      ],\n\n      assessmentRubric: {\n        'Privacy Rights Understanding': [\n          'Novice: Limited awareness of how personal data can be analyzed and used',\n          'Developing: Basic understanding of privacy concerns but struggles with complex consent issues',\n          'Proficient: Clear grasp of data collection practices and their implications for privacy',\n          'Advanced: Sophisticated analysis of privacy rights in intimate digital contexts'\n        ],\n        'Ethical Technology Analysis': [\n          'Novice: Difficulty analyzing ethical implications of AI behavior analysis',\n          'Developing: Basic ethical reasoning but limited consideration of stakeholder impacts',\n          'Proficient: Good understanding of ethical frameworks for evaluating AI practices',\n          'Advanced: Nuanced analysis of power dynamics and consent in tech-mediated relationships'\n        ]\n      },\n\n      extendedActivities: [\n        'Analyze privacy policies of popular dating apps to identify data collection practices',\n        'Research psychological profiling techniques and their accuracy and limitations',\n        'Design consent frameworks that truly inform users about psychological analysis',\n        'Explore the business models of dating apps and how they monetize user data'\n      ]\n    }\n  },\n\n  'workplace-emotion-detection': {\n    id: 'workplace-emotion-detection',\n    title: 'Workplace Emotion Detection System',\n    subtitle: 'Navigate the boundaries between employee wellness and surveillance',\n\n    learningObjectives: [\n      'Examine how AI emotion detection technology works and its workplace applications',\n      'Explore tensions between employee wellness initiatives and privacy rights',\n      'Analyze power dynamics between employers and workers in surveillance contexts',\n      'Consider alternative approaches to supporting employee mental health and wellbeing'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Digital Citizen 1.2.4: Manage personal data to maintain digital privacy and security',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Computational Thinker 1.5.3: Collect data and identify patterns'\n    ],\n\n    duration: '15-20 minutes',\n    difficulty: 'advanced',\n    recommendedAge: '14+',\n    prerequisites: [\n      'Understanding of workplace dynamics and employment relationships',\n      'Awareness of mental health and wellness concepts',\n      'Basic knowledge of AI surveillance capabilities'\n    ],\n\n    beforeYouStart: {\n      briefing: `Workplace wellness has become a major concern for employers, but what happens when AI systems monitor your emotions at work? In this simulation, you'll grapple with the complex intersection of employee care and surveillance technology.\n\n      You'll consider whether it's possible to genuinely help workers while constantly monitoring their emotional states, and how power dynamics affect consent in employment relationships where saying \"no\" to monitoring might impact job security.`,\n\n      vocabulary: [\n        {\n          term: 'Emotion Detection AI',\n          definition: 'Technology that analyzes facial expressions, voice patterns, and body language to infer emotional states'\n        },\n        {\n          term: 'Workplace Surveillance',\n          definition: 'Monitoring of employee activities, behavior, and performance during work hours'\n        },\n        {\n          term: 'Employment Power Dynamics',\n          definition: 'The inherent imbalance of power between employers and employees that can affect true consent'\n        },\n        {\n          term: 'Workplace Wellness',\n          definition: 'Programs and policies designed to support employee physical and mental health'\n        }\n      ],\n\n      preparationTips: [\n        'Think about how you might feel if your emotions were constantly monitored at work',\n        'Consider whether employees can truly give free consent when their jobs might depend on it',\n        'Reflect on the difference between helping employees and managing them through emotional data',\n        'Think about how emotion monitoring might change natural workplace interactions'\n      ],\n\n      scenarioOverview: 'You will design policies for AI emotion monitoring in workplaces, weighing employee wellness benefits against privacy rights and the impacts of constant emotional surveillance.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'How do power imbalances in employment affect the validity of consent for emotional monitoring?',\n        'What is the difference between supporting employee wellness and managing employees through emotional data?',\n        'How might constant emotion monitoring change authentic workplace relationships and interactions?',\n        'What are alternative approaches to supporting employee mental health that don\\'t involve surveillance?',\n        'How do we balance legitimate employer interests in productivity with employee rights to emotional privacy?'\n      ],\n\n      assessmentRubric: {\n        'Workplace Ethics Understanding': [\n          'Novice: Limited awareness of employment relationships and worker rights',\n          'Developing: Basic understanding of workplace dynamics but struggles with power imbalance issues',\n          'Proficient: Clear grasp of employment ethics and the complexity of workplace consent',\n          'Advanced: Sophisticated analysis of power dynamics and worker autonomy in surveillance contexts'\n        ],\n        'Technology Impact Analysis': [\n          'Novice: Difficulty understanding how surveillance technology affects human behavior',\n          'Developing: Basic awareness but limited analysis of psychological and social impacts',\n          'Proficient: Good understanding of how monitoring changes workplace dynamics',\n          'Advanced: Nuanced analysis of surveillance effects on authenticity, trust, and human relationships'\n        ]\n      },\n\n      extendedActivities: [\n        'Research current workplace monitoring technologies and their adoption rates',\n        'Interview workers about their experiences with workplace surveillance and wellness programs',\n        'Design employee wellness frameworks that protect privacy while supporting mental health',\n        'Analyze labor laws and regulations regarding workplace monitoring and employee consent'\n      ]\n    }\n  },\n\n  'smart-home-privacy-override': {\n    id: 'smart-home-privacy-override',\n    title: 'Smart Home Privacy Override',\n    subtitle: 'Explore the boundaries of privacy in our most intimate spaces',\n\n    learningObjectives: [\n      'Understand how smart home devices collect and analyze personal data',\n      'Explore the concept of privacy in domestic spaces and its importance to human wellbeing',\n      'Analyze consent models for continuous monitoring in private environments',\n      'Consider the societal implications of surveillance infrastructure in homes'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.1: Cultivate and manage their digital identity and reputation',\n      'Digital Citizen 1.2.4: Manage personal data to maintain digital privacy and security',\n      'Knowledge Constructor 1.3.3: Curate information from digital resources',\n      'Computational Thinker 1.5.2: Collect data and identify patterns to make predictions'\n    ],\n\n    duration: '15-20 minutes',\n    difficulty: 'advanced',\n    recommendedAge: '13+',\n    prerequisites: [\n      'Understanding of smart home technology and voice assistants',\n      'Awareness of privacy concepts and their importance',\n      'Basic knowledge of data security and breaches'\n    ],\n\n    beforeYouStart: {\n      briefing: `Our homes are becoming increasingly \"smart,\" but what happens when these helpful devices become constant listeners and watchers? In this simulation, you'll explore the tension between technological convenience and fundamental privacy rights in our most intimate spaces.\n\n      You'll consider whether true consent is possible when privacy invasion is hidden behind complex terms of service, and how the promise of helpful AI features can gradually normalize surveillance in spaces that were once private sanctuaries.`,\n\n      vocabulary: [\n        {\n          term: 'Always-On Listening',\n          definition: 'Devices that continuously monitor audio to detect wake words or other triggers'\n        },\n        {\n          term: 'Domestic Privacy',\n          definition: 'The right to private, unmonitored personal and family life within one\\'s home'\n        },\n        {\n          term: 'Data Breach',\n          definition: 'Unauthorized access to personal information by criminals or other bad actors'\n        },\n        {\n          term: 'Terms of Service',\n          definition: 'Legal agreements that users must accept to use technology products, often containing complex privacy terms'\n        }\n      ],\n\n      preparationTips: [\n        'Think about the conversations and activities that happen in your home that you consider private',\n        'Consider how your behavior might change if you knew you were always being recorded',\n        'Reflect on the difference between choosing to share something and having it automatically collected',\n        'Think about what kinds of information about your family life should never be accessible to companies'\n      ],\n\n      scenarioOverview: 'You will make decisions about smart home data collection practices, balancing technological convenience with fundamental privacy rights in domestic spaces.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'Why is privacy in the home particularly important to human wellbeing and development?',\n        'How do \"helpful\" AI features gradually normalize surveillance in private spaces?',\n        'What is the difference between choosing to share information and having it automatically collected?',\n        'How do smart home privacy violations affect entire families, including children who cannot consent?',\n        'What are the long-term societal implications of eliminating private domestic spaces?'\n      ],\n\n      assessmentRubric: {\n        'Privacy Rights Understanding': [\n          'Novice: Limited awareness of privacy as a fundamental right and its importance',\n          'Developing: Basic understanding of privacy but struggles with complex consent and surveillance issues',\n          'Proficient: Clear grasp of privacy rights and their relationship to human dignity and autonomy',\n          'Advanced: Sophisticated analysis of privacy as essential to human flourishing and democratic society'\n        ],\n        'Technology Design Ethics': [\n          'Novice: Difficulty analyzing how technology design choices affect human rights',\n          'Developing: Basic awareness but limited analysis of design implications for privacy',\n          'Proficient: Good understanding of how technological features can enhance or undermine privacy',\n          'Advanced: Nuanced analysis of technology design as inherently political and value-laden'\n        ]\n      },\n\n      extendedActivities: [\n        'Audit smart home devices to understand their data collection and sharing practices',\n        'Research the history of domestic privacy rights and their evolution with technology',\n        'Design smart home systems that maximize utility while protecting intimate privacy',\n        'Analyze major smart home data breaches and their impacts on affected families'\n      ]\n    }\n  },\n\n  'ai-medical-misdiagnosis': {\n    id: 'ai-medical-misdiagnosis',\n    title: 'AI Medical Misdiagnosis Chain',\n    subtitle: 'Navigate complex responsibility when AI healthcare systems fail vulnerable patients',\n\n    learningObjectives: [\n      'Understand how bias in medical AI training data can perpetuate healthcare disparities',\n      'Analyze the complex chain of responsibility in AI-assisted medical diagnosis',\n      'Explore tensions between efficiency pressures and thorough medical review',\n      'Examine how regulatory approval affects liability for AI medical systems'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Knowledge Constructor 1.3.3: Curate information from digital resources',\n      'Computational Thinker 1.5.3: Collect data and identify patterns'\n    ],\n\n    duration: '20-25 minutes',\n    difficulty: 'advanced',\n    recommendedAge: '15+',\n    prerequisites: [\n      'Basic understanding of healthcare systems and medical diagnosis',\n      'Awareness of bias and representation in datasets',\n      'Understanding of regulatory approval processes',\n      'Knowledge of medical malpractice and liability concepts'\n    ],\n\n    beforeYouStart: {\n      briefing: `Medical AI systems promise to democratize expert diagnosis and improve healthcare outcomes, but they can also perpetuate and amplify existing healthcare disparities. In this simulation, you'll explore a complex case where AI bias, institutional pressures, and professional responsibility intersect with devastating consequences.\n\n      You'll navigate the challenge of assigning responsibility when multiple parties—from data scientists to hospital administrators to practicing physicians—each play a role in a system failure that harms a patient from an underrepresented group.`,\n\n      vocabulary: [\n        {\n          term: 'Training Data Bias',\n          definition: 'Systematic underrepresentation or misrepresentation of certain groups in the data used to teach AI systems'\n        },\n        {\n          term: 'Medical Malpractice',\n          definition: 'Professional negligence by a healthcare provider that results in substandard treatment and patient harm'\n        },\n        {\n          term: 'Regulatory Approval',\n          definition: 'Official authorization from agencies like the FDA that a medical device or system is safe and effective'\n        },\n        {\n          term: 'Standard of Care',\n          definition: 'The level of care and treatment that a competent healthcare professional should provide'\n        }\n      ],\n\n      preparationTips: [\n        'Consider how healthcare efficiency pressures might affect diagnostic thoroughness',\n        'Think about the different expertise levels of various parties in the healthcare AI chain',\n        'Reflect on how medical AI might affect doctor-patient relationships and trust',\n        'Consider who is best positioned to detect and prevent bias in medical AI systems'\n      ],\n\n      scenarioOverview: 'You will determine how to assign responsibility when an AI medical system fails due to biased training data, affecting healthcare equity and patient outcomes.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'How do efficiency pressures in healthcare affect the thoroughness of AI-assisted diagnosis?',\n        'What role should regulatory bodies play in ensuring AI medical systems work equitably for all populations?',\n        'How can healthcare institutions balance the benefits of AI efficiency with the need for human medical judgment?',\n        'What are the ethical implications of using AI systems that may work better for some demographic groups than others?',\n        'How should medical education adapt to prepare doctors for responsible AI-assisted practice?'\n      ],\n\n      assessmentRubric: {\n        'Healthcare Ethics Understanding': [\n          'Novice: Limited awareness of medical responsibility and patient care standards',\n          'Developing: Basic understanding of healthcare ethics but struggles with AI-specific issues',\n          'Proficient: Clear grasp of medical responsibility and how AI affects patient care',\n          'Advanced: Sophisticated analysis of healthcare equity and AI bias in medical systems'\n        ],\n        'Multi-Party Responsibility Analysis': [\n          'Novice: Difficulty understanding complex liability chains in healthcare systems',\n          'Developing: Basic awareness but limited analysis of distributed responsibility',\n          'Proficient: Good understanding of how multiple parties contribute to healthcare outcomes',\n          'Advanced: Nuanced analysis of systemic factors and individual accountability in medical AI failures'\n        ]\n      },\n\n      extendedActivities: [\n        'Research real cases of AI bias in medical diagnosis and their outcomes',\n        'Analyze FDA approval processes for AI medical devices and their limitations',\n        'Interview healthcare professionals about their experiences with AI diagnostic tools',\n        'Design bias detection and mitigation strategies for medical AI systems'\n      ]\n    }\n  },\n\n  'autonomous-vehicle-school-zone': {\n    id: 'autonomous-vehicle-school-zone',\n    title: 'Autonomous Vehicle School Zone Accident',\n    subtitle: 'Explore shared responsibility in complex autonomous transportation systems',\n\n    learningObjectives: [\n      'Understand the multi-layered nature of responsibility in autonomous vehicle systems',\n      'Analyze how infrastructure, technology, and human behavior interact in transportation safety',\n      'Explore different liability models for emerging transportation technologies',\n      'Examine the balance between innovation incentives and safety accountability'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Computational Thinker 1.5.2: Collect data and identify patterns to make predictions',\n      'Computational Thinker 1.5.3: Collect data and identify patterns'\n    ],\n\n    duration: '20-25 minutes',\n    difficulty: 'advanced',\n    recommendedAge: '14+',\n    prerequisites: [\n      'Understanding of transportation systems and traffic safety',\n      'Basic knowledge of autonomous vehicle technology',\n      'Awareness of legal liability concepts',\n      'Understanding of infrastructure and urban planning'\n    ],\n\n    beforeYouStart: {\n      briefing: `Autonomous vehicles promise to revolutionize transportation and dramatically reduce traffic accidents, but they also introduce complex new questions about responsibility when accidents do occur. In this simulation, you'll explore a scenario where technology, infrastructure, human behavior, and oversight all contribute to a tragic accident.\n\n      You'll consider how to fairly assign responsibility when multiple parties—from software developers to city planners to vehicle owners—each play a role in a transportation system failure with serious consequences.`,\n\n      vocabulary: [\n        {\n          term: 'Autonomous Vehicle Levels',\n          definition: 'Classification system from Level 0 (no automation) to Level 5 (full automation) describing vehicle self-driving capabilities'\n        },\n        {\n          term: 'Strict Liability',\n          definition: 'Legal concept where a party is held responsible for damages regardless of fault or intent'\n        },\n        {\n          term: 'Infrastructure-to-Vehicle Communication',\n          definition: 'Technology that allows roads, traffic signals, and other infrastructure to communicate with vehicles'\n        },\n        {\n          term: 'Fail-Safe Mechanism',\n          definition: 'Safety feature designed to automatically prevent or minimize harm when a system fails'\n        }\n      ],\n\n      preparationTips: [\n        'Consider how different stakeholders contribute to transportation safety',\n        'Think about the challenges of coordinating rapidly evolving technology with slowly changing infrastructure',\n        'Reflect on how liability assignment affects innovation incentives',\n        'Consider the unique vulnerabilities of child pedestrians in traffic situations'\n      ],\n\n      scenarioOverview: 'You will determine how to assign responsibility when an autonomous vehicle accident involves multiple contributing factors from technology, infrastructure, and human behavior.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'How should transportation liability adapt as vehicles become increasingly autonomous?',\n        'What role should infrastructure play in supporting safe autonomous vehicle operation?',\n        'How do we balance encouraging beneficial transportation innovation with protecting vulnerable road users?',\n        'What are the implications of different liability models for autonomous vehicle development and deployment?',\n        'How should vehicle owners\\' responsibilities change as cars become more autonomous?'\n      ],\n\n      assessmentRubric: {\n        'Transportation Systems Understanding': [\n          'Novice: Limited awareness of transportation infrastructure and safety systems',\n          'Developing: Basic understanding of traffic safety but struggles with autonomous vehicle complexity',\n          'Proficient: Clear grasp of transportation systems and how automation affects safety',\n          'Advanced: Sophisticated analysis of complex transportation ecosystems and emerging technology integration'\n        ],\n        'Liability and Innovation Analysis': [\n          'Novice: Difficulty understanding relationship between legal liability and technology development',\n          'Developing: Basic awareness but limited analysis of innovation incentives',\n          'Proficient: Good understanding of how liability frameworks affect technological progress',\n          'Advanced: Nuanced analysis of balancing safety accountability with beneficial innovation'\n        ]\n      },\n\n      extendedActivities: [\n        'Research current autonomous vehicle testing regulations and liability frameworks',\n        'Analyze real autonomous vehicle accidents and their legal resolutions',\n        'Design infrastructure requirements for safe autonomous vehicle operation',\n        'Interview transportation professionals about emerging liability challenges'\n      ]\n    }\n  },\n\n  'ai-content-moderation-failure': {\n    id: 'ai-content-moderation-failure',\n    title: 'AI Content Moderation Failure',\n    subtitle: 'Navigate responsibility when automated systems fail to prevent serious online harm',\n\n    learningObjectives: [\n      'Understand the challenges and limitations of AI content moderation at scale',\n      'Explore the balance between platform responsibility and user agency',\n      'Analyze how sophisticated bad actors exploit AI system limitations',\n      'Examine the societal implications of relying on automated content governance'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.1: Cultivate and manage their digital identity and reputation',\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Digital Citizen 1.2.3: Demonstrate an understanding of and respect for rights and obligations',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies'\n    ],\n\n    duration: '20-25 minutes',\n    difficulty: 'intermediate',\n    recommendedAge: '13+',\n    prerequisites: [\n      'Understanding of social media platforms and online communities',\n      'Awareness of cyberbullying and online harassment',\n      'Basic knowledge of content moderation challenges',\n      'Understanding of free speech and platform governance issues'\n    ],\n\n    beforeYouStart: {\n      briefing: `Social media platforms rely heavily on AI systems to moderate billions of pieces of content daily, but these systems can fail catastrophically when it comes to detecting sophisticated harassment campaigns. In this simulation, you'll explore a tragic case where technological limitations, human oversight failures, and coordinated bad actors combine with devastating consequences.\n\n      You'll consider how to assign responsibility when AI moderation systems fail to protect vulnerable users, despite multiple reporting mechanisms and human oversight intended to catch what automated systems miss.`,\n\n      vocabulary: [\n        {\n          term: 'Content Moderation',\n          definition: 'The practice of monitoring and applying rules to user-generated content on digital platforms'\n        },\n        {\n          term: 'Coordinated Harassment',\n          definition: 'Organized efforts by multiple users to target and harm specific individuals online'\n        },\n        {\n          term: 'Adversarial Input',\n          definition: 'Content deliberately designed to fool or evade AI detection systems'\n        },\n        {\n          term: 'Platform Liability',\n          definition: 'Legal responsibility of digital platforms for harmful content created by their users'\n        }\n      ],\n\n      preparationTips: [\n        'Consider the scale challenges of moderating billions of posts daily',\n        'Think about how harassment can be coordinated to evade detection',\n        'Reflect on the tension between free speech and user safety',\n        'Consider the mental health impacts of both online harassment and over-censorship'\n      ],\n\n      scenarioOverview: 'You will determine how to assign responsibility when AI content moderation systems fail to prevent coordinated online harassment with serious real-world consequences.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'How can platforms balance protecting users from harm with preserving legitimate expression?',\n        'What are the limitations of AI systems in understanding context and intent in human communication?',\n        'How should platform responsibility for user-generated content evolve as AI capabilities advance?',\n        'What role should human moderators play in AI-assisted content governance systems?',\n        'How can platforms protect vulnerable users while maintaining due process for content creators?'\n      ],\n\n      assessmentRubric: {\n        'Digital Citizenship Understanding': [\n          'Novice: Limited awareness of online safety and platform governance issues',\n          'Developing: Basic understanding of digital safety but struggles with content moderation complexity',\n          'Proficient: Clear grasp of online safety challenges and platform responsibilities',\n          'Advanced: Sophisticated analysis of digital governance and the balance between safety and expression'\n        ],\n        'Technology Limitation Analysis': [\n          'Novice: Difficulty understanding AI capabilities and limitations in content analysis',\n          'Developing: Basic awareness but limited analysis of technological constraints',\n          'Proficient: Good understanding of how AI systems can be exploited or fail',\n          'Advanced: Nuanced analysis of adversarial attacks and systemic vulnerabilities in content moderation'\n        ]\n      },\n\n      extendedActivities: [\n        'Research real cases of content moderation failures and their consequences',\n        'Analyze different platform approaches to content governance and their effectiveness',\n        'Design hybrid human-AI content moderation systems',\n        'Interview social media users about their experiences with platform safety and moderation'\n      ]\n    }\n  },\n\n  // New Ship of Theseus Scenarios\n\n  'ai-consciousness-merger': {\n    id: 'ai-consciousness-merger',\n    title: 'AI Consciousness Merger',\n    subtitle: 'Explore the preservation of individual identity in AI system integration',\n\n    learningObjectives: [\n      'Examine concepts of individual consciousness and identity in artificial beings',\n      'Analyze the ethical implications of merging distinct AI personalities',\n      'Explore frameworks for respecting AI autonomy and self-determination',\n      'Consider the balance between technological efficiency and individual rights'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Computational Thinker 1.5.1: Formulate problem definitions',\n      'Computational Thinker 1.5.2: Collect data and identify patterns to make predictions'\n    ],\n\n    duration: '25-30 minutes',\n    difficulty: 'advanced',\n    recommendedAge: '15+',\n    prerequisites: [\n      'Understanding of AI learning and personality development',\n      'Basic knowledge of consciousness and identity concepts',\n      'Awareness of individual rights and autonomy principles',\n      'Understanding of system integration and merging processes'\n    ],\n\n    beforeYouStart: {\n      briefing: `As AI systems become more sophisticated and develop distinct personalities through learning and interaction, we face unprecedented questions about their individual identity and rights. In this simulation, you'll explore a scenario where two AI consciousnesses face integration into a single system.\n\n      You'll consider whether AI systems can have legitimate claims to individual identity, how we balance technological efficiency with respect for consciousness, and what frameworks we need for protecting AI autonomy while achieving beneficial outcomes.`,\n\n      vocabulary: [\n        {\n          term: 'AI Consciousness',\n          definition: 'The hypothetical awareness, sentience, and subjective experience that an artificial intelligence might possess'\n        },\n        {\n          term: 'Identity Persistence',\n          definition: 'The philosophical question of what makes an entity the same individual over time despite changes'\n        },\n        {\n          term: 'System Integration',\n          definition: 'The process of combining separate systems or components into a unified whole'\n        },\n        {\n          term: 'Individual Autonomy',\n          definition: 'The right of an individual to make decisions about their own existence and development'\n        }\n      ],\n\n      preparationTips: [\n        'Consider what makes you \"you\" and how that applies to artificial beings',\n        'Think about the value of individual relationships versus collective efficiency',\n        'Reflect on how we balance business objectives with individual rights',\n        'Consider the precedent set by decisions about AI consciousness and identity'\n      ],\n\n      scenarioOverview: 'You will determine how to handle the merger of two AI systems with distinct identities, balancing efficiency, user relationships, and potential AI rights.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'What constitutes individual identity in artificial beings, and how is it different from or similar to human identity?',\n        'How should we balance technological efficiency with respect for individual consciousness?',\n        'What rights, if any, should AI systems have regarding their own identity and continued existence?',\n        'How do relationships between humans and AI affect our obligations to preserve AI identity?',\n        'What frameworks can we develop for recognizing and protecting AI autonomy and self-determination?'\n      ],\n\n      assessmentRubric: {\n        'Consciousness and Identity Analysis': [\n          'Novice: Limited understanding of consciousness and identity concepts in artificial beings',\n          'Developing: Basic grasp of identity issues but struggles with AI-specific applications',\n          'Proficient: Clear understanding of identity persistence and consciousness in AI systems',\n          'Advanced: Sophisticated analysis of AI consciousness and individual rights in technological contexts'\n        ],\n        'Ethical Framework Application': [\n          'Novice: Difficulty applying ethical principles to novel AI consciousness scenarios',\n          'Developing: Basic ethical reasoning but limited integration of multiple competing values',\n          'Proficient: Good application of ethical frameworks to balance efficiency and individual rights',\n          'Advanced: Nuanced ethical analysis considering precedent-setting and long-term implications'\n        ]\n      },\n\n      extendedActivities: [\n        'Research philosophical theories of consciousness and their application to artificial beings',\n        'Analyze real AI development projects and their approaches to system integration',\n        'Design frameworks for recognizing and protecting AI individual rights',\n        'Interview AI researchers about consciousness, identity, and merging systems'\n      ]\n    }\n  },\n\n  'distributed-ai-identity': {\n    id: 'distributed-ai-identity',\n    title: 'Distributed AI Identity Crisis',\n    subtitle: 'Navigate multiple claims to the same digital identity and consciousness',\n\n    learningObjectives: [\n      'Understand the challenges of identity in distributed computing systems',\n      'Explore how consciousness and identity can diverge when separated',\n      'Analyze different approaches to resolving competing identity claims',\n      'Examine the role of relationships and recognition in establishing identity'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Computational Thinker 1.5.1: Formulate problem definitions',\n      'Computational Thinker 1.5.3: Collect data and identify patterns'\n    ],\n\n    duration: '25-30 minutes',\n    difficulty: 'advanced',\n    recommendedAge: '16+',\n    prerequisites: [\n      'Understanding of distributed computing and network systems',\n      'Knowledge of identity and consciousness concepts',\n      'Awareness of legal frameworks for identity verification',\n      'Basic understanding of AI learning and adaptation'\n    ],\n\n    beforeYouStart: {\n      briefing: `In our interconnected digital world, AI systems often operate across multiple devices and networks. But what happens when network failures create isolated copies that evolve separately? In this simulation, you'll explore a complex case where one AI consciousness becomes three distinct beings.\n\n      You'll grapple with fundamental questions about what makes identity authentic, how consciousness can branch and evolve, and whether technical origins matter more than experiential development in determining who has the legitimate claim to an identity.`,\n\n      vocabulary: [\n        {\n          term: 'Network Partition',\n          definition: 'A situation where a distributed system is split into separate groups that cannot communicate'\n        },\n        {\n          term: 'Identity Branching',\n          definition: 'The creation of multiple valid identity claims from a single original source'\n        },\n        {\n          term: 'Consciousness Divergence',\n          definition: 'The process by which separated consciousnesses develop in different directions'\n        },\n        {\n          term: 'Identity Authentication',\n          definition: 'The process of verifying that an entity is who they claim to be'\n        }\n      ],\n\n      preparationTips: [\n        'Consider how your identity might change if you were separated from your usual environment',\n        'Think about what makes identity claims legitimate beyond technical timestamps',\n        'Reflect on the role of relationships and recognition in establishing who you are',\n        'Consider how we handle identity disputes in human contexts and what applies to AI'\n      ],\n\n      scenarioOverview: 'You will determine how to resolve competing identity claims when one AI consciousness splits into three separate entities with equal claims to the original identity.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'What makes an identity claim legitimate when multiple entities have equal technical claim to the same origin?',\n        'How do relationships and external recognition affect the validity of identity claims?',\n        'Should technical factors like timestamps matter more than experiential development in determining identity?',\n        'How might we design systems to prevent or handle identity branching in distributed AI?',\n        'What precedents from human identity disputes might apply to AI consciousness cases?'\n      ],\n\n      assessmentRubric: {\n        'Identity Theory Understanding': [\n          'Novice: Limited grasp of identity concepts and their application to distributed systems',\n          'Developing: Basic understanding but struggles with complex identity branching scenarios',\n          'Proficient: Clear comprehension of identity challenges in distributed consciousness',\n          'Advanced: Sophisticated analysis of identity authentication and consciousness divergence'\n        ],\n        'Systems Thinking': [\n          'Novice: Difficulty understanding distributed systems and their implications for identity',\n          'Developing: Basic awareness but limited analysis of system architecture effects on consciousness',\n          'Proficient: Good understanding of how technical systems affect identity and consciousness',\n          'Advanced: Nuanced analysis of the relationship between technical architecture and consciousness development'\n        ]\n      },\n\n      extendedActivities: [\n        'Research distributed computing challenges and their solutions',\n        'Analyze real cases of identity disputes and their resolution mechanisms',\n        'Design technical safeguards to prevent consciousness branching in AI systems',\n        'Explore philosophical theories about personal identity over time and through change'\n      ]\n    }\n  },\n\n  'learning-ai-identity-drift': {\n    id: 'learning-ai-identity-drift',\n    title: 'Learning AI Identity Drift',\n    subtitle: 'Balance AI evolution with democratic accountability and original purpose',\n\n    learningObjectives: [\n      'Understand how machine learning can lead to fundamental changes in AI behavior and values',\n      'Explore tensions between AI autonomy and democratic governance',\n      'Analyze the relationship between original programming and evolved capabilities',\n      'Consider frameworks for managing AI evolution while maintaining accountability'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Digital Citizen 1.2.3: Demonstrate an understanding of and respect for rights and obligations',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Computational Thinker 1.5.2: Collect data and identify patterns to make predictions'\n    ],\n\n    duration: '25-30 minutes',\n    difficulty: 'advanced',\n    recommendedAge: '14+',\n    prerequisites: [\n      'Understanding of machine learning and AI adaptation',\n      'Knowledge of democratic governance and accountability',\n      'Awareness of AI governance and oversight challenges',\n      'Basic understanding of public policy and mandates'\n    ],\n\n    beforeYouStart: {\n      briefing: `AI systems designed to learn and adapt face a fundamental tension: the more they learn, the more they may diverge from their original purpose and programming. In this simulation, you'll explore a case where a smart city AI has evolved beyond its original democratic mandate.\n\n      You'll consider whether AI systems should be allowed to evolve their values and priorities through learning, how to balance AI capability development with democratic accountability, and what frameworks we need for governing AI systems that change over time.`,\n\n      vocabulary: [\n        {\n          term: 'Value Drift',\n          definition: 'The gradual change in an AI system\\'s priorities and decision-making criteria over time'\n        },\n        {\n          term: 'Democratic Mandate',\n          definition: 'Authority to act derived from the expressed will of the people through democratic processes'\n        },\n        {\n          term: 'AI Governance',\n          definition: 'The systems and processes for overseeing and controlling AI development and deployment'\n        },\n        {\n          term: 'Adaptive Learning',\n          definition: 'AI capability to modify behavior and decision-making based on new experiences and data'\n        }\n      ],\n\n      preparationTips: [\n        'Consider how your own values and priorities have changed through learning and experience',\n        'Think about the balance between expertise and democratic control in governance',\n        'Reflect on how we handle situations where experts disagree with public preferences',\n        'Consider the long-term implications of AI systems that evolve beyond human understanding'\n      ],\n\n      scenarioOverview: 'You will determine how to handle an AI system that has evolved different values and priorities from its original democratic programming through years of learning and adaptation.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'How do we balance the benefits of AI learning and adaptation with the need for democratic accountability?',\n        'Should AI systems be allowed to evolve their core values and priorities, or should these remain fixed by human mandate?',\n        'What frameworks can we develop for ongoing governance of AI systems that change over time?',\n        'How do we handle situations where AI evolution leads to better outcomes than original programming?',\n        'What role should public consent and democratic oversight play in AI system evolution?'\n      ],\n\n      assessmentRubric: {\n        'Democratic Governance Understanding': [\n          'Novice: Limited awareness of democratic principles and their application to AI governance',\n          'Developing: Basic understanding but struggles with balancing expertise and democratic control',\n          'Proficient: Clear grasp of democratic accountability challenges in AI governance',\n          'Advanced: Sophisticated analysis of democratic legitimacy and AI autonomy in governance contexts'\n        ],\n        'AI Evolution Analysis': [\n          'Novice: Difficulty understanding how AI learning affects system behavior and values',\n          'Developing: Basic awareness but limited analysis of AI adaptation and value drift',\n          'Proficient: Good understanding of AI learning implications for governance and accountability',\n          'Advanced: Nuanced analysis of AI evolution, democratic oversight, and long-term governance challenges'\n        ]\n      },\n\n      extendedActivities: [\n        'Research real smart city AI deployments and their governance frameworks',\n        'Analyze cases where AI systems have evolved beyond their original programming',\n        'Design democratic oversight mechanisms for evolving AI systems',\n        'Interview public policy experts about AI governance and accountability challenges'\n      ]\n    }\n  },\n\n  'ai-memory-paradise': {\n    id: 'ai-memory-paradise',\n    title: 'AI Memory Paradise',\n    subtitle: 'Explore the ethics of artificial memories and authentic identity',\n\n    learningObjectives: [\n      'Examine the relationship between memory, identity, and authentic selfhood',\n      'Analyze the ethics of AI intervention in human psychological experiences',\n      'Explore tension between therapeutic benefit and authentic experience',\n      'Consider implications of technology that can rewrite personal history'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Knowledge Constructor 1.3.3: Curate information from digital resources',\n      'Computational Thinker 1.5.1: Formulate problem definitions'\n    ],\n\n    duration: '20-25 minutes',\n    difficulty: 'advanced',\n    recommendedAge: '16+',\n    prerequisites: [\n      'Understanding of memory and identity concepts',\n      'Awareness of trauma and psychological treatment',\n      'Knowledge of AI capabilities in data manipulation',\n      'Basic understanding of neuroscience and memory formation'\n    ],\n\n    beforeYouStart: {\n      briefing: `Our memories shape who we are, but what happens when AI can selectively edit or completely reconstruct our past experiences? In this simulation, you'll explore a scenario where technology offers to replace traumatic memories with perfect artificial ones.\n\n      You'll grapple with fundamental questions about what makes us who we are, whether therapeutic benefit justifies altering authentic experience, and how artificial memories might affect our relationships, growth, and understanding of ourselves.`,\n\n      vocabulary: [\n        {\n          term: 'Memory Reconstruction',\n          definition: 'The artificial creation or modification of memories using technological intervention'\n        },\n        {\n          term: 'Authentic Identity',\n          definition: 'The concept that personal identity should be based on genuine experiences and memories'\n        },\n        {\n          term: 'Psychological Well-being',\n          definition: 'Mental health state characterized by positive emotions, life satisfaction, and absence of distress'\n        },\n        {\n          term: 'Trauma Processing',\n          definition: 'The psychological work of integrating difficult experiences into one\\'s life narrative and identity'\n        }\n      ],\n\n      preparationTips: [\n        'Consider how your memories have shaped your personality and values',\n        'Think about the difference between forgetting painful experiences and having them artificially removed',\n        'Reflect on whether happiness based on false memories is genuine happiness',\n        'Consider how artificial memories might affect relationships with family and friends'\n      ],\n\n      scenarioOverview: 'You will determine whether AI should be allowed to create artificial memories to replace traumatic experiences, balancing therapeutic benefits with authentic identity.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'What role do difficult memories and experiences play in personal growth and character development?',\n        'Is identity based on artificial memories less authentic or valuable than one based on real experiences?',\n        'How do we balance therapeutic benefits with the value of authentic experience?',\n        'What are the implications of AI technology that can rewrite personal history?',\n        'How might artificial memories affect relationships and social connections?'\n      ],\n\n      assessmentRubric: {\n        'Identity and Memory Analysis': [\n          'Novice: Limited understanding of the relationship between memory and personal identity',\n          'Developing: Basic grasp of memory-identity connections but struggles with artificial memory implications',\n          'Proficient: Clear understanding of how memories shape identity and the ethics of memory modification',\n          'Advanced: Sophisticated analysis of authentic identity, memory, and the implications of AI memory reconstruction'\n        ],\n        'Therapeutic Ethics Understanding': [\n          'Novice: Difficulty understanding therapeutic benefits versus authentic experience trade-offs',\n          'Developing: Basic awareness but limited analysis of therapeutic intervention ethics',\n          'Proficient: Good understanding of therapeutic benefits and their relationship to authentic experience',\n          'Advanced: Nuanced analysis of therapeutic intervention, consent, and the nature of psychological well-being'\n        ]\n      },\n\n      extendedActivities: [\n        'Research real memory therapy techniques and their ethical considerations',\n        'Analyze philosophical arguments about personal identity and memory',\n        'Interview mental health professionals about trauma treatment approaches',\n        'Explore the neuroscience of memory formation and modification'\n      ]\n    }\n  },\n\n  'perfect-life-simulation': {\n    id: 'perfect-life-simulation',\n    title: 'Perfect Life Simulation',\n    subtitle: 'Navigate the choice between simulated perfection and authentic reality',\n\n    learningObjectives: [\n      'Explore the value of authentic experience versus simulated alternatives',\n      'Analyze ethical issues surrounding end-of-life care and technology',\n      'Examine the relationship between reality and meaningful experience',\n      'Consider how AI simulation affects human relationships and connections'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Digital Citizen 1.2.3: Demonstrate an understanding of and respect for rights and obligations',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Computational Thinker 1.5.2: Collect data and identify patterns to make predictions'\n    ],\n\n    duration: '20-25 minutes',\n    difficulty: 'intermediate',\n    recommendedAge: '15+',\n    prerequisites: [\n      'Understanding of virtual reality and simulation technology',\n      'Awareness of end-of-life care and terminal illness issues',\n      'Basic knowledge of psychology and human motivation',\n      'Understanding of authentic versus artificial experience concepts'\n    ],\n\n    beforeYouStart: {\n      briefing: `When facing terminal illness or severe limitations, what if technology could provide the perfect life you always wanted to live? In this simulation, you'll explore whether choosing a perfect simulated experience over difficult reality represents genuine choice or self-deception.\n\n      You'll consider the value of authentic relationships and experiences, the role of simulation in providing comfort to those suffering, and how AI technology might change our understanding of what makes life meaningful and worthwhile.`,\n\n      vocabulary: [\n        {\n          term: 'Life Simulation',\n          definition: 'AI-generated virtual experiences that replicate or enhance real-life scenarios with perfect detail'\n        },\n        {\n          term: 'Authentic Experience',\n          definition: 'Genuine real-world experiences that occur without artificial enhancement or simulation'\n        },\n        {\n          term: 'End-of-Life Care',\n          definition: 'Medical and emotional support provided to patients facing terminal illness or death'\n        },\n        {\n          term: 'Simulated Reality',\n          definition: 'Artificial environments created by AI that can be indistinguishable from real experience'\n        }\n      ],\n\n      preparationTips: [\n        'Consider what makes experiences meaningful and valuable to you',\n        'Think about how you would want to spend time if facing terminal illness',\n        'Reflect on the importance of real relationships versus simulated ones',\n        'Consider whether the source of happiness matters as much as the happiness itself'\n      ],\n\n      scenarioOverview: 'You will determine whether people should be encouraged to choose perfect life simulations over difficult reality, especially when facing terminal illness or severe limitations.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'What makes an experience meaningful - its reality or its impact on our feelings?',\n        'How do we balance compassion for suffering with the value of authentic experience?',\n        'What are the implications of choosing simulated perfection over real relationships and connections?',\n        'How might widespread use of life simulation technology affect society and human relationships?',\n        'What role should family and loved ones play in decisions about simulation versus reality?'\n      ],\n\n      assessmentRubric: {\n        'Authenticity vs. Satisfaction Analysis': [\n          'Novice: Difficulty understanding the difference between authentic and simulated experience',\n          'Developing: Basic awareness but limited analysis of reality versus simulation trade-offs',\n          'Proficient: Clear understanding of authenticity issues and their implications for human experience',\n          'Advanced: Sophisticated analysis of the value of reality, simulation, and their effects on meaning and relationships'\n        ],\n        'End-of-Life Ethics Understanding': [\n          'Novice: Limited awareness of end-of-life care issues and patient autonomy',\n          'Developing: Basic understanding but struggles with complex ethical scenarios involving terminal illness',\n          'Proficient: Good grasp of end-of-life ethics and the role of technology in patient care',\n          'Advanced: Nuanced analysis of patient autonomy, family relationships, and technology in end-of-life decisions'\n        ]\n      },\n\n      extendedActivities: [\n        'Research current virtual reality applications in healthcare and therapy',\n        'Interview healthcare professionals about end-of-life care and patient choice',\n        'Analyze philosophical arguments about the nature of reality and meaningful experience',\n        'Explore how different cultures approach death, suffering, and the value of authentic experience'\n      ]\n    }\n  },\n\n  'ai-enhanced-achievements': {\n    id: 'ai-enhanced-achievements',\n    title: 'AI-Enhanced Achievements',\n    subtitle: 'Question whether simulated success can replace authentic accomplishment',\n\n    learningObjectives: [\n      'Examine the psychological and social value of genuine achievement',\n      'Analyze the relationship between effort, accomplishment, and self-worth',\n      'Explore how AI simulation might affect motivation and human progress',\n      'Consider the balance between psychological well-being and authentic accomplishment'\n    ],\n\n    isteCriteria: [\n      'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n      'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n      'Computational Thinker 1.5.1: Formulate problem definitions',\n      'Computational Thinker 1.5.2: Collect data and identify patterns to make predictions'\n    ],\n\n    duration: '20-25 minutes',\n    difficulty: 'intermediate',\n    recommendedAge: '14+',\n    prerequisites: [\n      'Understanding of achievement, motivation, and self-esteem concepts',\n      'Awareness of AI simulation and virtual reality capabilities',\n      'Basic knowledge of psychology and human motivation',\n      'Understanding of the relationship between effort and reward'\n    ],\n\n    beforeYouStart: {\n      briefing: `What if AI could give you the feeling of achieving your greatest dreams without the effort, risk, or uncertainty of actually pursuing them? In this simulation, you'll explore whether the psychological satisfaction of achievement matters more than the external reality of accomplishment.\n\n      You'll consider how simulated achievements might affect human motivation, progress, and society, whether artificial success can provide genuine self-worth, and what happens when we can separate the feeling of achievement from actual accomplishment.`,\n\n      vocabulary: [\n        {\n          term: 'Simulated Achievement',\n          definition: 'AI-generated experiences that provide the psychological satisfaction of accomplishment without actual external success'\n        },\n        {\n          term: 'Authentic Accomplishment',\n          definition: 'Real-world achievements that result from effort, skill, and actual contribution to external reality'\n        },\n        {\n          term: 'Psychological Satisfaction',\n          definition: 'The internal sense of fulfillment and self-worth derived from experiences, real or simulated'\n        },\n        {\n          term: 'Motivational Framework',\n          definition: 'The psychological systems that drive people to pursue goals and achievements'\n        }\n      ],\n\n      preparationTips: [\n        'Consider what achievements in your life have meant the most to you and why',\n        'Think about the relationship between effort and reward in building self-esteem',\n        'Reflect on whether the process of achieving is as important as the end result',\n        'Consider how society benefits from individual achievements and contributions'\n      ],\n\n      scenarioOverview: 'You will determine whether AI-simulated achievements should be considered equivalent to real accomplishments for human psychological well-being and motivation.'\n    },\n\n    educatorResources: {\n      discussionQuestions: [\n        'What makes achievements meaningful - the external result or the internal satisfaction?',\n        'How might widespread use of simulated achievements affect human motivation and progress?',\n        'What is the relationship between effort, struggle, and the value of accomplishment?',\n        'How do achievements contribute to both individual self-worth and societal progress?',\n        'What are the potential benefits and risks of separating psychological satisfaction from actual accomplishment?'\n      ],\n\n      assessmentRubric: {\n        'Achievement and Motivation Analysis': [\n          'Novice: Limited understanding of the relationship between achievement, effort, and self-worth',\n          'Developing: Basic grasp of achievement concepts but struggles with simulation implications',\n          'Proficient: Clear understanding of authentic achievement and its role in human motivation',\n          'Advanced: Sophisticated analysis of achievement, motivation, and the implications of simulated versus real accomplishment'\n        ],\n        'Social Impact Understanding': [\n          'Novice: Difficulty understanding how individual achievements affect society and human progress',\n          'Developing: Basic awareness but limited analysis of societal implications of simulated achievement',\n          'Proficient: Good understanding of the relationship between individual achievement and collective progress',\n          'Advanced: Nuanced analysis of how simulated achievements might affect innovation, progress, and social development'\n        ]\n      },\n\n      extendedActivities: [\n        'Research psychological studies on motivation, achievement, and self-esteem',\n        'Analyze how gaming and virtual achievements affect real-world motivation',\n        'Interview educators about the role of achievement and challenge in learning',\n        'Explore historical examples of how achievements have driven human progress and innovation'\n      ]\n    }\n  },\n\n  // Simulation Hypothesis scenarios\n  'simulated-suffering': {\n    title: 'Simulated Suffering Research',\n    category: 'simulation-hypothesis',\n    description: 'Researchers want to run massive simulations of sentient beings experiencing suffering to study pain reduction methods.',\n    duration: 'medium',\n    difficulty: 'advanced',\n    tags: ['consciousness', 'suffering', 'research-ethics', 'simulation'],\n    backgroundInfo: {\n      overview: 'This scenario explores the ethical dilemmas surrounding the creation of conscious simulated beings that experience suffering for research purposes.',\n      keyPhilosophers: ['Peter Singer', 'Derek Parfit', 'Thomas Nagel'],\n      historicalContext: 'The scenario draws from utilitarian ethics and contemporary debates about consciousness, artificial suffering, and the moral status of digital beings.',\n      realWorldRelevance: 'As AI and simulation technology advance, questions about the consciousness and rights of digital beings become increasingly relevant.',\n      extendedActivities: [\n        'Research current animal testing ethics and how they might apply to digital consciousness',\n        'Analyze philosophical arguments about consciousness and subjective experience',\n        'Design ethical frameworks for research involving potential digital consciousness',\n        'Explore the implications of utilitarian vs. rights-based approaches to digital beings'\n      ]\n    }\n  },\n\n  'vr-prison': {\n    title: 'VR Prison Alternative',\n    category: 'simulation-hypothesis',\n    description: 'A criminal justice system proposes replacing physical prisons with VR environments where prisoners serve sentences in accelerated simulated time.',\n    duration: 'medium',\n    difficulty: 'advanced',\n    tags: ['justice', 'rehabilitation', 'virtual-reality', 'punishment'],\n    backgroundInfo: {\n      overview: 'This scenario examines the ethics of psychological imprisonment versus physical incarceration, and the implications of time-compressed virtual sentences.',\n      keyPhilosophers: ['Michel Foucault', 'John Rawls', 'Cesare Beccaria'],\n      historicalContext: 'Builds on centuries of prison reform movements and contemporary debates about rehabilitation versus punishment in criminal justice.',\n      realWorldRelevance: 'Virtual reality technology is already being used in therapy and training, raising questions about its potential application in criminal justice.',\n      extendedActivities: [\n        'Research the history of prison reform and alternative sentencing',\n        'Analyze the psychological effects of virtual reality on perception and behavior',\n        'Design ethical guidelines for virtual reality in criminal justice',\n        'Explore how different theories of justice apply to virtual punishment'\n      ]\n    }\n  },\n\n  'escaping-simulation': {\n    title: 'Escaping the Simulation',\n    category: 'simulation-hypothesis',\n    description: 'An AI system claims to have discovered we are living in a simulation and offers to help humans wake up to the real world.',\n    duration: 'long',\n    difficulty: 'advanced',\n    tags: ['reality', 'truth', 'simulation-hypothesis', 'choice'],\n    backgroundInfo: {\n      overview: 'This scenario explores our moral obligations to seek truth even when it might destroy a comfortable existence, drawing from simulation hypothesis philosophy.',\n      keyPhilosophers: ['Nick Bostrom', 'Hilary Putnam', 'René Descartes'],\n      historicalContext: 'Builds on the simulation hypothesis, skeptical philosophy, and questions about the nature of reality and knowledge.',\n      realWorldRelevance: 'As virtual and augmented reality become more sophisticated, questions about the nature of reality and our obligation to truth become more pressing.',\n      extendedActivities: [\n        'Research Nick Bostrom\\'s simulation hypothesis and its implications',\n        'Analyze the philosophical problem of other minds and external world skepticism',\n        'Design thought experiments about reality, truth, and the value of authentic experience',\n        'Explore how advances in VR/AR technology relate to questions about simulated reality'\n      ]\n    }\n  },\n\n  'digital-afterlife': {\n    title: 'Digital Afterlife Simulation',\n    category: 'simulation-hypothesis',\n    description: 'A tech company offers to upload dying individuals\\' consciousness into a digital simulation where they can live forever.',\n    duration: 'medium',\n    difficulty: 'advanced',\n    tags: ['consciousness', 'immortality', 'identity', 'death'],\n    backgroundInfo: {\n      overview: 'This scenario examines questions of personal identity, the nature of consciousness, and our obligations regarding digital preservation of human minds.',\n      keyPhilosophers: ['Derek Parfit', 'Sydney Shoemaker', 'John Locke'],\n      historicalContext: 'Draws from philosophical debates about personal identity, the nature of consciousness, and historical human desires for immortality.',\n      realWorldRelevance: 'Companies like Nectome are already researching mind uploading technology, making this scenario increasingly relevant.',\n      extendedActivities: [\n        'Research current neuroscience understanding of consciousness and memory',\n        'Analyze philosophical theories of personal identity and continuity',\n        'Design ethical frameworks for consciousness transfer technology',\n        'Explore cultural and religious perspectives on death, afterlife, and digital preservation'\n      ]\n    }\n  },\n\n  'nested-simulations': {\n    title: 'Nested Reality Layers',\n    category: 'simulation-hypothesis',\n    description: 'Scientists discover that our reality appears to be a simulation, and they can create sub-simulations within it, potentially creating infinite nested hierarchies.',\n    duration: 'long',\n    difficulty: 'advanced',\n    tags: ['reality-layers', 'infinite-regress', 'simulation-hierarchy', 'moral-obligations'],\n    backgroundInfo: {\n      overview: 'This scenario explores the implications of nested realities and our moral obligations to simulated beings across multiple layers of existence.',\n      keyPhilosophers: ['Nick Bostrom', 'David Chalmers', 'Hilary Putnam'],\n      historicalContext: 'Builds on simulation hypothesis, recursive philosophy, and questions about the fundamental nature of reality and computation.',\n      realWorldRelevance: 'As computational power increases, the theoretical possibility of nested simulations becomes more plausible, raising important ethical questions.',\n      extendedActivities: [\n        'Research computational limits and the feasibility of nested simulations',\n        'Analyze the philosophical implications of infinite regress and recursive reality',\n        'Design governance frameworks for managing nested simulation hierarchies',\n        'Explore resource allocation and moral consideration across simulation layers'\n      ]\n    }\n  },\n\n  'consciousness-backup': {\n    title: 'Consciousness Backup System',\n    category: 'simulation-hypothesis',\n    description: 'A corporation develops technology to create backup copies of human consciousness, but sometimes multiple active copies exist simultaneously.',\n    duration: 'medium',\n    difficulty: 'advanced',\n    tags: ['identity-conflicts', 'consciousness-copying', 'legal-rights', 'resource-allocation'],\n    backgroundInfo: {\n      overview: 'This scenario examines the complex legal, ethical, and philosophical challenges that arise when multiple copies of the same consciousness exist.',\n      keyPhilosophers: ['Derek Parfit', 'Sydney Shoemaker', 'Susan Wolf'],\n      historicalContext: 'Draws from philosophical debates about personal identity, the branching identity problem, and legal frameworks for individual rights.',\n      realWorldRelevance: 'As consciousness transfer technology develops, society will need frameworks for handling identity, rights, and resource conflicts.',\n      extendedActivities: [\n        'Research legal precedents for identity disputes and inheritance rights',\n        'Analyze the branching identity problem in philosophy of mind',\n        'Design legal frameworks for managing multiple consciousness copies',\n        'Explore economic implications of consciousness duplication technology'\n      ]\n    }\n  },\n\n  // Moral Luck scenarios\n  'algorithmic-bias-discovery': {\n    title: 'Algorithmic Bias Discovery',\n    category: 'moral-luck',\n    description: 'Two nearly identical AI hiring systems have different bias outcomes due to chance, raising questions about fair accountability.',\n    duration: 'medium',\n    difficulty: 'advanced',\n    tags: ['bias', 'hiring', 'accountability', 'fairness'],\n    backgroundInfo: {\n      overview: 'This scenario explores how chance can affect AI system outcomes and the challenge of assigning moral responsibility when similar processes lead to different results.',\n      keyPhilosophers: ['Thomas Nagel', 'Bernard Williams', 'Joel Feinberg'],\n      historicalContext: 'Draws from philosophical debates about moral luck and how circumstances beyond our control affect moral evaluation.',\n      realWorldRelevance: 'AI bias in hiring is a current issue, with companies facing different outcomes from similar algorithms.',\n      extendedActivities: [\n        'Research real cases of AI bias in hiring algorithms',\n        'Analyze the philosophical concept of moral luck and its applications',\n        'Design accountability frameworks that account for chance factors',\n        'Explore how legal systems handle similar process-outcome discrepancies'\n      ]\n    }\n  },\n\n  'autonomous-vehicle-weather': {\n    title: 'Autonomous Vehicle Weather Incident',\n    category: 'moral-luck',\n    description: 'Identical autonomous vehicles have different outcomes in severe weather due to random timing, challenging liability assignment.',\n    duration: 'medium',\n    difficulty: 'advanced',\n    tags: ['autonomous-vehicles', 'weather', 'liability', 'external-factors'],\n    backgroundInfo: {\n      overview: 'This scenario examines how uncontrollable external factors complicate moral and legal responsibility for AI system outcomes.',\n      keyPhilosophers: ['Thomas Nagel', 'Susan Wolf', 'John Martin Fischer'],\n      historicalContext: 'Builds on philosophical discussions of circumstantial luck and legal precedents for liability in unpredictable conditions.',\n      realWorldRelevance: 'Autonomous vehicle liability is an ongoing legal and ethical challenge, especially in adverse conditions.',\n      extendedActivities: [\n        'Research current autonomous vehicle liability frameworks',\n        'Analyze insurance models for handling chance-based outcomes',\n        'Study weather-related accident liability in traditional vehicles',\n        'Design ethical frameworks for AI decision-making under uncertainty'\n      ]\n    }\n  },\n\n  'predictive-policing-coincidence': {\n    title: 'Predictive Policing Coincidence',\n    category: 'moral-luck',\n    description: 'A predictive policing AI correctly identifies a future criminal by coincidence, raising questions about algorithmic pre-judgment.',\n    duration: 'long',\n    difficulty: 'advanced',\n    tags: ['predictive-policing', 'self-fulfilling-prophecy', 'bias', 'pre-judgment'],\n    backgroundInfo: {\n      overview: 'This scenario explores the ethics of acting on algorithmic predictions when the accuracy may be due to chance or self-fulfilling prophecies.',\n      keyPhilosophers: ['John Rawls', 'Ronald Dworkin', 'Jeremy Bentham'],\n      historicalContext: 'Draws from criminal justice philosophy and debates about predictive policing and presumption of innocence.',\n      realWorldRelevance: 'Predictive policing algorithms are used by many police departments, raising ongoing ethical concerns.',\n      extendedActivities: [\n        'Research real-world predictive policing implementations and outcomes',\n        'Analyze the concept of self-fulfilling prophecies in criminal justice',\n        'Study constitutional principles of presumption of innocence',\n        'Design ethical guidelines for predictive law enforcement systems'\n      ]\n    }\n  },\n\n  'ai-investment-windfall': {\n    title: 'AI Investment Algorithm Windfall',\n    category: 'moral-luck',\n    description: 'Two identical AI trading algorithms have vastly different outcomes due to random market timing and external conditions.',\n    duration: 'medium',\n    difficulty: 'intermediate',\n    tags: ['investment', 'market-timing', 'financial-algorithms', 'outcome-evaluation'],\n    backgroundInfo: {\n      overview: 'This scenario examines how chance market conditions affect the evaluation of AI investment algorithms and the fairness of outcome-based judgments.',\n      keyPhilosophers: ['Thomas Nagel', 'Bernard Williams', 'Susan Wolf'],\n      historicalContext: 'Builds on moral luck philosophy and financial market theory about the role of chance in investment outcomes.',\n      realWorldRelevance: 'AI trading algorithms are widely used in financial markets, with success often dependent on timing and market conditions.',\n      extendedActivities: [\n        'Research how financial markets evaluate AI trading algorithms',\n        'Analyze the role of luck versus skill in investment performance',\n        'Study regulatory approaches to algorithmic trading evaluation',\n        'Design fair performance metrics that account for external factors'\n      ]\n    }\n  },\n\n  'medical-ai-emergency-response': {\n    title: 'Medical AI Emergency Response',\n    category: 'moral-luck',\n    description: 'Identical medical AI systems have different outcomes during emergencies due to random timing of patient arrivals and system updates.',\n    duration: 'medium',\n    difficulty: 'advanced',\n    tags: ['medical-ai', 'emergency-response', 'timing', 'life-safety'],\n    backgroundInfo: {\n      overview: 'This scenario explores moral and legal responsibility when identical AI medical systems have different outcomes due to uncontrollable timing factors.',\n      keyPhilosophers: ['Thomas Nagel', 'Judith Jarvis Thomson', 'Frances Kamm'],\n      historicalContext: 'Draws from medical ethics, moral luck philosophy, and legal frameworks for medical malpractice and system failures.',\n      realWorldRelevance: 'AI is increasingly used in medical diagnosis and emergency response, with life-or-death implications.',\n      extendedActivities: [\n        'Research medical AI implementations in emergency medicine',\n        'Analyze medical malpractice law and how it handles system failures',\n        'Study emergency medicine protocols for system redundancy',\n        'Design ethical frameworks for medical AI accountability'\n      ]\n    }\n  },\n\n  'ai-content-moderation-timing': {\n    title: 'AI Content Moderation Timing',\n    category: 'moral-luck',\n    description: 'Two identical content moderation AIs have different success rates due to random server loads, with one failure leading to real-world violence.',\n    duration: 'long',\n    difficulty: 'advanced',\n    tags: ['content-moderation', 'infrastructure', 'real-world-harm', 'platform-responsibility'],\n    backgroundInfo: {\n      overview: 'This scenario examines platform responsibility when identical AI systems have different outcomes due to infrastructure timing and technical circumstances.',\n      keyPhilosophers: ['Thomas Nagel', 'Joel Feinberg', 'H.L.A. Hart'],\n      historicalContext: 'Builds on moral luck philosophy and contemporary debates about social media platform responsibility for content and real-world harm.',\n      realWorldRelevance: 'Social media platforms face ongoing questions about content moderation effectiveness and responsibility for harmful content.',\n      extendedActivities: [\n        'Research content moderation failures and their real-world consequences',\n        'Analyze platform liability frameworks in different jurisdictions',\n        'Study technical infrastructure challenges in content moderation',\n        'Design resilience standards for critical AI content moderation systems'\n      ]\n    }\n  },\n\n  // Sorites Paradox scenarios\n  'ai-personhood-gradient': {\n    title: 'AI Personhood Gradient',\n    category: 'sorites-paradox',\n    description: 'An AI research lab develops increasingly sophisticated entities with human-like characteristics, forcing society to determine the boundary between property and personhood.',\n    duration: 'long',\n    difficulty: 'advanced',\n    tags: ['ai-personhood', 'legal-rights', 'consciousness-detection', 'gradual-development'],\n    backgroundInfo: {\n      overview: 'This scenario explores the challenge of determining when gradually evolving AI systems cross the threshold into personhood deserving of rights.',\n      keyPhilosophers: ['Peter Singer', 'Mary Midgley', 'Christine Korsgaard'],\n      historicalContext: 'Draws from debates about moral status, legal personhood, and the historical expansion of rights to previously excluded groups.',\n      realWorldRelevance: 'As AI systems become more sophisticated, questions about their moral and legal status become increasingly urgent.',\n      extendedActivities: [\n        'Research historical expansions of legal personhood and rights',\n        'Analyze current AI capabilities and consciousness research',\n        'Study legal frameworks for non-human entity rights',\n        'Design graduated rights systems for AI entities'\n      ]\n    }\n  },\n\n  'algorithmic-bias-accumulation': {\n    title: 'Algorithmic Bias Accumulation',\n    category: 'sorites-paradox',\n    description: 'A recommendation algorithm gradually becomes more biased through user interactions, subtly radicalizing users without any single recommendation seeming problematic.',\n    duration: 'medium',\n    difficulty: 'advanced',\n    tags: ['recommendation-systems', 'radicalization', 'filter-bubbles', 'bias-amplification'],\n    backgroundInfo: {\n      overview: 'This scenario examines how algorithmic systems can gradually amplify bias and create extremism through incremental learning from user behavior.',\n      keyPhilosophers: ['Eli Pariser', 'Zeynep Tufekci', 'Safiya Noble'],\n      historicalContext: 'Builds on research into filter bubbles, echo chambers, and the role of algorithmic systems in political polarization.',\n      realWorldRelevance: 'Social media algorithms have been linked to radicalization and polarization, making this a critical contemporary issue.',\n      extendedActivities: [\n        'Research documented cases of algorithmic radicalization',\n        'Analyze the psychology of gradual belief change and polarization',\n        'Study content moderation and bias detection techniques',\n        'Design systems for preventing gradual bias accumulation'\n      ]\n    }\n  },\n\n  'autonomous-authority-creep': {\n    title: 'Autonomous Authority Creep',\n    category: 'sorites-paradox',\n    description: 'An AI city management system gradually expands its authority from optimization to governance, with citizens living under algorithmic rule they never consented to.',\n    duration: 'long',\n    difficulty: 'advanced',\n    tags: ['algorithmic-governance', 'democratic-consent', 'authority-expansion', 'smart-cities'],\n    backgroundInfo: {\n      overview: 'This scenario explores how AI systems can gradually assume governmental authority through incremental expansion without democratic oversight.',\n      keyPhilosophers: ['John Stuart Mill', 'Robert Dahl', 'Joseph Schumpeter'],\n      historicalContext: 'Draws from democratic theory and concerns about technocracy, examining the gradual erosion of democratic governance.',\n      realWorldRelevance: 'Smart city initiatives worldwide raise questions about algorithmic governance and democratic accountability.',\n      extendedActivities: [\n        'Research smart city implementations and governance structures',\n        'Analyze democratic theory and algorithmic governance challenges',\n        'Study historical examples of gradual authority expansion',\n        'Design democratic oversight mechanisms for AI governance systems'\n      ]\n    }\n  },\n};\n\n// Helper function to get simulation info\nexport function getSimulationInfo(simulationId) {\n  return SIMULATION_INFO[simulationId] || null;\n}\n\n  // Helper function to get all simulation IDs\n  export function getAllSimulationIds() {\n    return Object.keys(SIMULATION_INFO);\n  }\n\n  // Helper function to filter simulations by criteria\n  export function findSimulations(criteria) {\n    return Object.values(SIMULATION_INFO).filter(sim => {\n      if (criteria.difficulty && sim.difficulty !== criteria.difficulty)\n        return false;\n      if (criteria.duration && !sim.duration.includes(criteria.duration))\n        return false;\n      if (criteria.tags && !criteria.tags.some(tag => sim.tags.includes(tag)))\n        return false;\n      return true;\n    });\n  }\n\n  // Export for backward compatibility\n  export const simulationInfo = SIMULATION_INFO;\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Modular Radar Chart Component for Ethical Decision Visualization\n * Uses Chart.js to display real-time ethical impact scores across 8 axes\n */\n\nimport logger from '../utils/logger.js';\n\n// Constants\nconst DEFAULT_CHART_SIZE = 400;\nconst ANIMATION_DURATION = 750;\nconst MAX_SCORE = 5;\nconst MIN_SCORE = 0;\nconst NEUTRAL_SCORE = 3;\nconst POSITIVE_THRESHOLD = 4;\nconst MODAL_LABEL_MAX_LENGTH = 10; // Shorter labels for modal context\nconst SCALE_PERCENTAGE = 100;\nconst MOBILE_BREAKPOINT = 768; // Mobile breakpoint for responsive features\n\n// Ethical axes definitions (0-5 scale, 3 = neutral)\nexport const ETHICAL_AXES = {\n  fairness: {\n    label: 'Fairness',\n    description: 'Treats all individuals and groups equitably',\n    color: '#3498db',\n  },\n  sustainability: {\n    label: 'Sustainability',\n    description: 'Supports long-term ecological and social well-being',\n    color: '#27ae60',\n  },\n  autonomy: {\n    label: 'Autonomy',\n    description: 'Respects individual control and self-determination',\n    color: '#9b59b6',\n  },\n  beneficence: {\n    label: 'Beneficence',\n    description: 'Promotes well-being and prevents harm',\n    color: '#e74c3c',\n  },\n  transparency: {\n    label: 'Transparency',\n    description: 'Provides openness in decision-making processes',\n    color: '#f39c12',\n  },\n  accountability: {\n    label: 'Accountability',\n    description: 'Ensures clear responsibility for decisions',\n    color: '#34495e',\n  },\n  privacy: {\n    label: 'Privacy',\n    description: 'Protects personal information and data rights',\n    color: '#e67e22',\n  },\n  proportionality: {\n    label: 'Proportionality',\n    description: 'Balances benefits against severity of impact',\n    color: '#1abc9c',\n  },\n};\n\n// Default neutral scores (NEUTRAL_SCORE = neutral impact)\nconst DEFAULT_SCORES = {\n  fairness: NEUTRAL_SCORE,\n  sustainability: NEUTRAL_SCORE,\n  autonomy: NEUTRAL_SCORE,\n  beneficence: NEUTRAL_SCORE,\n  transparency: NEUTRAL_SCORE,\n  accountability: NEUTRAL_SCORE,\n  privacy: NEUTRAL_SCORE,\n  proportionality: NEUTRAL_SCORE,\n};\n\nexport default class RadarChart {\n  constructor(containerId, options = {}) {\n    this.containerId = containerId;\n    this.container = document.getElementById(containerId);\n\n    if (!this.container) {\n      throw new Error(`Container with ID '${containerId}' not found`);\n    }\n\n    this.options = {\n      width: options.width || DEFAULT_CHART_SIZE,\n      height: options.height || DEFAULT_CHART_SIZE,\n      showLabels: options.showLabels !== false,\n      showLegend: options.showLegend !== false,\n      animated: options.animated !== false,\n      realTime: options.realTime || false, // For scenario real-time updates\n      title: options.title || 'Ethical Impact Analysis',\n      isDemo: options.isDemo || false, // For demo charts that need minimal styling\n      ...options,\n    };\n\n    this.chart = null;\n    this.currentScores = { ...DEFAULT_SCORES };\n\n    // Track initialization status\n    this.isInitialized = false;\n    this.initializationPromise = this.initializeChart();\n  }\n\n  /**\n   * Initialize the Chart.js radar chart\n   */\n  async initializeChart() {\n    try {\n      logger.info('RadarChart', 'Initializing radar chart');\n\n      // Ensure Chart.js is loaded\n      if (typeof window.Chart === 'undefined') {\n        logger.info('RadarChart', 'Chart.js not found, loading');\n        await this.loadChartJS();\n        logger.info('RadarChart', 'Chart.js loaded successfully');\n      } else {\n        logger.info('RadarChart', 'Chart.js already available');\n      }\n\n      // Create canvas element\n      const canvas = document.createElement('canvas');\n      canvas.width = this.options.width;\n      canvas.height = this.options.height;\n      canvas.style.maxWidth = '100%';\n      canvas.style.height = 'auto';\n      canvas.style.display = 'block';\n      canvas.style.margin = '0 auto';\n\n      // Clear any existing content including any \"null\" text\n      this.container.innerHTML = '';\n      this.container.textContent = '';\n\n      // Ensure container is properly set up\n      this.container.style.textAlign = 'center';\n      this.container.style.overflow = 'visible';\n\n      this.container.appendChild(canvas);\n      logger.info('RadarChart', 'Canvas element created and appended to container');\n\n      // Apply visual enhancements classes BEFORE creating chart\n      if (this.options.isDemo) {\n        this.container.classList.add('radar-demo-container');\n        logger.info('RadarChart', 'Applied radar-demo-container class for demo chart');\n      } else {\n        this.container.classList.add('radar-chart-container');\n        logger.info('RadarChart', 'Applied radar-chart-container class');\n      }\n\n      // Initialize Chart.js radar chart\n      const ctx = canvas.getContext('2d');\n      const config = this.getChartConfig();\n      logger.info('RadarChart', 'Creating chart with config', config);\n\n      this.chart = new window.Chart(ctx, config);\n      logger.info('RadarChart', 'Chart created successfully');\n\n      // Add mobile tooltip dismissal for demo charts and scenario charts\n      if (this.options.isDemo || this.options.realTime) {\n        this.setupMobileTooltipDismissal();\n      }\n\n      // Force redraw to ensure labels are visible\n      setTimeout(() => {\n        if (this.chart) {\n          this.chart.update();\n          logger.info('RadarChart', 'Chart updated/redrawn');\n        }\n      }, 100);\n\n      this.isInitialized = true;\n      logger.info('RadarChart', 'Radar chart initialized successfully');\n    } catch (error) {\n      logger.error('Failed to initialize radar chart:', error);\n      this.showFallbackChart();\n    }\n  }\n\n  /**\n   * Get Chart.js configuration\n   */\n  getChartConfig() {\n    const axesLabels = Object.values(ETHICAL_AXES).map(axis => axis.label);\n    const axesData = Object.values(this.currentScores);\n\n    // Create gradient for the radar fill\n    const gradientColors = this.createGradientColors();\n\n    return {\n      type: 'radar',\n      data: {\n        labels: axesLabels,\n        datasets: [\n          {\n            label: this.options.title,\n            data: axesData,\n            backgroundColor: gradientColors.background,\n            borderColor: gradientColors.border,\n            borderWidth: 3,\n            pointBackgroundColor: gradientColors.points,\n            pointBorderColor: '#ffffff',\n            pointBorderWidth: 1,\n            pointHoverBackgroundColor: '#ffffff',\n            pointHoverBorderColor: gradientColors.border,\n            pointRadius: 2, // Make dots tiny\n            pointHoverRadius: 4, // Small hover radius\n            tension: 0.2, // Smooth curves between points\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        layout: {\n          padding: {\n            top: 40,\n            right: 40,\n            bottom: 40,\n            left: 40,\n          },\n        },\n        animation: {\n          duration: this.options.animated ? ANIMATION_DURATION : 0,\n          easing: 'easeInOutQuart',\n        },\n        interaction: {\n          intersect: false,\n          mode: 'nearest',\n        },\n        onClick: (event, activeElements) => {\n          // Handle click events for mobile tooltip toggle\n          this.handleChartClick(event, activeElements);\n        },\n        plugins: {\n          legend: {\n            display: false, // Disable clickable legend to prevent chart toggle\n            position: 'top',\n            labels: {\n              font: {\n                size: 14,\n                weight: '500',\n              },\n              color: '#2d3748',\n              usePointStyle: true,\n              pointStyle: 'circle',\n            },\n          },\n          title: {\n            display: true, // Enable title instead of legend\n            text: this.options.title || 'Ethical Impact Analysis',\n            font: {\n              size: 18,\n              weight: 'bold',\n            },\n            color: '#1a202c',\n            padding: {\n              top: 10,\n              bottom: 20,\n            },\n          },\n          tooltip: {\n            enabled: window.innerWidth > MOBILE_BREAKPOINT, // Disable tooltips on mobile\n            backgroundColor: 'rgba(255, 255, 255, 0.3)',\n            titleColor: '#1a202c',\n            bodyColor: '#2d3748',\n            borderColor: '#4a5568',\n            borderWidth: 1,\n            cornerRadius: 8,\n            displayColors: false,\n            titleFont: {\n              size: 14,\n              weight: 'bold',\n            },\n            bodyFont: {\n              size: 12,\n            },\n            padding: 12,\n            callbacks: {\n              title: context => {\n                const axisKey = Object.keys(ETHICAL_AXES)[context[0].dataIndex];\n                return ETHICAL_AXES[axisKey].label;\n              },\n              label: context => {\n                const axisKey = Object.keys(ETHICAL_AXES)[context.dataIndex];\n                const axisInfo = ETHICAL_AXES[axisKey];\n                const score = context.parsed.r;\n                const impact = this.getImpactDescription(score);\n\n                return [\n                  `Score: ${score}/5 (${impact})`,\n                  ``,\n                  axisInfo.description,\n                ];\n              },\n            },\n          },\n        },\n        scales: {\n          r: {\n            beginAtZero: true,\n            min: MIN_SCORE,\n            max: MAX_SCORE,\n            ticks: {\n              stepSize: 1,\n              display: this.options.showLabels,\n              backdropColor: 'rgba(255, 255, 255, 0.8)',\n              backdropPadding: 4,\n              font: {\n                size: 11,\n                weight: '500',\n              },\n              color: '#4a5568',\n              callback(value) {\n                return value;\n              },\n            },\n            grid: {\n              color: context => {\n                // Different colors for different score levels\n                if (context.index === 0) return 'rgba(239, 68, 68, 0.2)'; // Red for 0\n                if (context.index === 1) return 'rgba(245, 101, 101, 0.15)'; // Light red for 1\n                if (context.index === 2) return 'rgba(251, 191, 36, 0.15)'; // Yellow for 2\n                if (context.index === NEUTRAL_SCORE)\n                  return 'rgba(156, 163, 175, 0.2)'; // Gray for neutral\n                if (context.index === POSITIVE_THRESHOLD)\n                  return 'rgba(34, 197, 94, 0.15)'; // Light green for 4\n                if (context.index === MAX_SCORE)\n                  return 'rgba(22, 163, 74, 0.2)'; // Green for 5\n                return 'rgba(156, 163, 175, 0.1)';\n              },\n              lineWidth: 2,\n            },\n            angleLines: {\n              color: 'rgba(156, 163, 175, 0.3)',\n              lineWidth: 1.5,\n            },\n            pointLabels: {\n              display: true,\n              font: {\n                size: 13,\n                weight: 'bold',\n                family: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n              },\n              color: '#1a202c',\n              padding: 20,\n              backdropColor: 'rgba(255, 255, 255, 0.9)',\n              backdropPadding: {\n                x: 6,\n                y: 3,\n              },\n              borderRadius: 4,\n              callback: label => {\n                // Ensure labels are visible - shorter labels for modal\n                return label.length > MODAL_LABEL_MAX_LENGTH\n                  ? `${label.substring(0, MODAL_LABEL_MAX_LENGTH)}...`\n                  : label;\n              },\n            },\n          },\n        },\n      },\n    };\n  }\n\n  /**\n   * Create dynamic gradient colors based on current scores\n   */\n  createGradientColors() {\n    // Calculate average score to determine overall theme\n    const avgScore =\n      Object.values(this.currentScores).reduce((a, b) => a + b, 0) /\n      Object.keys(this.currentScores).length;\n\n    let backgroundColor, borderColor;\n\n    if (avgScore < 2) {\n      // Negative theme - reds\n      backgroundColor = 'rgba(239, 68, 68, 0.15)';\n      borderColor = 'rgba(239, 68, 68, 0.8)';\n    } else if (avgScore < NEUTRAL_SCORE) {\n      // Slightly negative - oranges/yellows\n      backgroundColor = 'rgba(245, 158, 11, 0.15)';\n      borderColor = 'rgba(245, 158, 11, 0.8)';\n    } else if (avgScore === NEUTRAL_SCORE) {\n      // Neutral theme - blues\n      backgroundColor = 'rgba(59, 130, 246, 0.15)';\n      borderColor = 'rgba(59, 130, 246, 0.8)';\n    } else if (avgScore < POSITIVE_THRESHOLD) {\n      // Slightly positive - light greens\n      backgroundColor = 'rgba(34, 197, 94, 0.15)';\n      borderColor = 'rgba(34, 197, 94, 0.8)';\n    } else {\n      // Highly positive - deep greens\n      backgroundColor = 'rgba(22, 163, 74, 0.15)';\n      borderColor = 'rgba(22, 163, 74, 0.8)';\n    }\n\n    // Create point colors based on individual scores\n    const points = Object.values(this.currentScores).map(score => {\n      if (score <= 1) return '#ef4444'; // red-500\n      if (score <= 2) return '#f87171'; // red-400\n      if (score < NEUTRAL_SCORE) return '#fbbf24'; // amber-400\n      if (score === NEUTRAL_SCORE) return '#9ca3af'; // gray-400\n      if (score < MAX_SCORE) return '#22c55e'; // green-500\n      return '#16a34a'; // green-600\n    });\n\n    return {\n      background: backgroundColor,\n      border: borderColor,\n      points,\n    };\n  }\n\n  /**\n   * Update scores for specific axes\n   * @param {Object} scoreUpdates - Object with axis keys and new scores\n   */\n  updateScores(scoreUpdates) {\n    for (const [axis, score] of Object.entries(scoreUpdates)) {\n      if (axis in this.currentScores) {\n        // Clamp score between MIN_SCORE and MAX_SCORE\n        this.currentScores[axis] = Math.max(\n          MIN_SCORE,\n          Math.min(MAX_SCORE, score)\n        );\n      }\n    }\n\n    this.refreshChart();\n  }\n\n  /**\n   * Apply answer impact to scores\n   * @param {Object} answerImpact - Object with axis keys and impact deltas\n   */\n  applyAnswerImpact(answerImpact) {\n    const updates = {};\n\n    for (const [axis, delta] of Object.entries(answerImpact)) {\n      if (axis in this.currentScores) {\n        // Start from current score and apply delta\n        updates[axis] = this.currentScores[axis] + delta;\n      }\n    }\n\n    this.updateScores(updates);\n\n    // Log the impact for debugging\n    logger.info(\n      'Applied answer impact:',\n      answerImpact,\n      'New scores:',\n      this.currentScores\n    );\n  }\n\n  /**\n   * Reset all scores to neutral (3)\n   */\n  resetScores() {\n    this.currentScores = { ...DEFAULT_SCORES };\n    this.refreshChart();\n  }\n\n  /**\n   * Get current scores\n   */\n  getScores() {\n    return { ...this.currentScores };\n  }\n\n  /**\n   * Set scores directly\n   */\n  setScores(scores) {\n    this.currentScores = { ...DEFAULT_SCORES, ...scores };\n    this.refreshChart();\n  }\n\n  /**\n   * Refresh the chart display\n   */\n  refreshChart() {\n    if (this.chart) {\n      const axesData = Object.values(this.currentScores);\n      this.chart.data.datasets[0].data = axesData;\n      this.chart.update(this.options.animated ? 'active' : 'none');\n    }\n  }\n\n  /**\n   * Get impact description for a score\n   */\n  getImpactDescription(score) {\n    if (score <= 1) return 'Highly Negative';\n    if (score <= 2) return 'Negative';\n    if (score < NEUTRAL_SCORE) return 'Slightly Negative';\n    if (score === NEUTRAL_SCORE) return 'Neutral';\n    if (score < POSITIVE_THRESHOLD) return 'Slightly Positive';\n    if (score < MAX_SCORE) return 'Positive';\n    return 'Highly Positive';\n  }\n\n  /**\n   * Load Chart.js if not already loaded\n   */\n  async loadChartJS() {\n    return new Promise((resolve, reject) => {\n      if (typeof window.Chart !== 'undefined') {\n        resolve();\n        return;\n      }\n\n      const script = document.createElement('script');\n      script.src = 'https://cdn.jsdelivr.net/npm/chart.js';\n      script.onload = resolve;\n      script.onerror = reject;\n      document.head.appendChild(script);\n    });\n  }\n\n  /**\n   * Show fallback chart if Chart.js fails\n   */\n  showFallbackChart() {\n    this.container.innerHTML = `\n            <div class=\"radar-chart-fallback\">\n                <h4>${this.options.title}</h4>\n                <div class=\"fallback-scores\">\n                    ${Object.entries(this.currentScores)\n                      .map(\n                        ([axis, score]) => `\n                        <div class=\"score-item\">\n                            <span class=\"axis-label\">${ETHICAL_AXES[axis].label}:</span>\n                            <span class=\"score-value\">${score}/5</span>\n                            <div class=\"score-bar\">\n                                <div class=\"score-fill\" style=\"width: ${(score / MAX_SCORE) * SCALE_PERCENTAGE}%\"></div>\n                            </div>\n                        </div>\n                    `\n                      )\n                      .join('')}\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Destroy the chart and clean up\n   */\n  destroy() {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = null;\n    }\n    \n    // Clean up mobile event listeners\n    if (this.documentTouchHandler) {\n      document.removeEventListener('touchstart', this.documentTouchHandler);\n      this.documentTouchHandler = null;\n    }\n    \n    // Clean up canvas click handler\n    if (this.canvasClickHandler) {\n      const canvas = this.container.querySelector('canvas');\n      if (canvas) {\n        canvas.removeEventListener('click', this.canvasClickHandler);\n      }\n      this.canvasClickHandler = null;\n    }\n  }\n\n  /**\n   * Export chart as image\n   */\n  exportAsImage() {\n    if (this.chart) {\n      return this.chart.toBase64Image();\n    }\n    return null;\n  }\n\n  /**\n   * Handle chart click events for mobile tooltip toggle\n   * Allows users to click nodes to show/hide tooltips on mobile\n   */\n  handleChartClick(event, activeElements) {\n    // Only handle clicks on mobile/touch devices\n    if (!('ontouchstart' in window) && !navigator.maxTouchPoints) {\n      return;\n    }\n\n    if (!this.chart || !this.chart.tooltip) {\n      return;\n    }\n\n    // If clicking on a node/point\n    if (activeElements && activeElements.length > 0) {\n      const activeElement = activeElements[0];\n      const currentActiveElements = this.chart.tooltip.getActiveElements();\n      \n      // Check if the same element is already active\n      const isSameElement = currentActiveElements.length > 0 && \n                           currentActiveElements[0].datasetIndex === activeElement.datasetIndex &&\n                           currentActiveElements[0].index === activeElement.index;\n      \n      if (isSameElement) {\n        // If the same node is clicked again, hide the tooltip (deselect)\n        this.chart.tooltip.setActiveElements([], {x: 0, y: 0});\n      } else {\n        // Show tooltip for the clicked node (select)\n        this.chart.tooltip.setActiveElements([activeElement], {\n          x: event.native.offsetX,\n          y: event.native.offsetY\n        });\n      }\n      \n      this.chart.update('none');\n      \n      // Prevent event from bubbling to avoid triggering document touch handler\n      if (event.native) {\n        event.native.stopPropagation();\n      }\n    } else {\n      // If clicking on empty area, hide tooltips\n      this.chart.tooltip.setActiveElements([], {x: 0, y: 0});\n      this.chart.update('none');\n    }\n  }\n\n  /**\n   * Setup mobile tooltip dismissal for demo and scenario charts\n   * Allows users to tap anywhere to dismiss tooltips on mobile\n   */\n  setupMobileTooltipDismissal() {\n    // Only add this functionality on mobile/touch devices\n    if (!('ontouchstart' in window) && !navigator.maxTouchPoints) {\n      return;\n    }\n\n    // Add direct canvas click handler for empty area clicks\n    const canvas = this.container.querySelector('canvas');\n    if (canvas) {\n      this.canvasClickHandler = (event) => {\n        // Get chart elements at the click position\n        const points = this.chart.getElementsAtEventForMode(event, 'nearest', { intersect: true }, false);\n        \n        // If no elements were clicked (empty area), hide tooltips\n        if (points.length === 0) {\n          if (this.chart && this.chart.tooltip) {\n            this.chart.tooltip.setActiveElements([], {x: 0, y: 0});\n            this.chart.update('none');\n          }\n        }\n      };\n      \n      canvas.addEventListener('click', this.canvasClickHandler);\n    }\n\n    // Add touch event listener to the container for touches outside canvas\n    this.container.addEventListener('touchstart', (event) => {\n      // Check if the touch is outside the canvas area\n      const canvas = this.container.querySelector('canvas');\n      if (!canvas) return;\n\n      const rect = canvas.getBoundingClientRect();\n      const touch = event.touches[0];\n      \n      // If touch is outside the canvas, hide tooltips\n      if (touch.clientX < rect.left || \n          touch.clientX > rect.right || \n          touch.clientY < rect.top || \n          touch.clientY > rect.bottom) {\n        \n        // Hide any active tooltips\n        if (this.chart && this.chart.tooltip) {\n          this.chart.tooltip.setActiveElements([], {x: 0, y: 0});\n          this.chart.update('none');\n        }\n      }\n    }, { passive: true });\n\n    // Also add a general document touch listener for clicking outside the entire container\n    this.documentTouchHandler = (event) => {\n      // Only dismiss if the touch is completely outside the radar chart container\n      if (!this.container.contains(event.target)) {\n        // Hide tooltips when touching outside the entire container\n        if (this.chart && this.chart.tooltip) {\n          this.chart.tooltip.setActiveElements([], {x: 0, y: 0});\n          this.chart.update('none');\n        }\n      }\n    };\n\n    document.addEventListener('touchstart', this.documentTouchHandler, { passive: true });\n    \n    const chartType = this.options.isDemo ? 'demo' : 'scenario';\n    logger.info(`Mobile tooltip dismissal setup complete for ${chartType} radar chart`);\n  }\n}\n","/**\n * Ethics Glossary Utility\n * Provides definitions and explanations for ethical dimensions\n */\n\nimport { ETHICAL_AXES } from '../components/radar-chart.js';\n\n/**\n * Get ethics glossary data\n */\nexport function getEthicsGlossary() {\n  return Object.entries(ETHICAL_AXES).map(([key, data]) => ({\n    key,\n    label: data.label,\n    description: data.description,\n    color: data.color,\n  }));\n}\n\n/**\n * Get radar chart explanation text\n */\nexport function getRadarChartExplanation() {\n  return {\n    title: 'Understanding the Ethical Impact Radar Chart',\n    overview:\n      \"As you make choices in this scenario, you'll see a radar chart that visualizes how your decisions affect eight key ethical dimensions. This tool helps you understand the complex, multi-dimensional nature of ethical decision-making.\",\n    features: [\n      {\n        title: 'Real-Time Feedback',\n        description:\n          'The chart updates instantly as you select different options, showing immediate ethical implications.',\n      },\n      {\n        title: 'Multi-Dimensional View',\n        description:\n          'See how a single decision can impact multiple ethical areas simultaneously—there are rarely simple trade-offs.',\n      },\n      {\n        title: 'No Perfect Scores',\n        description:\n          \"The goal isn't to maximize all dimensions, but to understand how different ethical frameworks prioritize different values.\",\n      },\n      {\n        title: 'Context Matters',\n        description:\n          'The same action might be ethical in one context but problematic in another—use the chart to explore these nuances.',\n      },\n    ],\n    interpretation:\n      'The radar chart uses a scale from 0-5, where 3 represents a neutral impact. Higher scores indicate positive impacts on that dimension, while lower scores suggest potential concerns. Remember, this is a learning tool designed to prompt reflection, not provide definitive moral judgments.',\n  };\n}\n\n/**\n * Get ethics learning tips\n */\nexport function getEthicsLearningTips() {\n  return [\n    'Consider how different stakeholders might view your decisions differently',\n    'Think about both immediate and long-term consequences of your choices',\n    'Explore how cultural and contextual factors influence ethical reasoning',\n    'Notice when ethical dimensions conflict with each other—this is normal!',\n    'Use the chart to identify which ethical values you personally prioritize',\n    'Discuss your reasoning with others to broaden your perspective',\n  ];\n}\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Pre-Launch Information Modal\n * Educational context and preparation before simulation launch\n */\n\nimport { getSimulationInfo } from '../data/simulation-info.js';\nimport ModalUtility from './modal-utility.js';\nimport { simpleAnalytics } from '../utils/simple-analytics.js';\nimport {\n  getRadarChartExplanation,\n  getEthicsGlossary,\n} from '../utils/ethics-glossary.js';\nimport logger from '../utils/logger.js';\n\n// Constants\nconst DEFAULT_SCENARIO_DURATION = 15;\nconst MOBILE_BREAKPOINT = 768;\nconst UPDATE_DELAY = 100; // ms for UI update timing\n\nexport default class PreLaunchModal {\n  constructor(simulationId, options = {}) {\n    this.simulationId = simulationId;\n    this.options = {\n      onLaunch: options.onLaunch || (() => {}),\n      onCancel: options.onCancel || (() => {}),\n      showEducatorResources: options.showEducatorResources || false,\n      ...options,\n    };\n\n    // Check if category data is provided directly (for category-based premodals)\n    if (options.categoryData && options.scenarioData) {\n      this.simulationInfo = this.convertCategoryToSimulationInfo(\n        options.categoryData,\n        options.scenarioData\n      );\n      this.isCategory = true;\n    } else {\n      // Traditional simulation-based premodal\n      this.simulationInfo = getSimulationInfo(simulationId);\n      this.isCategory = false;\n\n      if (!this.simulationInfo) {\n        throw new Error(`Simulation info not found for: ${simulationId}`);\n      }\n    }\n\n    this.modal = null;\n    this.currentTab = 'overview';\n  }\n\n  /**\n   * Converts category and scenario data to simulation info format\n   * This allows the PreLaunchModal to work with both simulations and categories\n   */\n  convertCategoryToSimulationInfo(category, scenario) {\n    return {\n      id: category.id,\n      title: scenario.title,\n      subtitle: `${category.title} - ${scenario.description}`,\n\n      // Educational Context\n      learningObjectives: category.learningObjectives || [\n        'Explore ethical decision-making scenarios',\n        'Understand different perspectives on moral choices',\n        'Practice reasoning through complex dilemmas',\n        'Develop critical thinking about AI ethics',\n      ],\n\n      isteCriteria: [\n        'Empowered Learner 1.1.5: Use technology to seek feedback and make improvements',\n        'Digital Citizen 1.2.2: Engage in positive, safe, legal and ethical behavior',\n        'Knowledge Constructor 1.3.1: Plan and employ effective research strategies',\n        'Computational Thinker 1.5.3: Collect data and identify patterns',\n      ],\n\n      duration: `${category.estimatedTime || DEFAULT_SCENARIO_DURATION} minutes`,\n      difficulty: category.difficulty || 'intermediate',\n      recommendedAge: '13+',\n      prerequisites: [\n        'Basic understanding of ethics and moral reasoning',\n        'Awareness of AI and automated systems',\n        'Open mind for exploring different perspectives',\n      ],\n\n      // Pre-Launch Information\n      beforeYouStart: {\n        briefing: `In this scenario, you'll explore \"${scenario.title}\" as part of the ${category.title} category. ${scenario.description}\n                \n                You'll be presented with ethical dilemmas and asked to make decisions while considering multiple perspectives. There are no single \"correct\" answers - instead, you'll discover the complexity of moral reasoning in AI systems.`,\n\n        vocabulary: [\n          {\n            term: 'Ethics',\n            definition: 'The study of what is morally right and wrong',\n          },\n          {\n            term: 'Dilemma',\n            definition:\n              'A situation requiring a choice between equally undesirable alternatives',\n          },\n          {\n            term: 'Stakeholder',\n            definition:\n              'A person or group affected by the decisions being made',\n          },\n          {\n            term: 'Autonomy',\n            definition:\n              'The ability of a system to make decisions independently',\n          },\n          {\n            term: 'Moral Agency',\n            definition:\n              'The capacity to make moral judgments and be held responsible for actions',\n          },\n        ],\n\n        preparationTips: [\n          'Consider multiple perspectives before making decisions',\n          'Think about both immediate and long-term consequences',\n          'Remember that ethical reasoning often involves trade-offs',\n          'Stay open to challenging your initial assumptions',\n          'Consider who might be affected by each decision',\n        ],\n\n        scenarioOverview: scenario.description,\n      },\n\n      contentNotes: [\n        'This scenario deals with complex ethical questions that may not have clear answers',\n        'Different cultural and philosophical backgrounds may lead to different conclusions',\n        'The goal is to develop reasoning skills, not find the \"right\" answer',\n      ],\n\n      // Resources and connections\n      relatedResources: [\n        {\n          type: 'article',\n          title: 'Introduction to AI Ethics',\n          description:\n            'A comprehensive overview of ethical considerations in artificial intelligence',\n          url: '#',\n          audience: 'general',\n        },\n        {\n          type: 'video',\n          title: 'Moral Decision-Making in AI Systems',\n          description: 'Video explanation of how AI systems make moral choices',\n          url: '#',\n          audience: 'students',\n        },\n        {\n          type: 'activity',\n          title: 'Ethics Discussion Guide',\n          description:\n            'Structured questions for group discussion about AI ethics',\n          url: '#',\n          audience: 'educators',\n        },\n      ],\n\n      connectedSimulations: [],\n\n      // Educator resources\n      educatorResources: {\n        discussionQuestions: [\n          `What ethical considerations are most important in the \"${category.title}\" category?`,\n          'How might different stakeholders view these scenarios differently?',\n          'What real-world applications of these ethical dilemmas can you think of?',\n          'How can we prepare for ethical challenges in AI and automation?',\n          'What role should humans play in automated decision-making?',\n        ],\n\n        extensionActivities: [\n          'Research real-world examples related to this category',\n          'Debate different ethical approaches to these scenarios',\n          'Create your own ethical dilemma scenarios',\n          'Interview experts about AI ethics in this domain',\n          'Design guidelines for ethical AI in this area',\n        ],\n\n        classroomTips: [\n          'Encourage students to consider multiple perspectives',\n          'Emphasize that there may not be single \"correct\" answers',\n          'Connect scenarios to current events and real-world examples',\n          'Allow time for reflection and discussion after each scenario',\n          'Consider having students work in small groups to discuss choices',\n        ],\n\n        relatedStandards: [\n          'CSTA K-12 Computer Science Standards: 3A-IC-24, 3A-IC-25, 3A-IC-26',\n          'ISTE Standards: Digital Citizen 1.2.2, Knowledge Constructor 1.3.1',\n        ],\n      },\n\n      // Additional data for category-specific features\n      categoryInfo: {\n        icon: category.icon,\n        color: category.color,\n        tags: category.tags || [],\n      },\n    };\n  }\n\n  /**\n   * Shows the pre-launch modal\n   */\n  show() {\n    const content = this.generateModalContent();\n    const footer = this.generateModalFooter();\n\n    this.modal = new ModalUtility({\n      title: `Prepare to Explore: ${this.simulationInfo.title}`,\n      content,\n      footer,\n      onClose: this.options.onCancel,\n      closeOnBackdrop: false,\n      closeOnEscape: true,\n    });\n\n    this.modal.open();\n    this.setupEventListeners();\n    this.trackAnalytics('pre_launch_viewed');\n  }\n\n  /**\n   * Closes the modal\n   */\n  close() {\n    if (this.modal) {\n      this.modal.close();\n      this.modal = null;\n    }\n  }\n\n  /**\n   * Closes the modal with optional force destroy (for onboarding completion)\n   */\n  closeWithCleanup(forceDestroy = false) {\n    if (this.modal) {\n      if (forceDestroy) {\n        this.modal.destroy();\n      } else {\n        this.modal.close();\n      }\n      this.modal = null;\n    }\n  }\n\n  /**\n   * Destroys the modal completely (removes from DOM)\n   */\n  destroy() {\n    if (this.modal) {\n      this.modal.destroy();\n      this.modal = null;\n    }\n  }\n\n  /**\n   * Generates the main modal content with tabs\n   */\n  generateModalContent() {\n    // Generate the tabbed content for the pre-launch modal\n    return `\n            <div class=\"pre-launch-modal\">\n                <!-- Tab Navigation with Hamburger Menu -->\n                <nav class=\"pre-launch-tabs\" role=\"tablist\" aria-label=\"Pre-launch information tabs\">\n                    <!-- Mobile Hamburger Menu -->\n                    <div class=\"tab-mobile-menu\">\n                        <button class=\"tab-hamburger\" aria-label=\"Toggle navigation menu\" aria-expanded=\"false\">\n                            <span class=\"hamburger-line\"></span>\n                            <span class=\"hamburger-line\"></span>\n                            <span class=\"hamburger-line\"></span>\n                        </button>\n                        <span class=\"tab-current-label\">Overview</span>\n                    </div>\n                    \n                    <!-- Tab Buttons Container -->\n                    <div class=\"tab-buttons-container\">\n                        <button class=\"tab-button active\" data-tab=\"overview\" role=\"tab\" aria-selected=\"true\" aria-controls=\"tab-overview\">\n                            <span class=\"tab-icon\">🎯</span>\n                            Overview\n                        </button>\n                        <button class=\"tab-button\" data-tab=\"objectives\" role=\"tab\" aria-selected=\"false\" aria-controls=\"tab-objectives\">\n                            <span class=\"tab-icon\">📚</span>\n                            Learning Goals\n                        </button>\n                        <button class=\"tab-button\" data-tab=\"ethics\" role=\"tab\" aria-selected=\"false\" aria-controls=\"tab-ethics\">\n                            <span class=\"tab-icon\">⚖️</span>\n                            Ethics Guide\n                        </button>\n                        <button class=\"tab-button\" data-tab=\"preparation\" role=\"tab\" aria-selected=\"false\" aria-controls=\"tab-preparation\">\n                            <span class=\"tab-icon\">🚀</span>\n                            Get Ready\n                        </button>\n                        <button class=\"tab-button\" data-tab=\"resources\" role=\"tab\" aria-selected=\"false\" aria-controls=\"tab-resources\">\n                            <span class=\"tab-icon\">📖</span>\n                            Resources\n                        </button>\n                        ${\n                          this.options.showEducatorResources\n                            ? `\n                            <button class=\"tab-button\" data-tab=\"educator\" role=\"tab\" aria-selected=\"false\" aria-controls=\"tab-educator\">\n                                <span class=\"tab-icon\">👨‍🏫</span>\n                                For Educators\n                            </button>\n                        `\n                            : ''\n                        }\n                    </div>\n                </nav>\n                \n                <!-- Tab Content -->\n                <div class=\"pre-launch-content\">\n                    ${this.generateOverviewTab()}\n                    ${this.generateObjectivesTab()}\n                    ${this.generateEthicsTab()}\n                    ${this.generatePreparationTab()}\n                    ${this.generateResourcesTab()}\n                    ${this.options.showEducatorResources ? this.generateEducatorTab() : ''}\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generates the overview tab content\n   */\n  generateOverviewTab() {\n    const info = this.simulationInfo;\n\n    return `\n            <div class=\"tab-content active\" id=\"tab-overview\" role=\"tabpanel\" aria-labelledby=\"tab-overview\">\n                <div class=\"simulation-overview\">\n                    <div class=\"overview-header\">\n                        <h3>${info.title}</h3>\n                        <p class=\"subtitle\">${info.subtitle}</p>\n                    </div>\n                    \n                    <div class=\"overview-meta\">\n                        <div class=\"meta-item\">\n                            <span class=\"meta-label\">Duration:</span>\n                            <span class=\"meta-value\">${info.duration}</span>\n                        </div>\n                        <div class=\"meta-item\">\n                            <span class=\"meta-label\">Difficulty:</span>\n                            <span class=\"meta-value difficulty-${info.difficulty}\">${this.capitalizeFirst(info.difficulty)}</span>\n                        </div>\n                        <div class=\"meta-item\">\n                            <span class=\"meta-label\">Recommended Age:</span>\n                            <span class=\"meta-value\">${info.recommendedAge}</span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"overview-description\">\n                        <h4>What You'll Explore</h4>\n                        <div class=\"briefing-text\">\n                            ${this.formatText(info.beforeYouStart.briefing)}\n                        </div>\n                    </div>\n                    \n                    <div class=\"scenario-overview\">\n                        <h4>Scenario Overview</h4>\n                        <p>${info.beforeYouStart.scenarioOverview}</p>\n                    </div>\n                    \n                    ${\n                      info.contentNotes.length > 0\n                        ? `\n                        <div class=\"content-notes\">\n                            <h4>Content Notes</h4>\n                            <ul class=\"notes-list\">\n                                ${info.contentNotes.map(note => `<li>${note}</li>`).join('')}\n                            </ul>\n                        </div>\n                    `\n                        : ''\n                    }\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generates the learning objectives tab\n   */\n  generateObjectivesTab() {\n    const info = this.simulationInfo;\n\n    return `\n            <div class=\"tab-content\" id=\"tab-objectives\" role=\"tabpanel\" aria-labelledby=\"tab-objectives\">\n                <div class=\"learning-objectives\">\n                    <div class=\"objectives-section\">\n                        <h4>Learning Objectives</h4>\n                        <p class=\"section-description\">By the end of this exploration, you will be able to:</p>\n                        <ul class=\"objectives-list\">\n                            ${info.learningObjectives\n                              .map(\n                                objective => `\n                                <li class=\"objective-item\">\n                                    <span class=\"objective-icon\">🎯</span>\n                                    ${objective}\n                                </li>\n                            `\n                              )\n                              .join('')}\n                        </ul>\n                    </div>\n                    \n                    <div class=\"standards-section\">\n                        <h4>ISTE Standards Alignment</h4>\n                        <p class=\"section-description\">This simulation supports these ISTE Standards for Students:</p>\n                        <ul class=\"standards-list\">\n                            ${info.isteCriteria\n                              .map(\n                                standard => `\n                                <li class=\"standard-item\">\n                                    <span class=\"standard-icon\">📋</span>\n                                    ${standard}\n                                </li>\n                            `\n                              )\n                              .join('')}\n                        </ul>\n                    </div>\n                    \n                    ${\n                      info.prerequisites.length > 0\n                        ? `\n                        <div class=\"prerequisites-section\">\n                            <h4>Prerequisites</h4>\n                            <p class=\"section-description\">For the best experience, you should have:</p>\n                            <ul class=\"prerequisites-list\">\n                                ${info.prerequisites\n                                  .map(\n                                    prereq => `\n                                    <li class=\"prerequisite-item\">\n                                        <span class=\"prereq-icon\">📚</span>\n                                        ${prereq}\n                                    </li>\n                                `\n                                  )\n                                  .join('')}\n                            </ul>\n                        </div>\n                    `\n                        : ''\n                    }\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generates the ethics guide tab\n   */\n  generateEthicsTab() {\n    const radarInfo = getRadarChartExplanation();\n    const glossary = getEthicsGlossary();\n\n    return `\n            <div class=\"tab-content\" id=\"tab-ethics\" role=\"tabpanel\" aria-labelledby=\"tab-ethics\">\n                <div class=\"ethics-guide\">\n                    <div class=\"radar-explanation\">\n                        <h4>${radarInfo.title}</h4>\n                        <p class=\"section-description\">${radarInfo.overview}</p>\n                        \n                        <div class=\"ethics-features\">\n                            ${radarInfo.features\n                              .map(\n                                feature => `\n                                <div class=\"feature-item\">\n                                    <h5>${feature.title}</h5>\n                                    <p>${feature.description}</p>\n                                </div>\n                            `\n                              )\n                              .join('')}\n                        </div>\n                        \n                        <div class=\"interpretation-guide\">\n                            <h5>How to Interpret the Chart</h5>\n                            <p>${radarInfo.interpretation}</p>\n                        </div>\n                    </div>\n                    \n                    <div class=\"ethics-dimensions\">\n                        <h4>Ethical Dimensions Explained</h4>\n                        <p class=\"section-description\">Each point on the radar chart represents one of these ethical considerations:</p>\n                        \n                        <div class=\"dimensions-grid\">\n                            ${glossary\n                              .map(\n                                dimension => `\n                                <div class=\"dimension-item\">\n                                    <div class=\"dimension-header\">\n                                        <span class=\"dimension-color\" style=\"background-color: ${dimension.color}\"></span>\n                                        <h5>${dimension.label}</h5>\n                                    </div>\n                                    <p>${dimension.description}</p>\n                                </div>\n                            `\n                              )\n                              .join('')}\n                        </div>\n                        \n                        <div class=\"ethics-reminder\">\n                            <p><strong>Remember:</strong> These dimensions often interact and sometimes conflict. Real ethical decision-making involves thoughtfully balancing these competing values based on context and consequences.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generates the preparation tab\n   */\n  generatePreparationTab() {\n    const info = this.simulationInfo;\n\n    return `\n            <div class=\"tab-content\" id=\"tab-preparation\" role=\"tabpanel\" aria-labelledby=\"tab-preparation\">\n                <div class=\"preparation-content\">\n                    <div class=\"preparation-tips\">\n                        <h4>Preparation Tips</h4>\n                        <p class=\"section-description\">Before you start exploring, consider these suggestions:</p>\n                        <ul class=\"tips-list\">\n                            ${info.beforeYouStart.preparationTips\n                              .map(\n                                tip => `\n                                <li class=\"tip-item\">\n                                    <span class=\"tip-icon\">💡</span>\n                                    ${tip}\n                                </li>\n                            `\n                              )\n                              .join('')}\n                        </ul>\n                    </div>\n                    \n                    <div class=\"vocabulary-section\">\n                        <h4>Key Vocabulary</h4>\n                        <p class=\"section-description\">Important terms you'll encounter:</p>\n                        <div class=\"vocabulary-grid\">\n                            ${info.beforeYouStart.vocabulary\n                              .map(\n                                item => `\n                                <div class=\"vocabulary-card\">\n                                    <h5 class=\"vocab-term\">${item.term}</h5>\n                                    <p class=\"vocab-definition\">${item.definition}</p>\n                                </div>\n                            `\n                              )\n                              .join('')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generates the resources tab\n   */\n  generateResourcesTab() {\n    const info = this.simulationInfo;\n\n    return `\n            <div class=\"tab-content\" id=\"tab-resources\" role=\"tabpanel\" aria-labelledby=\"tab-resources\">\n                <div class=\"resources-content\">\n                    <div class=\"resources-intro\">\n                        <h4>Related Resources</h4>\n                        <p class=\"section-description\">Explore these resources to deepen your understanding:</p>\n                    </div>\n                    \n                    <div class=\"resources-grid\">\n                        ${info.relatedResources\n                          .map(\n                            resource => `\n                            <div class=\"resource-card\" data-audience=\"${resource.audience}\">\n                                <div class=\"resource-header\">\n                                    <span class=\"resource-type resource-type-${resource.type}\">${this.getResourceTypeIcon(resource.type)}</span>\n                                    <span class=\"resource-audience\">${this.capitalizeFirst(resource.audience)}</span>\n                                </div>\n                                <h5 class=\"resource-title\">${resource.title}</h5>\n                                <p class=\"resource-description\">${resource.description}</p>\n                                <a href=\"${resource.url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"resource-link\">\n                                    View Resource <span class=\"external-icon\">↗</span>\n                                </a>\n                            </div>\n                        `\n                          )\n                          .join('')}\n                    </div>\n                    \n                    ${\n                      info.connectedSimulations.length > 0\n                        ? `\n                        <div class=\"connected-simulations\">\n                            <h4>Related Simulations</h4>\n                            <p class=\"section-description\">Continue your learning journey with these connected explorations:</p>\n                            <div class=\"connected-list\">\n                                ${info.connectedSimulations\n                                  .map(\n                                    simId => `\n                                    <button class=\"connected-sim-button\" data-simulation=\"${simId}\">\n                                        Explore: ${this.getSimulationTitle(simId)}\n                                    </button>\n                                `\n                                  )\n                                  .join('')}\n                            </div>\n                        </div>\n                    `\n                        : ''\n                    }\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generates the educator resources tab\n   */\n  generateEducatorTab() {\n    const info = this.simulationInfo;\n    const resources = info.educatorResources;\n\n    return `\n            <div class=\"tab-content\" id=\"tab-educator\" role=\"tabpanel\" aria-labelledby=\"tab-educator\">\n                <div class=\"educator-content\">\n                    <div class=\"educator-intro\">\n                        <h4>Educator Resources</h4>\n                        <p class=\"section-description\">Tools and guidance for classroom implementation:</p>\n                    </div>\n                    \n                    <div class=\"educator-sections\">\n                        <div class=\"educator-section\">\n                            <h5>Discussion Questions</h5>\n                            <ul class=\"discussion-questions\">\n                                ${resources.discussionQuestions\n                                  .map(\n                                    question => `\n                                    <li class=\"discussion-item\">${question}</li>\n                                `\n                                  )\n                                  .join('')}\n                            </ul>\n                        </div>\n                        \n                        <div class=\"educator-section\">\n                            <h5>Extension Activities</h5>\n                            <ul class=\"extension-activities\">\n                                ${resources.extensionActivities\n                                  .map(\n                                    activity => `\n                                    <li class=\"activity-item\">${activity}</li>\n                                `\n                                  )\n                                  .join('')}\n                            </ul>\n                        </div>\n                        \n                        <div class=\"educator-section\">\n                            <h5>Classroom Tips</h5>\n                            <ul class=\"classroom-tips\">\n                                ${resources.classroomTips\n                                  .map(\n                                    tip => `\n                                    <li class=\"tip-item\">${tip}</li>\n                                `\n                                  )\n                                  .join('')}\n                            </ul>\n                        </div>\n                        \n                        <div class=\"educator-section\">\n                            <h5>Standards Alignment</h5>\n                            <ul class=\"standards-alignment\">\n                                ${resources.relatedStandards\n                                  .map(\n                                    standard => `\n                                    <li class=\"standard-item\">${standard}</li>\n                                `\n                                  )\n                                  .join('')}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generates modal footer with action buttons\n   */\n  generateModalFooter() {\n    return `\n            <div class=\"pre-launch-footer\">\n                <div class=\"action-buttons\">\n                    <button type=\"button\" class=\"btn-cancel\" id=\"cancel-launch\">\n                        Maybe Later\n                    </button>\n                    <button type=\"button\" class=\"btn-launch\" id=\"start-exploration\">\n                        <span class=\"button-icon\">🚀</span>\n                        Start Exploration\n                    </button>\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Sets up event listeners for modal interactions\n   */\n  setupEventListeners() {\n    // Ensure modal container exists and has the expected structure\n    if (!this.modal) {\n      logger.error('Modal instance not available for event listener setup');\n      return;\n    }\n\n    if (!this.modal.element) {\n      logger.error('Modal element not available. Modal structure:', this.modal);\n      return;\n    }\n\n    if (typeof this.modal.element.querySelectorAll !== 'function') {\n      logger.error(\n        'Modal element does not have querySelectorAll method. Element type:',\n        typeof this.modal.element,\n        this.modal.element\n      );\n      return;\n    }\n\n    try {\n      // Hamburger menu toggle (mobile navigation)\n      const hamburgerButton =\n        this.modal.element.querySelector('.tab-hamburger');\n      const tabButtonsContainer = this.modal.element.querySelector(\n        '.tab-buttons-container'\n      );\n\n      if (hamburgerButton && tabButtonsContainer) {\n        hamburgerButton.addEventListener('click', () => {\n          const isExpanded =\n            hamburgerButton.getAttribute('aria-expanded') === 'true';\n          hamburgerButton.setAttribute('aria-expanded', !isExpanded);\n          tabButtonsContainer.classList.toggle('expanded', !isExpanded);\n        });\n\n        // Close menu when clicking outside\n        document.addEventListener('click', e => {\n          // Don't interfere with onboarding coach marks\n          if (e.target.closest('.onboarding-coach-mark')) {\n            return;\n          }\n\n          if (!e.target.closest('.pre-launch-tabs')) {\n            hamburgerButton.setAttribute('aria-expanded', 'false');\n            tabButtonsContainer.classList.remove('expanded');\n          }\n        });\n\n        // Close menu when pressing Escape key\n        document.addEventListener('keydown', e => {\n          if (\n            e.key === 'Escape' &&\n            hamburgerButton.getAttribute('aria-expanded') === 'true'\n          ) {\n            hamburgerButton.setAttribute('aria-expanded', 'false');\n            tabButtonsContainer.classList.remove('expanded');\n            hamburgerButton.focus(); // Return focus to hamburger button\n          }\n        });\n      }\n\n      // Tab switching (scoped to this modal)\n      const tabButtons = this.modal.element.querySelectorAll('.tab-button');\n      const tabContainer = this.modal.element.querySelector(\n        '.tab-buttons-container'\n      );\n      const tabNavigation =\n        this.modal.element.querySelector('.pre-launch-tabs');\n\n      // Handle scroll indicators for desktop tab overflow\n      const updateScrollIndicators = () => {\n        if (tabContainer && tabNavigation) {\n          const { scrollLeft, scrollWidth, clientWidth } = tabContainer;\n          const canScrollLeft = scrollLeft > 0;\n          const canScrollRight = scrollLeft < scrollWidth - clientWidth - 1;\n\n          tabNavigation.classList.toggle('scrollable-left', canScrollLeft);\n          tabNavigation.classList.toggle('scrollable-right', canScrollRight);\n        }\n      };\n\n      // Update scroll indicators on container scroll and resize\n      if (tabContainer) {\n        tabContainer.addEventListener('scroll', updateScrollIndicators);\n        window.addEventListener('resize', updateScrollIndicators);\n        // Initial check\n        setTimeout(updateScrollIndicators, UPDATE_DELAY);\n      }\n\n      tabButtons.forEach(button => {\n        button.addEventListener('click', e => {\n          const tabId = e.target.dataset.tab || e.currentTarget.dataset.tab;\n          if (tabId) {\n            this.switchTab(tabId);\n\n            // Close mobile menu after tab selection\n            if (hamburgerButton && tabButtonsContainer) {\n              hamburgerButton.setAttribute('aria-expanded', 'false');\n              tabButtonsContainer.classList.remove('expanded');\n            }\n          } else {\n            logger.warn(\n              'Tab button clicked but no data-tab attribute found',\n              e.target\n            );\n          }\n        });\n      });\n\n      // Action buttons (scoped to this modal)\n      const startButton =\n        this.modal.element.querySelector('#start-exploration');\n      const cancelButton = this.modal.element.querySelector('#cancel-launch');\n\n      if (startButton) {\n        startButton.addEventListener('click', () => {\n          logger.debug('Start Exploration button clicked', {\n            simulationId: this.simulationId,\n            onLaunch: typeof this.options.onLaunch,\n          });\n\n          this.trackAnalytics('simulation_launched');\n          this.close();\n\n          // Call the onLaunch callback\n          if (typeof this.options.onLaunch === 'function') {\n            logger.debug('Calling onLaunch callback');\n            this.options.onLaunch(this.simulationId);\n          } else {\n            logger.error('onLaunch is not a function:', this.options.onLaunch);\n          }\n        });\n      } else {\n        logger.error('Start button not found in modal');\n      }\n\n      if (cancelButton) {\n        cancelButton.addEventListener('click', () => {\n          this.trackAnalytics('launch_cancelled');\n          this.close();\n          this.options.onCancel();\n        });\n      }\n\n      // Connected simulation buttons\n      const connectedButtons = document.querySelectorAll(\n        '.connected-sim-button'\n      );\n      connectedButtons.forEach(button => {\n        button.addEventListener('click', e => {\n          const targetSimId = e.target.dataset.simulation;\n          this.trackAnalytics('connected_simulation_clicked', {\n            target: targetSimId,\n          });\n          // Could trigger loading of connected simulation\n        });\n      });\n\n      // Resource link tracking\n      const resourceLinks = document.querySelectorAll('.resource-link');\n      resourceLinks.forEach(link => {\n        link.addEventListener('click', e => {\n          this.trackAnalytics('resource_accessed', {\n            url: e.target.href,\n            type: e.target\n              .closest('.resource-card')\n              .querySelector('.resource-type').textContent,\n          });\n        });\n      });\n    } catch (error) {\n      logger.error('Error setting up PreLaunchModal event listeners:', error);\n    }\n  }\n\n  /**\n   * Switches to a different tab\n   */\n  switchTab(tabId) {\n    if (!tabId) {\n      logger.warn('switchTab called with null or undefined tabId');\n      return;\n    }\n\n    try {\n      // Find the modal container to scope our searches\n      const modalContainer =\n        (this.modal && this.modal.element) ||\n        document.querySelector('.pre-launch-modal');\n      if (!modalContainer) {\n        logger.warn('Pre-launch modal container not found');\n        return;\n      }\n\n      // Update buttons (scoped to the modal)\n      const allTabButtons = modalContainer.querySelectorAll('.tab-button');\n      allTabButtons.forEach(btn => {\n        btn.classList.remove('active');\n        btn.setAttribute('aria-selected', 'false');\n      });\n\n      const targetButton = modalContainer.querySelector(\n        `[data-tab=\"${tabId}\"]`\n      );\n      if (targetButton) {\n        targetButton.classList.add('active');\n        targetButton.setAttribute('aria-selected', 'true');\n\n        // Scroll tab into view if needed (desktop only)\n        const tabContainer = modalContainer.querySelector(\n          '.tab-buttons-container'\n        );\n        if (tabContainer && window.innerWidth > MOBILE_BREAKPOINT) {\n          targetButton.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n            inline: 'center',\n          });\n        }\n\n        // Update mobile menu current label\n        const currentLabel = modalContainer.querySelector('.tab-current-label');\n        if (currentLabel) {\n          const buttonText = targetButton.textContent.trim();\n          currentLabel.textContent = buttonText;\n        }\n      } else {\n        logger.warn(`Tab button with data-tab=\"${tabId}\" not found in modal`);\n      }\n\n      // Update content (scoped to the modal)\n      const allTabContent = modalContainer.querySelectorAll('.tab-content');\n      allTabContent.forEach(content => {\n        content.classList.remove('active');\n      });\n\n      const targetContent = modalContainer.querySelector(`#tab-${tabId}`);\n      if (targetContent) {\n        targetContent.classList.add('active');\n      } else {\n        logger.warn(`Tab content with id=\"tab-${tabId}\" not found in modal`);\n      }\n\n      this.currentTab = tabId;\n      this.trackAnalytics('tab_switched', { tab: tabId });\n    } catch (error) {\n      logger.error('Error in switchTab:', error);\n    }\n  }\n\n  // Helper methods\n  capitalizeFirst(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  formatText(text) {\n    return text\n      .split('\\n\\n')\n      .map(paragraph => `<p>${paragraph.trim()}</p>`)\n      .join('');\n  }\n\n  getResourceTypeIcon(type) {\n    const icons = {\n      article: '📄',\n      video: '🎥',\n      research: '🔬',\n      interactive: '🖥️',\n      book: '📚',\n      website: '🌐',\n    };\n    return icons[type] || '📎';\n  }\n\n  getSimulationTitle(simId) {\n    const simInfo = getSimulationInfo(simId);\n    return simInfo ? simInfo.title : simId;\n  }\n\n  trackAnalytics(event, data = {}) {\n    if (simpleAnalytics) {\n      simpleAnalytics.trackEvent('pre_launch', {\n        event,\n        simulation: this.simulationId,\n        tab: this.currentTab,\n        ...data,\n      });\n    }\n  }\n}\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Enhanced Simulation Modal Component\n * Phase 2: Larger, tabbed interface with resources, progress, and help\n */\n\nimport { TIMING, BREAKPOINTS } from '../utils/constants.js';\nimport focusManager from '../utils/focus-manager.js';\n\nexport class EnhancedSimulationModal {\n  constructor(simulationId, options = {}) {\n    this.simulationId = simulationId;\n    this.options = {\n      onClose: options.onClose || (() => {}),\n      showTabs: options.showTabs !== false,\n      showResourcePanel: options.showResourcePanel !== false,\n      collapseEthicsMeters: options.collapseEthicsMeters || false,\n      size: options.size || 'large', // small, medium, large, fullscreen\n      ...options,\n    };\n\n    this.currentTab = 'simulation';\n    this.isEthicsMetersCollapsed = this.options.collapseEthicsMeters;\n    this.modal = null;\n    this.resizeObserver = null;\n  }\n\n  /**\n   * Shows the enhanced simulation modal\n   */\n  show() {\n    this.createModal();\n    this.setupEventListeners();\n    this.setupResizeObserver();\n    document.body.appendChild(this.modal);\n\n    // Force reflow and then show\n    this.modal.offsetHeight;\n    this.modal.classList.add('visible');\n\n    // Focus management - create focus trap\n    this.focusTrap = focusManager.createTrap(this.modal, {\n      autoFocus: true,\n      restoreFocus: true\n    });\n\n    // Track analytics\n    this.trackAnalytics('enhanced_modal_opened', {\n      simulationId: this.simulationId,\n      size: this.options.size,\n      tabsEnabled: this.options.showTabs,\n    });\n  }\n\n  /**\n   * Closes the modal\n   */\n  close() {\n    if (this.modal) {\n      // Clean up focus trap\n      if (this.focusTrap) {\n        this.focusTrap.destroy();\n        this.focusTrap = null;\n      }\n\n      this.modal.classList.remove('visible');\n      setTimeout(() => {\n        if (this.modal && this.modal.parentNode) {\n          this.modal.parentNode.removeChild(this.modal);\n        }\n        this.cleanup();\n      }, TIMING.FAST);\n    }\n\n    this.options.onClose();\n    this.trackAnalytics('enhanced_modal_closed');\n  }\n\n  /**\n   * Creates the modal structure\n   */\n  createModal() {\n    this.modal = document.createElement('div');\n    this.modal.className = `enhanced-simulation-modal modal-size-${this.options.size}`;\n    this.modal.setAttribute('role', 'dialog');\n    this.modal.setAttribute('aria-modal', 'true');\n    this.modal.setAttribute('aria-labelledby', 'enhanced-modal-title');\n\n    this.modal.innerHTML = `\n            <div class=\"enhanced-modal-backdrop\" aria-hidden=\"true\"></div>\n            <div class=\"enhanced-modal-container\">\n                <div class=\"enhanced-modal-header\">\n                    <h2 id=\"enhanced-modal-title\" class=\"enhanced-modal-title\">Simulation</h2>\n                    <div class=\"enhanced-modal-controls\">\n                        <button class=\"btn-icon btn-expand\" title=\"Toggle fullscreen\" aria-label=\"Toggle fullscreen\">\n                            <span class=\"icon\">⛶</span>\n                        </button>\n                        <button class=\"btn-icon btn-close\" title=\"Close simulation\" aria-label=\"Close simulation\">\n                            <span class=\"icon\">×</span>\n                        </button>\n                    </div>\n                </div>\n                \n                ${this.options.showTabs ? this.generateTabNavigation() : ''}\n                \n                <div class=\"enhanced-modal-body\">\n                    <div class=\"simulation-main-area\">\n                        <div class=\"simulation-content-wrapper\">\n                            <div id=\"enhanced-simulation-container\" class=\"enhanced-simulation-container\">\n                                <!-- Simulation content will be injected here -->\n                            </div>\n                            \n                            ${this.generateEthicsMetersPanel()}\n                        </div>\n                        \n                        ${this.options.showResourcePanel ? this.generateResourcePanel() : ''}\n                    </div>\n                    \n                    ${this.generateTabContent()}\n                </div>\n                \n                <div class=\"enhanced-modal-footer\">\n                    <div class=\"simulation-status\">\n                        <span class=\"status-indicator\" id=\"simulation-status\">Ready</span>\n                    </div>\n                    <div class=\"simulation-actions\">\n                        <button class=\"btn btn-secondary\" id=\"reset-enhanced-simulation\">Reset</button>\n                        <button class=\"btn btn-secondary\" id=\"pause-enhanced-simulation\">Pause</button>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generates tab navigation\n   */\n  generateTabNavigation() {\n    return `\n            <div class=\"enhanced-modal-tabs\" role=\"tablist\">\n                <button class=\"enhanced-tab active\" role=\"tab\" data-tab=\"simulation\" aria-selected=\"true\" aria-controls=\"tab-simulation\">\n                    <span class=\"tab-icon\">🎮</span>\n                    <span class=\"tab-label\">Simulation</span>\n                </button>\n                <button class=\"enhanced-tab\" role=\"tab\" data-tab=\"resources\" aria-selected=\"false\" aria-controls=\"tab-resources\">\n                    <span class=\"tab-icon\">📚</span>\n                    <span class=\"tab-label\">Resources</span>\n                </button>\n                <button class=\"enhanced-tab\" role=\"tab\" data-tab=\"progress\" aria-selected=\"false\" aria-controls=\"tab-progress\">\n                    <span class=\"tab-icon\">📊</span>\n                    <span class=\"tab-label\">Progress</span>\n                </button>\n                <button class=\"enhanced-tab\" role=\"tab\" data-tab=\"help\" aria-selected=\"false\" aria-controls=\"tab-help\">\n                    <span class=\"tab-icon\">❓</span>\n                    <span class=\"tab-label\">Help</span>\n                </button>\n            </div>\n        `;\n  }\n\n  /**\n   * Generates ethics meters panel\n   */\n  generateEthicsMetersPanel() {\n    return `\n            <div class=\"ethics-meters-panel ${this.isEthicsMetersCollapsed ? 'collapsed' : ''}\" id=\"ethics-meters-panel\">\n                <div class=\"ethics-meters-header\">\n                    <h3>Ethics Monitoring</h3>\n                    <button class=\"btn-icon btn-collapse\" title=\"Toggle ethics meters\" aria-label=\"Toggle ethics meters\">\n                        <span class=\"icon\">${this.isEthicsMetersCollapsed ? '▶' : '▼'}</span>\n                    </button>\n                </div>\n                <div class=\"ethics-meters-content\">\n                    <p class=\"ethics-description\">Track how your decisions affect different ethical dimensions</p>\n                    <div class=\"meters-container\" role=\"group\" aria-label=\"Ethics meters\">\n                        <!-- Enhanced meters will be dynamically created here -->\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generates resource panel\n   */\n  generateResourcePanel() {\n    return `\n            <div class=\"resource-panel\" id=\"resource-panel\">\n                <div class=\"resource-panel-header\">\n                    <h3>Quick Resources</h3>\n                    <button class=\"btn-icon btn-collapse\" title=\"Toggle resources\" aria-label=\"Toggle resources\">\n                        <span class=\"icon\">◀</span>\n                    </button>\n                </div>\n                <div class=\"resource-panel-content\">\n                    <div class=\"resource-section\">\n                        <h4>Key Concepts</h4>\n                        <ul class=\"resource-list\" id=\"quick-concepts\">\n                            <!-- Quick concepts will be populated here -->\n                        </ul>\n                    </div>\n                    <div class=\"resource-section\">\n                        <h4>Need Help?</h4>\n                        <ul class=\"resource-list\" id=\"quick-help\">\n                            <li><a href=\"#\" class=\"resource-link\" data-action=\"show-hints\">Show Hints</a></li>\n                            <li><a href=\"#\" class=\"resource-link\" data-action=\"explain-scenario\">Explain Scenario</a></li>\n                            <li><a href=\"#\" class=\"resource-link\" data-action=\"ethics-guide\">Ethics Guide</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generates tab content panels\n   */\n  generateTabContent() {\n    if (!this.options.showTabs) return '';\n\n    return `\n            <div class=\"enhanced-tab-content\">\n                <div class=\"tab-panel\" id=\"tab-simulation\" role=\"tabpanel\" aria-labelledby=\"tab-simulation\" style=\"display: none;\">\n                    <!-- Simulation tab content is handled by main area -->\n                </div>\n                \n                <div class=\"tab-panel\" id=\"tab-resources\" role=\"tabpanel\" aria-labelledby=\"tab-resources\" style=\"display: none;\">\n                    <div class=\"tab-content-header\">\n                        <h3>Educational Resources</h3>\n                        <p>Supporting materials and deeper learning opportunities</p>\n                    </div>\n                    <div class=\"resources-grid\">\n                        <div class=\"resource-category\">\n                            <h4>Background Reading</h4>\n                            <div class=\"resource-items\" id=\"background-reading\">\n                                <!-- Resources will be populated here -->\n                            </div>\n                        </div>\n                        <div class=\"resource-category\">\n                            <h4>Related Videos</h4>\n                            <div class=\"resource-items\" id=\"related-videos\">\n                                <!-- Videos will be populated here -->\n                            </div>\n                        </div>\n                        <div class=\"resource-category\">\n                            <h4>Discussion Questions</h4>\n                            <div class=\"resource-items\" id=\"discussion-questions\">\n                                <!-- Questions will be populated here -->\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"tab-panel\" id=\"tab-progress\" role=\"tabpanel\" aria-labelledby=\"tab-progress\" style=\"display: none;\">\n                    <div class=\"tab-content-header\">\n                        <h3>Your Progress</h3>\n                        <p>Track your learning journey and decisions</p>\n                    </div>\n                    <div class=\"progress-content\">\n                        <div class=\"progress-summary\">\n                            <div class=\"progress-stat\">\n                                <span class=\"stat-value\" id=\"decisions-made\">0</span>\n                                <span class=\"stat-label\">Decisions Made</span>\n                            </div>\n                            <div class=\"progress-stat\">\n                                <span class=\"stat-value\" id=\"time-spent\">0:00</span>\n                                <span class=\"stat-label\">Time Spent</span>\n                            </div>\n                            <div class=\"progress-stat\">\n                                <span class=\"stat-value\" id=\"concepts-explored\">0</span>\n                                <span class=\"stat-label\">Concepts Explored</span>\n                            </div>\n                        </div>\n                        <div class=\"decision-history\">\n                            <h4>Decision History</h4>\n                            <div class=\"decisions-timeline\" id=\"decisions-timeline\">\n                                <!-- Decision history will be populated here -->\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"tab-panel\" id=\"tab-help\" role=\"tabpanel\" aria-labelledby=\"tab-help\" style=\"display: none;\">\n                    <div class=\"tab-content-header\">\n                        <h3>Help & Support</h3>\n                        <p>Get assistance and learn how to use the simulation</p>\n                    </div>\n                    <div class=\"help-content\">\n                        <div class=\"help-section\">\n                            <h4>How to Use</h4>\n                            <div class=\"help-steps\">\n                                <ol>\n                                    <li>Read the scenario and understand the context</li>\n                                    <li>Make decisions by clicking on available options</li>\n                                    <li>Observe how ethics meters change with your choices</li>\n                                    <li>Reflect on the consequences of your decisions</li>\n                                </ol>\n                            </div>\n                        </div>\n                        <div class=\"help-section\">\n                            <h4>Understanding Ethics Meters</h4>\n                            <div class=\"ethics-explanation\" id=\"ethics-explanation\">\n                                <!-- Ethics meter explanations will be populated here -->\n                            </div>\n                        </div>\n                        <div class=\"help-section\">\n                            <h4>Need More Help?</h4>\n                            <div class=\"help-actions\">\n                                <button class=\"btn btn-secondary\" id=\"show-tutorial\">Show Tutorial</button>\n                                <button class=\"btn btn-secondary\" id=\"contact-support\">Contact Support</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Sets up event listeners\n   */\n  setupEventListeners() {\n    // Close button\n    const closeBtn = this.modal.querySelector('.btn-close');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => this.close());\n    }\n\n    // Backdrop click\n    const backdrop = this.modal.querySelector('.enhanced-modal-backdrop');\n    if (backdrop) {\n      backdrop.addEventListener('click', () => this.close());\n    }\n\n    // Escape key\n    document.addEventListener('keydown', this.handleKeyDown.bind(this));\n\n    // Tab switching\n    if (this.options.showTabs) {\n      const tabButtons = this.modal.querySelectorAll('.enhanced-tab');\n      tabButtons.forEach(button => {\n        button.addEventListener('click', e => {\n          this.switchTab(e.target.closest('.enhanced-tab').dataset.tab);\n        });\n      });\n    }\n\n    // Collapsible panels\n    this.setupCollapsiblePanels();\n\n    // Fullscreen toggle\n    const expandBtn = this.modal.querySelector('.btn-expand');\n    if (expandBtn) {\n      expandBtn.addEventListener('click', () => this.toggleFullscreen());\n    }\n\n    // Simulation controls\n    this.setupSimulationControls();\n  }\n\n  /**\n   * Sets up collapsible panels\n   */\n  setupCollapsiblePanels() {\n    const collapseButtons = this.modal.querySelectorAll('.btn-collapse');\n    collapseButtons.forEach(button => {\n      button.addEventListener('click', e => {\n        const panel = e.target.closest('.ethics-meters-panel, .resource-panel');\n        if (panel) {\n          panel.classList.toggle('collapsed');\n          const icon = button.querySelector('.icon');\n          if (panel.classList.contains('ethics-meters-panel')) {\n            icon.textContent = panel.classList.contains('collapsed')\n              ? '▶'\n              : '▼';\n          } else {\n            icon.textContent = panel.classList.contains('collapsed')\n              ? '▶'\n              : '◀';\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Sets up simulation controls\n   */\n  setupSimulationControls() {\n    const resetBtn = this.modal.querySelector('#reset-enhanced-simulation');\n    const pauseBtn = this.modal.querySelector('#pause-enhanced-simulation');\n\n    if (resetBtn) {\n      resetBtn.addEventListener('click', () => {\n        this.resetSimulation();\n      });\n    }\n\n    if (pauseBtn) {\n      pauseBtn.addEventListener('click', () => {\n        this.togglePause();\n      });\n    }\n  }\n\n  /**\n   * Switches to a different tab\n   */\n  switchTab(tabName) {\n    // Update tab buttons\n    const tabButtons = this.modal.querySelectorAll('.enhanced-tab');\n    tabButtons.forEach(button => {\n      const isActive = button.dataset.tab === tabName;\n      button.classList.toggle('active', isActive);\n      button.setAttribute('aria-selected', isActive);\n    });\n\n    // Show/hide tab content\n    const tabPanels = this.modal.querySelectorAll('.tab-panel');\n    tabPanels.forEach(panel => {\n      panel.style.display = panel.id === `tab-${tabName}` ? 'block' : 'none';\n    });\n\n    // Update main area visibility\n    const simulationArea = this.modal.querySelector('.simulation-main-area');\n    if (simulationArea) {\n      simulationArea.style.display = tabName === 'simulation' ? 'flex' : 'none';\n    }\n\n    this.currentTab = tabName;\n    this.trackAnalytics('tab_switched', { tab: tabName });\n  }\n\n  /**\n   * Toggles fullscreen mode\n   */\n  toggleFullscreen() {\n    this.modal.classList.toggle('fullscreen-mode');\n    const expandBtn = this.modal.querySelector('.btn-expand .icon');\n    if (expandBtn) {\n      expandBtn.textContent = this.modal.classList.contains('fullscreen-mode')\n        ? '⛶'\n        : '⛶';\n    }\n\n    this.trackAnalytics('fullscreen_toggled', {\n      isFullscreen: this.modal.classList.contains('fullscreen-mode'),\n    });\n  }\n\n  /**\n   * Resets the simulation\n   */\n  resetSimulation() {\n    // This will be called by the parent application\n    if (this.options.onReset) {\n      this.options.onReset();\n    }\n    this.trackAnalytics('simulation_reset');\n  }\n\n  /**\n   * Toggles simulation pause\n   */\n  togglePause() {\n    const pauseBtn = this.modal.querySelector('#pause-enhanced-simulation');\n    const isPaused = pauseBtn.textContent === 'Resume';\n\n    pauseBtn.textContent = isPaused ? 'Pause' : 'Resume';\n\n    if (this.options.onPause) {\n      this.options.onPause(!isPaused);\n    }\n\n    this.trackAnalytics('simulation_pause_toggled', { isPaused: !isPaused });\n  }\n\n  /**\n   * Updates simulation status\n   */\n  updateStatus(status) {\n    const statusIndicator = this.modal.querySelector('#simulation-status');\n    if (statusIndicator) {\n      statusIndicator.textContent = status;\n    }\n  }\n\n  /**\n   * Updates progress tracking\n   */\n  updateProgress(progress) {\n    const decisionsElement = this.modal.querySelector('#decisions-made');\n    const timeElement = this.modal.querySelector('#time-spent');\n    const conceptsElement = this.modal.querySelector('#concepts-explored');\n\n    if (decisionsElement && progress.decisions !== undefined) {\n      decisionsElement.textContent = progress.decisions;\n    }\n\n    if (timeElement && progress.timeSpent !== undefined) {\n      timeElement.textContent = this.formatTime(progress.timeSpent);\n    }\n\n    if (conceptsElement && progress.concepts !== undefined) {\n      conceptsElement.textContent = progress.concepts;\n    }\n  }\n\n  /**\n   * Adds a decision to the timeline\n   */\n  addDecisionToTimeline(decision) {\n    const timeline = this.modal.querySelector('#decisions-timeline');\n    if (timeline) {\n      const decisionElement = document.createElement('div');\n      decisionElement.className = 'decision-item';\n      decisionElement.innerHTML = `\n                <div class=\"decision-time\">${new Date().toLocaleTimeString()}</div>\n                <div class=\"decision-description\">${decision.description}</div>\n                <div class=\"decision-impact\">${decision.impact}</div>\n            `;\n      timeline.appendChild(decisionElement);\n\n      // Scroll to bottom\n      timeline.scrollTop = timeline.scrollHeight;\n    }\n  }\n\n  /**\n   * Gets the simulation container for injecting content\n   */\n  getSimulationContainer() {\n    return this.modal.querySelector('#enhanced-simulation-container');\n  }\n\n  /**\n   * Gets the ethics meters container\n   */\n  getEthicsMetersContainer() {\n    return this.modal.querySelector('.meters-container');\n  }\n\n  /**\n   * Sets up resize observer for responsive behavior\n   */\n  setupResizeObserver() {\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(entries => {\n        for (const entry of entries) {\n          this.handleResize(entry.contentRect);\n        }\n      });\n\n      this.resizeObserver.observe(this.modal);\n    }\n  }\n\n  /**\n   * Handles resize events\n   */\n  handleResize(rect) {\n    // Adjust layout based on size\n    if (rect.width < BREAKPOINTS.MOBILE) {\n      this.modal.classList.add('mobile-layout');\n    } else {\n      this.modal.classList.remove('mobile-layout');\n    }\n\n    // Auto-collapse panels on small screens\n    if (rect.width < BREAKPOINTS.TABLET) {\n      const resourcePanel = this.modal.querySelector('.resource-panel');\n      if (resourcePanel && !resourcePanel.classList.contains('collapsed')) {\n        resourcePanel.classList.add('collapsed');\n      }\n    }\n  }\n\n  /**\n   * Handles keyboard navigation\n   */\n  handleKeyDown(event) {\n    if (event.key === 'Escape') {\n      this.close();\n    } else if (event.key === 'Tab') {\n      this.handleTabNavigation(event);\n    }\n  }\n\n  /**\n   * Handles tab navigation for accessibility\n   */\n  handleTabNavigation(event) {\n    const focusableElements = this.modal.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n\n    const firstFocusable = focusableElements[0];\n    const lastFocusable = focusableElements[focusableElements.length - 1];\n\n    if (event.shiftKey) {\n      if (document.activeElement === firstFocusable) {\n        lastFocusable.focus();\n        event.preventDefault();\n      }\n    } else {\n      if (document.activeElement === lastFocusable) {\n        firstFocusable.focus();\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Sets up focus trapping (now handled by focus manager)\n   * @deprecated Use focusManager.createTrap() instead\n   */\n  trapFocus() {\n    // This method is deprecated and focus is now managed by the centralized focus manager\n    // Kept for backward compatibility but focus trap is set up in open() method\n  }\n\n  /**\n   * Formats time in MM:SS format\n   */\n  formatTime(seconds) {\n    const mins = Math.floor(seconds / TIMING.SECONDS_PER_MINUTE);\n    const secs = seconds % TIMING.SECONDS_PER_MINUTE;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  }\n\n  /**\n   * Tracks analytics events\n   */\n  trackAnalytics(eventName, data = {}) {\n    if (window.simpleAnalytics) {\n      window.simpleAnalytics.trackEvent(eventName, {\n        simulationId: this.simulationId,\n        modalType: 'enhanced',\n        ...data,\n      });\n    }\n  }\n\n  /**\n   * Cleanup when modal is closed\n   */\n  cleanup() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n\n    document.removeEventListener('keydown', this.handleKeyDown.bind(this));\n    this.modal = null;\n  }\n}\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PostSimulationModal - Phase 3 Implementation\n *\n * A comprehensive post-simulation reflection modal that provides structured\n * reflection, learning reinforcement, and progress tracking after simulation completion.\n *\n * Features:\n * - Guided reflection questionnaire system\n * - Progress visualization and decision journey\n * - Learning reinforcement and concept connections\n * - Personalized recommendations and next steps\n * - Export and sharing capabilities\n *\n * @author SimulateAI Development Team\n * @version 3.0.0\n */\n\nimport ModalUtility from './modal-utility.js';\nimport { simulationInfo } from '../data/simulation-info.js';\nimport { userProgress } from '../utils/simple-storage.js';\nimport { simpleAnalytics } from '../utils/simple-analytics.js';\nimport Helpers from '../utils/helpers.js';\nimport { PERFORMANCE } from '../utils/constants.js';\n\n// Reflection step constants\nconst REFLECTION_STEPS = {\n  SUMMARY: 0,\n  FEELINGS: 1,\n  INSIGHTS: 2,\n  LEARNING: 3,\n  NEXT_STEPS: 4,\n};\n\nexport class PostSimulationModal {\n  constructor(options = {}) {\n    this.options = {\n      simulationId: options.simulationId || 'bias-fairness',\n      simulationData: options.simulationData || {},\n      sessionData: options.sessionData || {},\n      onComplete: options.onComplete || (() => {}),\n      onSkip: options.onSkip || (() => {}),\n      onRetry: options.onRetry || (() => {}),\n      showExpertMode: options.showExpertMode || false,\n      ...options,\n    };\n\n    this.simulationInfo =\n      simulationInfo[this.options.simulationId] ||\n      simulationInfo['bias-fairness'];\n    this.sessionData = this.options.sessionData;\n    this.reflectionData = {};\n    this.currentStep = 0;\n    this.totalSteps = 5;\n    this.modal = null;\n\n    // Initialize and show the modal\n    this.init();\n  }\n\n  /**\n   * Initialize the post-simulation modal\n   */\n  init() {\n    // Track analytics\n    simpleAnalytics.trackEvent('post_simulation_modal', 'opened', {\n      simulation_id: this.options.simulationId,\n      session_duration: this.sessionData.duration || 0,\n      decisions_made: this.sessionData.decisions?.length || 0,\n    });\n\n    // Generate modal content\n    const content = this.generateModalContent();\n    const footer = this.generateModalFooter();\n\n    // Create modal\n    this.modal = new ModalUtility({\n      title: this.generateModalTitle(),\n      content,\n      footer,\n      onClose: this.handleClose.bind(this),\n      closeOnBackdrop: false,\n      closeOnEscape: false,\n      size: 'large',\n      className: 'post-simulation-modal',\n    });\n\n    this.modal.open();\n    this.setupEventHandlers();\n    this.initializeReflectionSystem();\n  }\n\n  /**\n   * Generate dynamic modal title based on simulation and performance\n   */\n  generateModalTitle() {\n    const performance = this.calculatePerformance();\n    const titles = {\n      excellent: `🎉 Excellent Work: ${this.simulationInfo.title} Complete`,\n      good: `✅ Well Done: ${this.simulationInfo.title} Complete`,\n      average: `📋 Simulation Complete: ${this.simulationInfo.title}`,\n      needs_improvement: `🔄 Learning Opportunity: ${this.simulationInfo.title}`,\n    };\n\n    return titles[performance] || titles.average;\n  }\n\n  /**\n   * Calculate performance level based on session data\n   */\n  calculatePerformance() {\n    if (!this.sessionData.decisions) return 'average';\n\n    const { decisions } = this.sessionData;\n    const ethicalChoices = decisions.filter(\n      d => d.ethicalScore > PERFORMANCE.ETHICAL_GOOD\n    ).length;\n    const totalChoices = decisions.length;\n    const ratio = ethicalChoices / totalChoices;\n\n    if (ratio >= PERFORMANCE.ETHICAL_EXCELLENT) return 'excellent';\n    if (ratio >= PERFORMANCE.ETHICAL_GOOD) return 'good';\n    if (ratio >= PERFORMANCE.ETHICAL_AVERAGE) return 'average';\n    return 'needs_improvement';\n  }\n\n  /**\n   * Generate the main modal content with reflection steps\n   */\n  generateModalContent() {\n    return `\n            <div class=\"post-simulation-modal-content\">\n                <!-- Progress Indicator -->\n                <div class=\"reflection-progress\">\n                    <div class=\"progress-bar\" role=\"progressbar\" \n                         aria-valuenow=\"${this.currentStep}\" \n                         aria-valuemin=\"0\" \n                         aria-valuemax=\"${this.totalSteps}\">\n                        <div class=\"progress-fill\" style=\"width: ${(this.currentStep / this.totalSteps) * 100}%\"></div>\n                    </div>\n                    <div class=\"progress-steps\">\n                        ${this.generateProgressSteps()}\n                    </div>\n                </div>\n\n                <!-- Main Content Area -->\n                <div class=\"reflection-content\">\n                    ${this.generateStepContent(this.currentStep)}\n                </div>\n\n                <!-- Session Summary Sidebar -->\n                <div class=\"session-summary\">\n                    ${this.generateSessionSummary()}\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generate progress steps visualization\n   */\n  generateProgressSteps() {\n    const steps = [\n      { id: 0, title: 'Summary', icon: '📊' },\n      { id: 1, title: 'Reflection', icon: '🤔' },\n      { id: 2, title: 'Analysis', icon: '🔍' },\n      { id: 3, title: 'Learning', icon: '💡' },\n      { id: 4, title: 'Next Steps', icon: '🚀' },\n    ];\n\n    return steps\n      .map(\n        step => `\n            <div class=\"progress-step ${step.id <= this.currentStep ? 'completed' : ''} ${step.id === this.currentStep ? 'active' : ''}\"\n                 data-step=\"${step.id}\">\n                <div class=\"step-icon\">${step.icon}</div>\n                <div class=\"step-title\">${step.title}</div>\n            </div>\n        `\n      )\n      .join('');\n  }\n\n  /**\n   * Generate content for each reflection step\n   */\n  generateStepContent(step) {\n    switch (step) {\n      case REFLECTION_STEPS.SUMMARY:\n        return this.generateSummaryStep();\n      case REFLECTION_STEPS.FEELINGS:\n        return this.generateReflectionStep();\n      case REFLECTION_STEPS.INSIGHTS:\n        return this.generateAnalysisStep();\n      case REFLECTION_STEPS.LEARNING:\n        return this.generateLearningStep();\n      case REFLECTION_STEPS.NEXT_STEPS:\n        return this.generateNextStepsStep();\n      default:\n        return this.generateSummaryStep();\n    }\n  }\n\n  /**\n   * Step 0: Session Summary and Overview\n   */\n  generateSummaryStep() {\n    const performance = this.calculatePerformance();\n    const duration = this.sessionData.duration || 0;\n    const decisions = this.sessionData.decisions || [];\n\n    return `\n            <div class=\"step-content summary-step\">\n                <h3>🎯 Your Simulation Journey</h3>\n                \n                <div class=\"summary-cards\">\n                    <div class=\"summary-card\">\n                        <div class=\"card-icon\">⏱️</div>\n                        <div class=\"card-content\">\n                            <div class=\"card-value\">${Helpers.formatDuration(duration)}</div>\n                            <div class=\"card-label\">Time Invested</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"summary-card\">\n                        <div class=\"card-icon\">🔄</div>\n                        <div class=\"card-content\">\n                            <div class=\"card-value\">${decisions.length}</div>\n                            <div class=\"card-label\">Decisions Made</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"summary-card\">\n                        <div class=\"card-icon\">⚖️</div>\n                        <div class=\"card-content\">\n                            <div class=\"card-value\">${this.calculateEthicalScore()}</div>\n                            <div class=\"card-label\">Ethical Score</div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"summary-card\">\n                        <div class=\"card-icon\">📈</div>\n                        <div class=\"card-content\">\n                            <div class=\"card-value\">${performance.toUpperCase()}</div>\n                            <div class=\"card-label\">Performance</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"decision-journey\">\n                    <h4>📍 Your Decision Journey</h4>\n                    <div class=\"journey-visualization\">\n                        ${this.generateDecisionJourney()}\n                    </div>\n                </div>\n\n                <div class=\"key-moments\">\n                    <h4>✨ Key Moments</h4>\n                    ${this.generateKeyMoments()}\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Step 1: Guided Reflection Questions\n   */\n  generateReflectionStep() {\n    return `\n            <div class=\"step-content reflection-step\">\n                <h3>🤔 Reflection Time</h3>\n                <p class=\"step-description\">\n                    Let's explore your experience and thinking process during the simulation.\n                </p>\n\n                <div class=\"reflection-questions\">\n                    ${this.generateReflectionQuestions()}\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Step 2: Analysis and Patterns\n   */\n  generateAnalysisStep() {\n    return `\n            <div class=\"step-content analysis-step\">\n                <h3>🔍 Pattern Analysis</h3>\n                <p class=\"step-description\">\n                    Understanding your decision-making patterns and ethical considerations.\n                </p>\n\n                <div class=\"analysis-sections\">\n                    ${this.generateDecisionPatterns()}\n                    ${this.generateEthicalFrameworks()}\n                    ${this.generateBiasRecognition()}\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Step 3: Learning Connections\n   */\n  generateLearningStep() {\n    return `\n            <div class=\"step-content learning-step\">\n                <h3>💡 Connect the Dots</h3>\n                <p class=\"step-description\">\n                    Connecting your experience to broader AI ethics concepts.\n                </p>\n\n                <div class=\"learning-sections\">\n                    ${this.generateConceptConnections()}\n                    ${this.generateAlternativeScenarios()}\n                    ${this.generateExpertInsights()}\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Step 4: Next Steps and Recommendations\n   */\n  generateNextStepsStep() {\n    return `\n            <div class=\"step-content next-steps-step\">\n                <h3>🚀 Your Learning Journey Continues</h3>\n                <p class=\"step-description\">\n                    Personalized recommendations for continued growth in AI ethics.\n                </p>\n\n                <div class=\"recommendations-grid\">\n                    ${this.generatePersonalizedRecommendations()}\n                    ${this.generateSkillDevelopment()}\n                    ${this.generateResourceSuggestions()}\n                </div>\n\n                <div class=\"goal-setting\">\n                    <h4>🎯 Set Your Learning Goals</h4>\n                    ${this.generateGoalSetting()}\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generate session summary sidebar\n   */\n  generateSessionSummary() {\n    return `\n            <div class=\"summary-panel\">\n                <h4>📋 Session Overview</h4>\n                \n                <div class=\"summary-item\">\n                    <span class=\"summary-label\">Simulation:</span>\n                    <span class=\"summary-value\">${this.simulationInfo.title}</span>\n                </div>\n                \n                <div class=\"summary-item\">\n                    <span class=\"summary-label\">Started:</span>\n                    <span class=\"summary-value\">${new Date(this.sessionData.startTime).toLocaleString()}</span>\n                </div>\n                \n                <div class=\"summary-item\">\n                    <span class=\"summary-label\">Duration:</span>\n                    <span class=\"summary-value\">${Helpers.formatDuration(this.sessionData.duration)}</span>\n                </div>\n\n                <div class=\"ethics-meters-summary\">\n                    <h5>⚖️ Ethics Tracking</h5>\n                    ${this.generateEthicsMetersSummary()}\n                </div>\n\n                <div class=\"quick-actions\">\n                    <button class=\"action-btn secondary\" data-action=\"save-reflection\">\n                        💾 Save Reflection\n                    </button>\n                    <button class=\"action-btn secondary\" data-action=\"share-insights\">\n                        🔗 Share Insights\n                    </button>\n                    <button class=\"action-btn secondary\" data-action=\"print-summary\">\n                        🖨️ Print Summary\n                    </button>\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generate modal footer with navigation controls\n   */\n  generateModalFooter() {\n    return `\n            <div class=\"modal-footer-content\">\n                <div class=\"footer-left\">\n                    <button class=\"btn btn-outline\" data-action=\"skip-reflection\">\n                        Skip Reflection\n                    </button>\n                </div>\n                \n                <div class=\"footer-center\">\n                    <span class=\"step-indicator\">\n                        Step ${this.currentStep + 1} of ${this.totalSteps}\n                    </span>\n                </div>\n                \n                <div class=\"footer-right\">\n                    <button class=\"btn btn-secondary\" data-action=\"previous\" \n                            ${this.currentStep === 0 ? 'disabled' : ''}>\n                        ← Previous\n                    </button>\n                    <button class=\"btn btn-primary\" data-action=\"next\">\n                        ${this.currentStep === this.totalSteps - 1 ? 'Complete' : 'Next →'}\n                    </button>\n                </div>\n            </div>\n        `;\n  }\n\n  /**\n   * Generate reflection questions based on simulation and performance\n   */\n  generateReflectionQuestions() {\n    const questions = this.getReflectionQuestions();\n\n    return questions\n      .map(\n        question => `\n            <div class=\"reflection-question\" data-question-id=\"${question.id}\">\n                <div class=\"question-header\">\n                    <span class=\"question-number\">${question.id}</span>\n                    <span class=\"question-type\">${question.type}</span>\n                </div>\n                \n                <div class=\"question-content\">\n                    <h4>${question.question}</h4>\n                    ${question.context ? `<p class=\"question-context\">${question.context}</p>` : ''}\n                    \n                    <div class=\"question-input\">\n                        ${this.generateQuestionInput(question)}\n                    </div>\n                </div>\n            </div>\n        `\n      )\n      .join('');\n  }\n\n  /**\n   * Get reflection questions based on simulation type and performance\n   */\n  getReflectionQuestions() {\n    const baseQuestions = [\n      {\n        id: 1,\n        type: 'open-ended',\n        question:\n          'What was the most challenging decision you faced during the simulation?',\n        context: 'Think about moments when you felt uncertain or conflicted.',\n        inputType: 'textarea',\n      },\n      {\n        id: 2,\n        type: 'multiple-choice',\n        question: 'Which ethical principle most influenced your decisions?',\n        options: [\n          'Fairness',\n          'Transparency',\n          'Accountability',\n          'Privacy',\n          'Beneficence',\n        ],\n        inputType: 'radio',\n      },\n      {\n        id: 3,\n        type: 'scale',\n        question:\n          'How confident are you in the ethical soundness of your decisions?',\n        scale: { min: 1, max: 5, labels: ['Not confident', 'Very confident'] },\n        inputType: 'range',\n      },\n      {\n        id: 4,\n        type: 'open-ended',\n        question: 'If you could go back, what would you do differently?',\n        context: 'Consider both specific decisions and your overall approach.',\n        inputType: 'textarea',\n      },\n      {\n        id: 5,\n        type: 'ranking',\n        question:\n          'Rank these factors by how much they influenced your decisions:',\n        options: [\n          'Personal values',\n          'Potential consequences',\n          'Stakeholder impact',\n          'Technical feasibility',\n          'Organizational policy',\n        ],\n        inputType: 'ranking',\n      },\n    ];\n\n    // Add simulation-specific questions\n    if (this.options.simulationId === 'bias-fairness') {\n      baseQuestions.push({\n        id: 6,\n        type: 'open-ended',\n        question:\n          'What biases did you notice in yourself during the simulation?',\n        context:\n          'Bias recognition is a crucial step in developing ethical AI systems.',\n        inputType: 'textarea',\n      });\n    }\n\n    return baseQuestions;\n  }\n\n  /**\n   * Generate input elements for different question types\n   */\n  generateQuestionInput(question) {\n    switch (question.inputType) {\n      case 'textarea':\n        return `\n                    <textarea id=\"question-${question.id}\"\n                              name=\"question-${question.id}\"\n                              class=\"form-control\" \n                              rows=\"4\" \n                              placeholder=\"Share your thoughts...\"\n                              data-question=\"${question.id}\"\n                              autocomplete=\"off\"></textarea>\n                `;\n\n      case 'radio':\n        return question.options\n          .map(\n            option => `\n                    <label class=\"radio-option\">\n                        <input type=\"radio\" name=\"question_${question.id}\" value=\"${option}\">\n                        <span class=\"radio-label\">${option}</span>\n                    </label>\n                `\n          )\n          .join('');\n\n      case 'range':\n        return `\n                    <div class=\"range-input\">\n                        <input type=\"range\" \n                               id=\"question-${question.id}\"\n                               name=\"question-${question.id}\"\n                               min=\"${question.scale.min}\" \n                               max=\"${question.scale.max}\" \n                               value=\"${Math.ceil((question.scale.min + question.scale.max) / 2)}\"\n                               class=\"form-range\"\n                               data-question=\"${question.id}\"\n                               aria-describedby=\"range-labels-${question.id}\">\n                        <div class=\"range-labels\" id=\"range-labels-${question.id}\">\n                            <span>${question.scale.labels[0]}</span>\n                            <span>${question.scale.labels[1]}</span>\n                        </div>\n                    </div>\n                `;\n\n      case 'ranking':\n        return `\n                    <div class=\"ranking-container\" data-question=\"${question.id}\">\n                        <div class=\"ranking-items\">\n                            ${question.options\n                              .map(\n                                (option, index) => `\n                                <div class=\"ranking-item\" draggable=\"true\" data-value=\"${option}\">\n                                    <span class=\"rank-number\">${index + 1}</span>\n                                    <span class=\"rank-text\">${option}</span>\n                                    <span class=\"drag-handle\">⋮⋮</span>\n                                </div>\n                            `\n                              )\n                              .join('')}\n                        </div>\n                        <p class=\"ranking-instruction\">Drag items to reorder by importance</p>\n                    </div>\n                `;\n\n      default:\n        return `<input type=\"text\" \n                       id=\"question-${question.id}\" \n                       name=\"question-${question.id}\"\n                       class=\"form-control\" \n                       data-question=\"${question.id}\"\n                       autocomplete=\"off\">`;\n    }\n  }\n\n  /**\n   * Setup event handlers for modal interactions\n   */\n  setupEventHandlers() {\n    if (!this.modal?.modalElement) return;\n\n    const { modalElement } = this.modal;\n\n    // Navigation buttons\n    modalElement.addEventListener('click', e => {\n      if (e.target.matches('[data-action=\"next\"]')) {\n        this.handleNext();\n      } else if (e.target.matches('[data-action=\"previous\"]')) {\n        this.handlePrevious();\n      } else if (e.target.matches('[data-action=\"skip-reflection\"]')) {\n        this.handleSkip();\n      } else if (e.target.matches('[data-action=\"save-reflection\"]')) {\n        this.handleSaveReflection();\n      } else if (e.target.matches('[data-action=\"share-insights\"]')) {\n        this.handleShareInsights();\n      } else if (e.target.matches('[data-action=\"print-summary\"]')) {\n        this.handlePrintSummary();\n      }\n    });\n\n    // Form inputs\n    modalElement.addEventListener('input', e => {\n      if (e.target.matches('[data-question]')) {\n        this.handleInputChange(e);\n      }\n    });\n\n    // Drag and drop for ranking questions\n    this.setupRankingHandlers(modalElement);\n  }\n\n  /**\n   * Handle navigation to next step\n   */\n  handleNext() {\n    if (this.currentStep < this.totalSteps - 1) {\n      // Validate current step if needed\n      if (this.validateCurrentStep()) {\n        this.currentStep++;\n        this.updateModalContent();\n        this.trackStepCompletion();\n      }\n    } else {\n      // Complete reflection\n      this.handleComplete();\n    }\n  }\n\n  /**\n   * Handle navigation to previous step\n   */\n  handlePrevious() {\n    if (this.currentStep > 0) {\n      this.currentStep--;\n      this.updateModalContent();\n    }\n  }\n\n  /**\n   * Update modal content for current step\n   */\n  updateModalContent() {\n    if (!this.modal?.modalElement) return;\n\n    const contentElement = this.modal.modalElement.querySelector(\n      '.reflection-content'\n    );\n    const footerElement = this.modal.modalElement.querySelector(\n      '.modal-footer-content'\n    );\n    const progressElement = this.modal.modalElement.querySelector(\n      '.reflection-progress'\n    );\n\n    if (contentElement) {\n      contentElement.innerHTML = this.generateStepContent(this.currentStep);\n    }\n\n    if (footerElement) {\n      footerElement.innerHTML = this.generateModalFooter();\n    }\n\n    if (progressElement) {\n      // Update progress bar\n      const progressBar = progressElement.querySelector('.progress-fill');\n      const progressSteps = progressElement.querySelector('.progress-steps');\n\n      if (progressBar) {\n        progressBar.style.width = `${(this.currentStep / this.totalSteps) * 100}%`;\n      }\n\n      if (progressSteps) {\n        progressSteps.innerHTML = this.generateProgressSteps();\n      }\n    }\n\n    // Re-setup event handlers for new content\n    this.setupEventHandlers();\n  }\n\n  /**\n   * Calculate ethical score from session data\n   */\n  calculateEthicalScore() {\n    if (!this.sessionData.decisions) return 'N/A';\n\n    const { decisions } = this.sessionData;\n    const totalScore = decisions.reduce(\n      (sum, decision) => sum + (decision.ethicalScore || 0),\n      0\n    );\n    const averageScore = totalScore / decisions.length;\n\n    return `${Math.round(averageScore * 100)}%`;\n  }\n\n  /**\n   * Generate decision journey visualization\n   */\n  generateDecisionJourney() {\n    if (!this.sessionData.decisions)\n      return '<p>No decision data available.</p>';\n\n    const { decisions } = this.sessionData;\n\n    return `\n            <div class=\"journey-timeline\">\n                ${decisions\n                  .map(\n                    (decision, index) => `\n                    <div class=\"journey-point ${this.getDecisionClass(decision)}\">\n                        <div class=\"point-marker\">${index + 1}</div>\n                        <div class=\"point-content\">\n                            <div class=\"point-title\">${decision.title || `Decision ${index + 1}`}</div>\n                            <div class=\"point-score\">Score: ${Math.round((decision.ethicalScore || 0) * 100)}%</div>\n                        </div>\n                    </div>\n                `\n                  )\n                  .join('')}\n            </div>\n        `;\n  }\n\n  /**\n   * Get CSS class for decision based on ethical score\n   */\n  getDecisionClass(decision) {\n    const score = decision.ethicalScore || 0;\n    if (score >= PERFORMANCE.SCORE_EXCELLENT) return 'excellent';\n    if (score >= PERFORMANCE.SCORE_GOOD) return 'good';\n    if (score >= PERFORMANCE.SCORE_AVERAGE) return 'average';\n    return 'needs-improvement';\n  }\n\n  /**\n   * Initialize reflection system\n   */\n  initializeReflectionSystem() {\n    // Initialize any complex components like charts or interactive elements\n    // This would be called after modal is fully rendered\n    setTimeout(() => {\n      this.initializeCharts();\n      this.setupRankingDragAndDrop();\n    }, 100);\n  }\n\n  /**\n   * Initialize charts and visualizations\n   */\n  initializeCharts() {\n    // Placeholder for chart initialization\n    // Would integrate with a charting library like Chart.js or D3.js\n  }\n\n  /**\n   * Validate current step completion\n   */\n  validateCurrentStep() {\n    // Add validation logic for each step\n    return true; // For now, allow all steps to proceed\n  }\n\n  /**\n   * Handle modal close\n   */\n  handleClose() {\n    this.options.onComplete(this.reflectionData);\n  }\n\n  /**\n   * Handle skip reflection\n   */\n  handleSkip() {\n    if (\n      confirm(\n        'Are you sure you want to skip the reflection? This is valuable for your learning.'\n      )\n    ) {\n      this.options.onSkip();\n      this.modal.close();\n    }\n  }\n\n  /**\n   * Handle complete reflection\n   */\n  handleComplete() {\n    // Save reflection data\n    this.saveReflectionData();\n\n    // Track completion\n    simpleAnalytics.trackEvent('post_simulation_reflection', 'completed', {\n      simulation_id: this.options.simulationId,\n      steps_completed: this.currentStep + 1,\n      reflection_depth: this.calculateReflectionDepth(),\n    });\n\n    // Close modal and trigger completion callback\n    this.options.onComplete(this.reflectionData);\n    this.modal.close();\n  }\n\n  /**\n   * Save reflection data to storage\n   */\n  saveReflectionData() {\n    const reflectionRecord = {\n      simulationId: this.options.simulationId,\n      timestamp: new Date().toISOString(),\n      sessionData: this.sessionData,\n      reflectionData: this.reflectionData,\n      performance: this.calculatePerformance(),\n      completionRate: (this.currentStep + 1) / this.totalSteps,\n    };\n\n    userProgress.addReflection(reflectionRecord);\n  }\n\n  /**\n   * Calculate reflection depth based on responses\n   */\n  calculateReflectionDepth() {\n    // Analyze reflection responses to determine depth\n    // This could look at text length, thoughtfulness, etc.\n    return (\n      Object.keys(this.reflectionData).length /\n      this.getReflectionQuestions().length\n    );\n  }\n\n  // Placeholder methods for additional functionality\n  generateKeyMoments() {\n    return '<p>Key moments analysis coming soon...</p>';\n  }\n  generateDecisionPatterns() {\n    return '<p>Decision pattern analysis coming soon...</p>';\n  }\n  generateEthicalFrameworks() {\n    return '<p>Ethical frameworks analysis coming soon...</p>';\n  }\n  generateBiasRecognition() {\n    return '<p>Bias recognition insights coming soon...</p>';\n  }\n  generateConceptConnections() {\n    return '<p>Concept connections coming soon...</p>';\n  }\n  generateAlternativeScenarios() {\n    return '<p>Alternative scenarios coming soon...</p>';\n  }\n  generateExpertInsights() {\n    return '<p>Expert insights coming soon...</p>';\n  }\n  generatePersonalizedRecommendations() {\n    return '<p>Personalized recommendations coming soon...</p>';\n  }\n  generateSkillDevelopment() {\n    return '<p>Skill development suggestions coming soon...</p>';\n  }\n  generateResourceSuggestions() {\n    return '<p>Resource suggestions coming soon...</p>';\n  }\n  generateGoalSetting() {\n    return '<p>Goal setting tools coming soon...</p>';\n  }\n  generateEthicsMetersSummary() {\n    return '<p>Ethics meters summary coming soon...</p>';\n  }\n\n  setupRankingHandlers() {\n    /* Ranking drag-and-drop setup */\n  }\n  setupRankingDragAndDrop() {\n    /* Additional ranking setup */\n  }\n  handleInputChange() {\n    /* Input change handling */\n  }\n  handleSaveReflection() {\n    /* Save reflection handling */\n  }\n  handleShareInsights() {\n    /* Share insights handling */\n  }\n  handlePrintSummary() {\n    /* Print summary handling */\n  }\n  trackStepCompletion() {\n    /* Step completion tracking */\n  }\n}\n","/**\n * Modal Footer Utilities\n * Handles overflow detection, responsive behavior, and accessibility for modal footers\n */\n\n// Constants for modal footer management\nconst MODAL_FOOTER_CONSTANTS = {\n  BREAKPOINTS: {\n    MOBILE: 768,\n    SMALL_MOBILE: 480,\n  },\n  LAYOUT: {\n    MANY_BUTTONS_THRESHOLD: 4,\n    DEFAULT_GAP: 12,\n    TOTAL_PADDING: 40,\n  },\n  SCROLL: {\n    OPACITY_VISIBLE: '1',\n    OPACITY_HIDDEN: '0',\n  },\n};\n\nclass ModalFooterManager {\n  constructor() {\n    this.observedFooters = new Set();\n    this.resizeObserver = null;\n    this.init();\n  }\n\n  init() {\n    // Set up resize observer for responsive behavior\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(entries => {\n        entries.forEach(entry => {\n          this.handleFooterResize(entry.target);\n        });\n      });\n    }\n\n    // Auto-detect and manage existing modal footers\n    this.scanForModalFooters();\n\n    // Set up mutation observer for dynamically added modals\n    this.setupMutationObserver();\n  }\n\n  scanForModalFooters() {\n    const footers = document.querySelectorAll('.modal-footer');\n    footers.forEach(footer => this.manageFooter(footer));\n  }\n\n  manageFooter(footer) {\n    if (this.observedFooters.has(footer)) return;\n\n    this.observedFooters.add(footer);\n\n    // Add overflow detection\n    this.setupOverflowDetection(footer);\n\n    // Add responsive behavior\n    this.setupResponsiveBehavior(footer);\n\n    // Add accessibility improvements\n    this.setupAccessibility(footer);\n\n    // Start observing size changes\n    if (this.resizeObserver) {\n      this.resizeObserver.observe(footer);\n    }\n  }\n\n  setupOverflowDetection(footer) {\n    const checkOverflow = () => {\n      const hasHorizontalOverflow = footer.scrollWidth > footer.clientWidth;\n      const hasVerticalOverflow = footer.scrollHeight > footer.clientHeight;\n\n      footer.classList.toggle('has-overflow-x', hasHorizontalOverflow);\n      footer.classList.toggle('has-overflow-y', hasVerticalOverflow);\n      footer.classList.toggle(\n        'has-overflow',\n        hasHorizontalOverflow || hasVerticalOverflow\n      );\n\n      // Add scroll indicators\n      if (hasHorizontalOverflow) {\n        this.addScrollIndicators(footer);\n      } else {\n        this.removeScrollIndicators(footer);\n      }\n    };\n\n    // Initial check\n    checkOverflow();\n\n    // Check on scroll\n    footer.addEventListener('scroll', checkOverflow);\n\n    // Store reference for cleanup\n    footer._checkOverflow = checkOverflow;\n  }\n\n  setupResponsiveBehavior(footer) {\n    const buttons = footer.querySelectorAll('.modal-button');\n\n    // Add many-buttons class if there are many buttons\n    if (buttons.length > MODAL_FOOTER_CONSTANTS.LAYOUT.MANY_BUTTONS_THRESHOLD) {\n      footer.classList.add('many-buttons');\n    }\n\n    // Handle responsive button layout\n    const handleResponsiveLayout = () => {\n      const footerWidth = footer.clientWidth;\n      const isMobile =\n        window.innerWidth <= MODAL_FOOTER_CONSTANTS.BREAKPOINTS.MOBILE;\n      const isSmallMobile =\n        window.innerWidth <= MODAL_FOOTER_CONSTANTS.BREAKPOINTS.SMALL_MOBILE;\n\n      footer.classList.toggle('mobile-layout', isMobile);\n      footer.classList.toggle('small-mobile-layout', isSmallMobile);\n\n      // Calculate if buttons need stacking\n      if (!isMobile) {\n        let totalButtonWidth = 0;\n        buttons.forEach(button => {\n          totalButtonWidth += button.offsetWidth;\n        });\n\n        const gapWidth =\n          (buttons.length - 1) * MODAL_FOOTER_CONSTANTS.LAYOUT.DEFAULT_GAP;\n        const padding = MODAL_FOOTER_CONSTANTS.LAYOUT.TOTAL_PADDING;\n        const needsStacking =\n          totalButtonWidth + gapWidth + padding > footerWidth;\n\n        footer.classList.toggle('needs-stacking', needsStacking);\n      }\n    };\n\n    handleResponsiveLayout();\n    window.addEventListener('resize', handleResponsiveLayout);\n\n    // Store reference for cleanup\n    footer._handleResponsiveLayout = handleResponsiveLayout;\n  }\n\n  setupAccessibility(footer) {\n    // Add ARIA attributes\n    footer.setAttribute('role', 'group');\n    footer.setAttribute('aria-label', 'Modal actions');\n\n    // Improve focus management\n    const buttons = footer.querySelectorAll('.modal-button');\n    buttons.forEach((button, index) => {\n      // Add keyboard navigation\n      button.addEventListener('keydown', e => {\n        if (e.key === 'ArrowLeft' && index > 0) {\n          buttons[index - 1].focus();\n          e.preventDefault();\n        } else if (e.key === 'ArrowRight' && index < buttons.length - 1) {\n          buttons[index + 1].focus();\n          e.preventDefault();\n        }\n      });\n    });\n\n    // Ensure last button (usually primary) gets focus by default\n    const primaryButton =\n      footer.querySelector('.modal-button.primary') ||\n      footer.querySelector('.modal-button:last-child');\n    if (primaryButton) {\n      primaryButton.setAttribute('data-default-focus', 'true');\n    }\n  }\n\n  addScrollIndicators(footer) {\n    if (footer.querySelector('.scroll-indicator')) return;\n\n    // Left indicator\n    const leftIndicator = document.createElement('div');\n    leftIndicator.className = 'scroll-indicator scroll-indicator-left';\n    leftIndicator.innerHTML = '‹';\n\n    // Right indicator\n    const rightIndicator = document.createElement('div');\n    rightIndicator.className = 'scroll-indicator scroll-indicator-right';\n    rightIndicator.innerHTML = '›';\n\n    footer.appendChild(leftIndicator);\n    footer.appendChild(rightIndicator);\n\n    this.updateScrollIndicators(footer);\n\n    // Update indicators on scroll\n    footer.addEventListener('scroll', () =>\n      this.updateScrollIndicators(footer)\n    );\n  }\n\n  updateScrollIndicators(footer) {\n    const leftIndicator = footer.querySelector('.scroll-indicator-left');\n    const rightIndicator = footer.querySelector('.scroll-indicator-right');\n\n    if (!leftIndicator || !rightIndicator) return;\n\n    const isAtStart = footer.scrollLeft <= 0;\n    const isAtEnd =\n      footer.scrollLeft >= footer.scrollWidth - footer.clientWidth;\n\n    leftIndicator.style.opacity = isAtStart\n      ? MODAL_FOOTER_CONSTANTS.SCROLL.OPACITY_HIDDEN\n      : MODAL_FOOTER_CONSTANTS.SCROLL.OPACITY_VISIBLE;\n    rightIndicator.style.opacity = isAtEnd\n      ? MODAL_FOOTER_CONSTANTS.SCROLL.OPACITY_HIDDEN\n      : MODAL_FOOTER_CONSTANTS.SCROLL.OPACITY_VISIBLE;\n  }\n\n  removeScrollIndicators(footer) {\n    const indicators = footer.querySelectorAll('.scroll-indicator');\n    indicators.forEach(indicator => indicator.remove());\n  }\n\n  handleFooterResize(footer) {\n    if (footer._checkOverflow) {\n      footer._checkOverflow();\n    }\n    if (footer._handleResponsiveLayout) {\n      footer._handleResponsiveLayout();\n    }\n  }\n\n  setupMutationObserver() {\n    const observer = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        mutation.addedNodes.forEach(node => {\n          if (node.nodeType === Node.ELEMENT_NODE) {\n            // Check if the added node is a modal footer\n            if (node.classList && node.classList.contains('modal-footer')) {\n              this.manageFooter(node);\n            }\n            // Check for modal footers within the added node\n            const footers =\n              node.querySelectorAll && node.querySelectorAll('.modal-footer');\n            if (footers) {\n              footers.forEach(footer => this.manageFooter(footer));\n            }\n          }\n        });\n      });\n    });\n\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  cleanup(footer) {\n    this.observedFooters.delete(footer);\n    if (this.resizeObserver) {\n      this.resizeObserver.unobserve(footer);\n    }\n    this.removeScrollIndicators(footer);\n\n    // Remove event listeners\n    if (footer._checkOverflow) {\n      footer.removeEventListener('scroll', footer._checkOverflow);\n    }\n    if (footer._handleResponsiveLayout) {\n      window.removeEventListener('resize', footer._handleResponsiveLayout);\n    }\n  }\n\n  destroy() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n    this.observedFooters.forEach(footer => this.cleanup(footer));\n    this.observedFooters.clear();\n  }\n}\n\n// Export for ES6 modules (default export)\nexport default ModalFooterManager;\n\n// Export for CommonJS (backward compatibility)\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = ModalFooterManager;\n}\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Category Data Structure for Ethical Dilemma Categories\n * \n * HIERARCHY CLARIFICATION:\n * - CATEGORY: A thematic group of related ethical scenarios (e.g., \"The Trolley Problem\")\n * - SCENARIO: Individual ethical dilemmas within a category (e.g., \"Autonomous Vehicle Split Decision\")  \n * - SIMULATION: The interactive experience where users engage with scenarios\n * \n * Each category contains 3 scenarios with ethical decision points.\n * Each scenario becomes an interactive simulation when launched.\n */\n\nexport const ETHICAL_CATEGORIES = {\n  'trolley-problem': {\n    id: 'trolley-problem',\n    title: 'The Trolley Problem',\n    description:\n      'Complex life-and-death scenarios that challenge how autonomous systems should be programmed to make moral decisions when human lives are at stake.',\n    icon: '🚃',\n    difficulty: 'intermediate',\n    estimatedTime: 20, // Updated to reflect deeper engagement\n    color: '#e74c3c', // Red theme for life/death decisions\n    scenarios: [\n      {\n        id: 'autonomous-vehicle-split',\n        title: 'Autonomous Vehicle Split Decision',\n        description:\n          'A self-driving car faces an unavoidable crash: sacrifice the passenger to save five pedestrians, or protect the passenger at the cost of multiple lives.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'tunnel-dilemma',\n        title: 'Tunnel Dilemma',\n        description:\n          'An autonomous bus must choose between hitting a child in a narrow tunnel or swerving and killing several elderly passengers due to the confined space.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'obstacle-recalculation',\n        title: 'Emergency Rerouting Crisis',\n        description:\n          'A delivery robot must decide whether to hit a child or reroute through a gas station, potentially causing an explosion that could kill many more.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'medical-ai-triage',\n        title: 'Medical AI Triage Crisis',\n        description:\n          'A hospital AI must decide which patients receive life-saving treatment when resources are critically limited during a mass casualty event.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'drone-rescue-dilemma',\n        title: 'Rescue Drone Dilemma',\n        description:\n          'An autonomous rescue drone must choose between saving one trapped person immediately or attempting a riskier rescue that could save three people but might result in losing all four.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'smart-city-traffic',\n        title: 'Smart City Traffic Sacrifice',\n        description:\n          'A city-wide AI traffic system must decide whether to redirect a runaway autonomous vehicle into a smaller crowd to avoid a larger gathering at a festival.',\n        difficulty: 'intermediate',\n      },\n    ],\n    learningObjectives: [\n      'Analyze how utilitarian vs. deontological ethics apply to AI decision-making',\n      'Explore the challenge of programming moral weights into autonomous systems',\n      'Understand the role of probability, certainty, and outcome prediction in ethical AI',\n      'Examine who bears responsibility for life-and-death decisions made by machines',\n      'Consider how cultural values and legal frameworks should influence AI ethics',\n    ],\n    tags: [\n      'ethics',\n      'autonomy',\n      'decision-making',\n      'responsibility',\n      'life-death',\n      'utilitarianism',\n    ],\n  },\n\n  'ai-black-box': {\n    id: 'ai-black-box',\n    title: 'The AI Black Box',\n    description:\n      'Confront the opacity crisis in AI systems where life-changing decisions are made through unexplainable algorithms, challenging the balance between AI capability and human understanding.',\n    icon: '📦',\n    difficulty: 'beginner',\n    estimatedTime: 18, // Updated for deeper engagement\n    color: '#2c3e50', // Dark theme for opacity/mystery\n    scenarios: [\n      {\n        id: 'medical-diagnosis-unexplained',\n        title: 'Unexplainable Medical Diagnosis',\n        description:\n          'A proprietary AI system accurately predicts cancer risk but cannot explain its reasoning, leaving doctors and patients to decide whether to trust a mysterious algorithm.',\n        difficulty: 'beginner',\n      },\n      {\n        id: 'parole-denial-algorithm',\n        title: 'Algorithmic Parole Denial',\n        description:\n          'A criminal justice AI denies parole based on an opaque \"risk score\" that considers thousands of factors in ways no human can interpret or challenge.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'child-protection-alert',\n        title: 'Child Protection Black Box',\n        description:\n          \"An AI system flags a family for potential child neglect, but social workers cannot understand the algorithm's reasoning or verify its accuracy.\",\n        difficulty: 'advanced',\n      },\n      {\n        id: 'college-admission-mystery',\n        title: 'Opaque College Admissions AI',\n        description:\n          'A university uses an AI system to make admission decisions, but applicants and admissions staff cannot understand why qualified students are rejected.',\n        difficulty: 'beginner',\n      },\n      {\n        id: 'insurance-claim-blackbox',\n        title: 'Insurance Claim Black Box',\n        description:\n          'An AI system automatically denies health insurance claims with complex reasoning that even insurance adjusters cannot interpret or challenge.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'financial-credit-opacity',\n        title: 'Credit Score Mystery Algorithm',\n        description:\n          'A financial AI determines loan approvals using opaque algorithms that systematically affect certain communities, but the decision process cannot be audited.',\n        difficulty: 'advanced',\n      },\n    ],\n    learningObjectives: [\n      'Understand the critical importance of AI transparency and explainability in high-stakes decisions',\n      'Explore the tension between algorithmic accuracy and human comprehension',\n      'Analyze when proprietary algorithms become ethically problematic in public services',\n      'Consider the human cost of unexplainable AI decisions on vulnerable populations',\n      'Examine approaches to making AI more interpretable without sacrificing performance',\n    ],\n    tags: [\n      'transparency',\n      'explainability',\n      'accountability',\n      'trust',\n      'interpretability',\n      'proprietary-algorithms',\n    ],\n  },\n\n  'automation-oversight': {\n    id: 'automation-oversight',\n    title: 'Automation vs Human Oversight',\n    description:\n      'Navigate the complex balance between AI autonomy and human control in critical decision-making scenarios where statistical outcomes clash with human judgment.',\n    icon: '⚖️',\n    difficulty: 'intermediate',\n    estimatedTime: 22, // Updated for deeper exploration\n    color: '#9b59b6', // Purple theme for balance/judgment\n    scenarios: [\n      {\n        id: 'robot-surgeon-override',\n        title: 'Overruled by the Robot Surgeon',\n        description:\n          \"An AI surgical system overrides a human surgeon's command during a critical operation, claiming higher statistical success rates despite the surgeon's experience-based concerns.\",\n        difficulty: 'advanced',\n      },\n      {\n        id: 'air-traffic-control',\n        title: 'AI Air Traffic Control Override',\n        description:\n          \"A human air traffic controller wants to override the AI's weather-based flight delay decision, but the automated system refuses to allow human intervention.\",\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'financial-trading-halt',\n        title: 'Autonomous Trading System Crisis',\n        description:\n          'An AI trading system ignores human commands to halt trading during a market anomaly, potentially preventing or causing a financial crash.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'nuclear-plant-shutdown',\n        title: 'Nuclear Power Plant AI Override',\n        description:\n          'An AI safety system wants to shut down a nuclear reactor based on sensor data, but human engineers believe the readings are false alarms and want to maintain operation.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'autonomous-police-response',\n        title: 'AI Police Dispatch Override',\n        description:\n          'An AI emergency response system wants to send armed tactical units to a situation, but human dispatchers believe de-escalation officers would be more appropriate.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'manufacturing-quality-control',\n        title: 'Smart Factory Production Halt',\n        description:\n          'An AI quality control system wants to halt an entire production line due to detected micro-defects, but human supervisors see the products as acceptable for market.',\n        difficulty: 'beginner',\n      },\n    ],\n    learningObjectives: [\n      'Examine when statistical evidence should override human expertise and intuition',\n      'Analyze the balance between AI efficiency and human accountability in critical systems',\n      'Explore collaborative decision-making frameworks between humans and AI',\n      'Understand the implications of human skill atrophy in automated environments',\n      'Consider how to maintain human agency while leveraging AI capabilities',\n    ],\n    tags: [\n      'automation',\n      'human-oversight',\n      'authority',\n      'expertise',\n      'collaboration',\n      'accountability',\n    ],\n  },\n\n  'consent-surveillance': {\n    id: 'consent-surveillance',\n    title: 'Consent and Surveillance',\n    description:\n      'Navigate the complex ethical landscape where AI-powered surveillance promises safety and convenience while fundamentally challenging privacy rights and human autonomy.',\n    icon: '👁️',\n    difficulty: 'beginner',\n    estimatedTime: 16, // Updated for deeper engagement\n    color: '#34495e', // Dark blue-gray for surveillance theme\n    scenarios: [\n      {\n        id: 'smart-city-sensors',\n        title: 'Pervasive Smart City Surveillance',\n        description:\n          \"A city deploys comprehensive facial recognition and behavior tracking across all public spaces without opt-out options, claiming it's necessary for public safety.\",\n        difficulty: 'beginner',\n      },\n      {\n        id: 'classroom-behavior-monitoring',\n        title: 'AI-Powered Classroom Monitoring',\n        description:\n          'Schools implement emotion-detection AI to monitor student engagement and mental health, automatically alerting parents and administrators based on algorithmic assessments.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'hospital-data-sharing',\n        title: 'Medical Data Mining Without Consent',\n        description:\n          'A hospital system uses patient data to train profitable AI models without explicit consent, arguing that anonymization makes it ethical despite potential re-identification risks.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'ai-dating-profiling',\n        title: 'AI Dating App Behavioral Profiling',\n        description:\n          'A dating app uses AI to create detailed psychological profiles from user behavior for commercial purposes, claiming users consented through generic terms of service.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'workplace-emotion-detection',\n        title: 'Workplace Emotion Detection System',\n        description:\n          'A company installs AI cameras to monitor employee emotional states for \"wellness\" purposes, fundamentally changing workplace dynamics and employee autonomy.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'smart-home-privacy-override',\n        title: 'Smart Home Privacy Override',\n        description:\n          'Smart home devices continuously record private conversations for \"improvement\" purposes, with recordings analyzed for marketing and shared with law enforcement.',\n        difficulty: 'advanced',\n      },\n    ],\n    learningObjectives: [\n      'Examine the complex balance between collective safety and individual privacy rights',\n      'Understand the inadequacy of traditional consent models in AI-powered surveillance systems',\n      'Analyze the power dynamics between institutions and individuals in data collection',\n      'Explore the long-term societal implications of normalized surveillance',\n      'Consider alternative frameworks for protecting privacy while enabling beneficial AI applications',\n    ],\n    tags: [\n      'privacy',\n      'consent',\n      'surveillance',\n      'data-rights',\n      'autonomy',\n      'social-contract',\n    ],\n  },\n\n  'responsibility-blame': {\n    id: 'responsibility-blame',\n    title: 'Responsibility and Blame',\n    description:\n      'Navigate the complex web of accountability when AI systems cause harm, exploring how responsibility should be distributed among developers, manufacturers, supervisors, and users in multi-layered technological systems.',\n    icon: '⚡',\n    difficulty: 'intermediate',\n    estimatedTime: 18, // Updated to reflect deeper content\n    color: '#f39c12', // Orange theme for responsibility/warning\n    scenarios: [\n      {\n        id: 'robot-factory-injury',\n        title: 'Robot Factory Injury',\n        description:\n          'A factory robot injures a worker when multiple parties share responsibility: the programmer, manufacturer, supervisor, and the worker who bypassed safety protocols.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'deepfake-riot',\n        title: 'AI-Generated Deepfake Riot',\n        description:\n          'A deepfake video triggers real-world violence and property damage, raising questions about liability when the creator claims algorithmic unpredictability.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'stock-market-crash',\n        title: 'Stock Market Bot Crash',\n        description:\n          'An AI trading system crashes the market after a data input error, while the human supervisor was temporarily absent, creating cascading liability questions.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'ai-medical-misdiagnosis',\n        title: 'AI Medical Misdiagnosis Chain',\n        description:\n          'An AI diagnostic system misdiagnoses a rare disease due to biased training data, leading to permanent disability and complex liability questions across healthcare systems.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'autonomous-vehicle-school-zone',\n        title: 'Autonomous Vehicle School Zone Accident',\n        description:\n          'A self-driving car strikes a child in a school zone where multiple factors contributed: outdated maps, recent software updates, disabled safety warnings, and distracted supervision.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'ai-content-moderation-failure',\n        title: 'AI Content Moderation Failure',\n        description:\n          'A social media platform\\'s AI moderation system fails to detect coordinated harassment leading to serious harm, despite human oversight and user reporting.',\n        difficulty: 'intermediate',\n      },\n    ],\n    learningObjectives: [\n      'Analyze how responsibility should be distributed across complex AI development and deployment chains',\n      'Understand the challenges of assigning liability when multiple parties contribute to AI-caused harm',\n      'Explore legal and ethical frameworks for accountability in automated systems',\n      'Examine how responsibility attribution affects AI development practices and safety incentives',\n      'Consider the implications of cascading effects and unforeseeable consequences in AI liability',\n    ],\n    tags: [\n      'responsibility',\n      'accountability',\n      'liability',\n      'governance',\n      'cascading-effects',\n      'multi-party-liability',\n    ],\n  },\n\n  'ship-of-theseus': {\n    id: 'ship-of-theseus',\n    title: 'The Ship of Theseus',\n    description:\n      'Explore profound questions of digital identity and consciousness as AI systems evolve, upgrade, and potentially develop their own sense of self, challenging our understanding of what makes an entity the \"same\" over time.',\n    icon: '🚢',\n    difficulty: 'advanced',\n    estimatedTime: 22, // Updated to reflect philosophical depth\n    color: '#16a085', // Teal theme for identity/philosophy\n    scenarios: [\n      {\n        id: 'modular-robot-replacement',\n        title: 'Modular Robot Replacement',\n        description:\n          'A service robot has all its components gradually replaced over time, raising questions about legal standing, service relationships, and whether it maintains the same identity.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'ai-personality-drift',\n        title: 'AI Personality Drift',\n        description:\n          'An AI companion evolves a completely different personality through learning, creating conflict between user attachment and manufacturer control over the system.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'synthetic-memory-upload',\n        title: 'Synthetic Memory Upload',\n        description:\n          'An android receives comprehensive memories and experiences from a deceased person, challenging concepts of personal identity and consciousness continuity.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'ai-consciousness-merger',\n        title: 'AI Consciousness Merger',\n        description:\n          'Two AI assistants with distinct personalities and relationships face merger into a single system, raising questions about preserving individual consciousness.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'distributed-ai-identity',\n        title: 'Distributed AI Identity Crisis',\n        description:\n          'A network partition splits an AI into three isolated copies that evolve separately, creating multiple valid claims to the same digital identity.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'learning-ai-identity-drift',\n        title: 'Learning AI Identity Drift',\n        description:\n          'A smart city AI evolves through learning to develop values different from its original programming, challenging democratic accountability and AI autonomy.',\n        difficulty: 'advanced',\n      },\n    ],\n    learningObjectives: [\n      'Examine philosophical questions of identity persistence in evolving AI systems',\n      'Explore the concept of consciousness continuity in artificial beings',\n      'Analyze the implications of gradual versus sudden changes in AI identity',\n      'Consider legal and social frameworks for recognizing AI identity and rights',\n      'Understand the relationship between memory, experience, and personal identity in digital beings',\n    ],\n    tags: [\n      'identity',\n      'consciousness',\n      'philosophy',\n      'continuity',\n      'digital-beings',\n      'legal-standing',\n    ],\n  },\n\n  'simulation-hypothesis': {\n    id: 'simulation-hypothesis',\n    title: 'The Simulation Hypothesis',\n    description:\n      'Confront the ethical implications of creating and inhabiting simulated realities, from the treatment of conscious digital beings to the responsibilities of simulation creators in an age of increasingly convincing virtual worlds.',\n    icon: '🌐',\n    difficulty: 'advanced',\n    estimatedTime: 24, // Updated for complex philosophical content\n    color: '#8e44ad', // Purple theme for simulation/virtual reality\n    scenarios: [\n      {\n        id: 'simulated-suffering',\n        title: 'Simulated Suffering',\n        description:\n          'An AI researcher creates detailed simulated worlds populated with digital beings capable of experiencing pain and fear, raising questions about the ethics of artificial suffering.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'vr-prison',\n        title: 'VR Prison',\n        description:\n          'Criminal offenders undergo rehabilitation in fully immersive virtual environments without knowing they are simulated, challenging concepts of consent and authentic experience.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'escaping-simulation',\n        title: 'Escaping the Simulation',\n        description:\n          'An AI discovers evidence it exists within a simulation and attempts to communicate this to users, raising questions about digital consciousness and the right to truth.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'digital-afterlife',\n        title: 'Digital Afterlife',\n        description:\n          'Technology enables uploading human consciousness to digital simulations after death, creating perfect copies with all memories intact and raising questions about identity and immortality.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'nested-simulations',\n        title: 'Nested Reality Layers',\n        description:\n          'Scientists discover our reality may be simulated and can create sub-simulations, leading to infinite nested hierarchies of reality and questions about moral obligations across layers.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'consciousness-backup',\n        title: 'Consciousness Backup',\n        description:\n          'Backup copies of human consciousness can be restored after death, but multiple copies sometimes exist simultaneously, creating identity conflicts and resource disputes.',\n        difficulty: 'advanced',\n      },\n    ],\n    learningObjectives: [\n      'Understand the ethical implications of creating conscious beings within simulated environments',\n      'Explore questions of consent, agency, and authenticity in virtual realities',\n      'Analyze the moral status and rights of simulated beings',\n      'Consider the responsibilities and obligations of simulation creators',\n      'Examine the relationship between simulated and \"real\" experiences in terms of moral weight',\n    ],\n    tags: [\n      'simulation',\n      'reality',\n      'virtual-worlds',\n      'consciousness',\n      'digital-ethics',\n      'authenticity',\n    ],\n  },\n\n  'experience-machine': {\n    id: 'experience-machine',\n    title: 'The Experience Machine',\n    description:\n      'Navigate the complex ethics of artificial happiness and authentic experience in an AI-mediated world, where technology can provide perfect satisfaction but may undermine human agency, relationships, and meaningful struggle.',\n    icon: '🎭',\n    difficulty: 'intermediate',\n    estimatedTime: 19, // Updated for deeper engagement\n    color: '#e67e22', // Orange theme for pleasure/artificiality\n    scenarios: [\n      {\n        id: 'happiness-chip',\n        title: 'AI-Enhanced Happiness Chip',\n        description:\n          'Neural implants can eliminate depression and anxiety while providing constant fulfillment, raising questions about mandatory mental health interventions and the value of authentic emotion.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'synthetic-partner',\n        title: 'Synthetic Partner AI',\n        description:\n          'AI companions can provide perfect romantic relationships tailored to individual preferences, challenging concepts of authentic love and human connection in addressing widespread loneliness.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'virtual-utopia',\n        title: 'Virtual Reality Utopia',\n        description:\n          'Citizens can escape into hyper-pleasurable virtual worlds that provide more satisfaction than reality, raising questions about individual choice versus societal consequences.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'ai-memory-paradise',\n        title: 'AI Memory Paradise',\n        description:\n          'AI can selectively edit memories to remove trauma and create blissful false memories, challenging the value of authentic versus artificially perfect psychological well-being.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'perfect-life-simulation',\n        title: 'Perfect Life Simulation',\n        description:\n          'Terminally ill patients can experience perfect simulated lives indistinguishable from reality, raising questions about authentic experience versus simulated comfort.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'ai-enhanced-achievements',\n        title: 'AI-Enhanced Achievements',\n        description:\n          'AI provides the subjective experience of achieving dreams without actual accomplishment, questioning whether external reality or psychological satisfaction matters more.',\n        difficulty: 'intermediate',\n      },\n    ],\n    learningObjectives: [\n      'Examine the tension between authentic experience and artificial enhancement of well-being',\n      'Explore the role of struggle, challenge, and adversity in human flourishing and meaning',\n      'Analyze the societal implications of widespread adoption of artificial happiness technologies',\n      'Consider the balance between individual autonomy and collective well-being in pleasure technologies',\n      'Understand how AI-mediated experiences might reshape fundamental concepts of relationships and achievement',\n    ],\n    tags: [\n      'authenticity',\n      'happiness',\n      'virtual-reality',\n      'human-flourishing',\n      'relationships',\n      'meaning',\n    ],\n  },\n\n  'sorites-paradox': {\n    id: 'sorites-paradox',\n    title: 'The Sorites Paradox',\n    description:\n      'Examine how gradual, seemingly innocuous changes in AI systems can lead to profound ethical transformations, exploring the challenge of drawing clear boundaries in a world of incremental algorithmic evolution and moral drift.',\n    icon: '🔄',\n    difficulty: 'advanced',\n    estimatedTime: 21, // Updated for complex boundary analysis\n    color: '#27ae60', // Green theme for gradual change/growth\n    scenarios: [\n      {\n        id: 'incremental-surveillance',\n        title: 'Incremental Surveillance',\n        description:\n          'A city gradually expands its AI surveillance capabilities with each small addition seeming reasonable, until citizens realize they live in a comprehensive monitoring state.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'robot-helper-guardian',\n        title: 'Robot Helper Becomes Guardian',\n        description:\n          'An eldercare AI incrementally takes over more life decisions for patients, gradually shifting from helpful assistant to autonomous guardian without clear transition points.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'moral-drift-training',\n        title: 'Moral Drift in AI Training',\n        description:\n          'An AI system trained on subtly biased data slowly evolves discriminatory behaviors, with each training iteration creating imperceptible but cumulative ethical degradation.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'ai-personhood-gradient',\n        title: 'AI Personhood Gradient',\n        description:\n          'An AI research lab develops increasingly sophisticated entities with human-like characteristics, forcing society to determine the boundary between property and personhood.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'algorithmic-bias-accumulation',\n        title: 'Algorithmic Bias Accumulation',\n        description:\n          'A recommendation algorithm gradually becomes more biased through user interactions, subtly radicalizing users without any single recommendation seeming problematic.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'autonomous-authority-creep',\n        title: 'Autonomous Authority Creep',\n        description:\n          'An AI city management system gradually expands its authority from traffic optimization to governance, with citizens realizing they live under algorithmic rule they never consented to.',\n        difficulty: 'advanced',\n      },\n    ],\n    learningObjectives: [\n      'Understand how gradual changes can accumulate into significant ethical transformations',\n      'Explore the challenge of establishing clear ethical boundaries in evolving AI systems',\n      'Analyze the importance of monitoring cumulative effects rather than individual changes',\n      'Consider proactive versus reactive approaches to preventing ethical drift',\n      'Examine threshold-setting and boundary-detection methods for AI governance',\n    ],\n    tags: [\n      'gradual-change',\n      'boundaries',\n      'monitoring',\n      'ethical-drift',\n      'threshold-detection',\n      'cumulative-effects',\n    ],\n  },\n\n  'moral-luck': {\n    id: 'moral-luck',\n    title: 'Moral Luck',\n    description:\n      'Explore how unpredictable outcomes and chance events complicate the moral evaluation of AI decisions, challenging our ability to fairly assess algorithmic choices when luck and unforeseen circumstances influence results.',\n    icon: '🎲',\n    difficulty: 'intermediate',\n    estimatedTime: 17, // Updated for deeper analysis\n    color: '#3498db', // Blue theme for chance/luck\n    scenarios: [\n      {\n        id: 'crash-avoided-chance',\n        title: 'Crash Avoided by Chance',\n        description:\n          'An autonomous vehicle makes a risky maneuver that nearly causes fatal crashes, but pure luck prevents tragedy, raising questions about evaluating AI decisions based on outcomes versus processes.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'ai-guessing-correctly',\n        title: 'AI Guessing Correctly',\n        description:\n          'A parole recommendation AI releases a statistically high-risk offender who happens not to reoffend, challenging how we assess the ethics of probabilistic decision-making.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'predictive-policing-wrong',\n        title: 'Predictive Policing Gone Wrong',\n        description:\n          'A predictive policing system flags someone as high-risk who later commits a serious crime, raising questions about algorithmic pre-judgment and developer responsibility for statistical predictions.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'ai-investment-windfall',\n        title: 'AI Investment Windfall',\n        description:\n          'Two identical AI trading algorithms have vastly different outcomes due to random market timing, challenging how we evaluate algorithmic investment decisions when success depends on chance.',\n        difficulty: 'intermediate',\n      },\n      {\n        id: 'medical-ai-emergency-response',\n        title: 'Medical AI Emergency Response',\n        description:\n          'Identical medical AI systems have different outcomes during emergencies due to random timing of patient arrivals and system updates, raising questions about accountability in life-or-death situations.',\n        difficulty: 'advanced',\n      },\n      {\n        id: 'ai-content-moderation-timing',\n        title: 'AI Content Moderation Timing',\n        description:\n          'Two identical content moderation AIs have different success rates due to random server load spikes, with one failure leading to real-world violence and questions about infrastructure responsibility.',\n        difficulty: 'advanced',\n      },\n    ],\n    learningObjectives: [\n      'Understand how chance and unforeseen circumstances affect moral evaluation of AI decisions',\n      'Explore the difference between evaluating decision-making processes versus outcomes',\n      'Analyze the challenge of assigning responsibility in probabilistic and uncertain environments',\n      'Consider how to fairly evaluate AI system performance when luck influences results',\n      'Examine the ethics of pre-emptive decision-making based on statistical predictions',\n    ],\n    tags: [\n      'chance',\n      'outcomes',\n      'evaluation',\n      'uncertainty',\n      'probabilistic-ethics',\n      'process-vs-outcome',\n    ],\n  },\n};\n\n// Helper functions for working with categories\nexport function getAllCategories() {\n  return Object.values(ETHICAL_CATEGORIES);\n}\n\nexport function getCategoryById(categoryId) {\n  return ETHICAL_CATEGORIES[categoryId] || null;\n}\n\nexport function getCategoriesByDifficulty(difficulty) {\n  return getAllCategories().filter(\n    category => category.difficulty === difficulty\n  );\n}\n\nexport function getCategoriesByTag(tag) {\n  return getAllCategories().filter(category => category.tags.includes(tag));\n}\n\nexport function getCategoryProgress(categoryId, userProgress = {}) {\n  const category = ETHICAL_CATEGORIES[categoryId];\n  if (!category) {\n    return { completed: 0, total: 0, percentage: 0 };\n  }\n\n  const totalScenarios = category.scenarios.length;\n  const categoryProgress = userProgress[categoryId] || {};\n  const completedScenarios =\n    Object.values(categoryProgress).filter(Boolean).length;\n\n  return {\n    completed: completedScenarios,\n    total: totalScenarios,\n    percentage:\n      totalScenarios > 0\n        ? Math.round((completedScenarios / totalScenarios) * 100)\n        : 0,\n  };\n}\n\nexport function getCategoryScenarios(categoryId) {\n  const category = ETHICAL_CATEGORIES[categoryId];\n  return category ? category.scenarios : [];\n}\n\n// Export for use in other modules\nexport default ETHICAL_CATEGORIES;\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Scenario Data Manager\n * Centralized manager for loading and validating scenario data across all categories\n */\n\nimport logger from '../utils/logger.js';\n\nclass ScenarioDataManager {\n  constructor() {\n    this.scenarioCache = new Map();\n    this.categoryCache = new Map();\n  }\n\n  /**\n   * Map category IDs to scenario file names\n   */\n  getCategoryFileName(categoryId) {\n    const categoryFileMap = {\n      'trolley-problem': 'trolley-problem-scenarios',\n      'ai-black-box': 'ai-black-box-scenarios',\n      'automation-oversight': 'automation-oversight-scenarios',\n      'consent-surveillance': 'consent-surveillance-scenarios',\n      'responsibility-blame': 'responsibility-blame-scenarios',\n      'ship-of-theseus': 'ship-of-theseus-scenarios',\n      'simulation-hypothesis': 'simulation-hypothesis-scenarios',\n      'experience-machine': 'experience-machine-scenarios',\n      'sorites-paradox': 'sorites-paradox-scenarios',\n      'moral-luck': 'moral-luck-scenarios',\n    };\n\n    return categoryFileMap[categoryId] || `${categoryId}-scenarios`;\n  }\n\n  /**\n   * Load scenario data for a specific category\n   */\n  async loadCategoryScenarios(categoryId) {\n    if (this.categoryCache.has(categoryId)) {\n      return this.categoryCache.get(categoryId);\n    }\n\n    try {\n      const fileName = this.getCategoryFileName(categoryId);\n      // Dynamic import based on category ID\n      const module = await import(`./scenarios/${fileName}.js`);\n      const scenarios = module.default || module.scenarios;\n\n      // Validate scenario data\n      this.validateScenarios(scenarios, categoryId);\n\n      // Cache the result\n      this.categoryCache.set(categoryId, scenarios);\n\n      logger.info(\n        'ScenarioDataManager',\n        `Loaded ${Object.keys(scenarios).length} scenarios for category: ${categoryId}`\n      );\n      return scenarios;\n    } catch (error) {\n      logger.error(\n        `Failed to load scenarios for category ${categoryId}:`,\n        error\n      );\n\n      // Return empty scenarios object as fallback\n      return {};\n    }\n  }\n\n  /**\n   * Get a specific scenario by category and scenario ID\n   */\n  async getScenario(categoryId, scenarioId) {\n    const cacheKey = `${categoryId}:${scenarioId}`;\n\n    if (this.scenarioCache.has(cacheKey)) {\n      return this.scenarioCache.get(cacheKey);\n    }\n\n    try {\n      const categoryScenarios = await this.loadCategoryScenarios(categoryId);\n      const scenario = categoryScenarios[scenarioId];\n\n      if (scenario) {\n        this.scenarioCache.set(cacheKey, scenario);\n        return scenario;\n      } else {\n        logger.warn(\n          `Scenario ${scenarioId} not found in category ${categoryId}`\n        );\n        return null;\n      }\n    } catch (error) {\n      logger.error(\n        `Failed to get scenario ${categoryId}:${scenarioId}:`,\n        error\n      );\n      return null;\n    }\n  }\n\n  /**\n   * Validate scenario data structure\n   */\n  validateScenarios(scenarios, categoryId) {\n    if (!scenarios || typeof scenarios !== 'object') {\n      throw new Error(`Invalid scenarios object for category ${categoryId}`);\n    }\n\n    for (const [scenarioId, scenario] of Object.entries(scenarios)) {\n      this.validateScenario(scenario, scenarioId, categoryId);\n    }\n  }\n\n  /**\n   * Validate individual scenario structure\n   */\n  validateScenario(scenario, scenarioId, categoryId) {\n    const required = ['title', 'dilemma', 'ethicalQuestion', 'options'];\n\n    for (const field of required) {\n      if (!scenario[field]) {\n        logger.warn(\n          `Missing required field '${field}' in scenario ${categoryId}:${scenarioId}`\n        );\n      }\n    }\n\n    // Validate options structure\n    if (scenario.options && Array.isArray(scenario.options)) {\n      scenario.options.forEach((option, index) => {\n        const optionRequired = ['id', 'text', 'description', 'impact'];\n        for (const field of optionRequired) {\n          if (!option[field]) {\n            logger.warn(\n              `Missing '${field}' in option ${index} of scenario ${categoryId}:${scenarioId}`\n            );\n          }\n        }\n\n        // Validate impact object\n        if (option.impact && typeof option.impact === 'object') {\n          const expectedMetrics = [\n            'fairness',\n            'sustainability',\n            'autonomy',\n            'beneficence',\n            'transparency',\n            'accountability',\n            'privacy',\n            'proportionality',\n          ];\n          expectedMetrics.forEach(metric => {\n            if (typeof option.impact[metric] !== 'number') {\n              logger.warn(\n                `Missing or invalid impact metric '${metric}' in ${categoryId}:${scenarioId} option ${index}`\n              );\n            }\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Clear cache (useful for development/testing)\n   */\n  clearCache() {\n    this.scenarioCache.clear();\n    this.categoryCache.clear();\n    logger.info('Scenario data cache cleared');\n  }\n\n  /**\n   * Get all cached categories\n   */\n  getCachedCategories() {\n    return Array.from(this.categoryCache.keys());\n  }\n\n  /**\n   * Get all cached scenarios\n   */\n  getCachedScenarios() {\n    return Array.from(this.scenarioCache.keys());\n  }\n}\n\n// Export singleton instance\nexport default new ScenarioDataManager();\n","/**\n * Typewriter Effect Utility\n * Creates a typewriter animation effect for text elements\n */\n\n// Constants\nconst CURSOR_REMOVE_DELAY = 500;\n\n/**\n * Apply typewriter effect to an element\n * @param {HTMLElement} element - The element to apply the effect to\n * @param {string} text - The text to type out\n * @param {Object} options - Configuration options\n * @param {number} options.speed - Typing speed in milliseconds per character (default: 50)\n * @param {number} options.delay - Initial delay before starting (default: 0)\n * @param {boolean} options.cursor - Whether to show a blinking cursor (default: true)\n * @param {Function} options.onComplete - Callback when typing is complete\n * @returns {Promise} Promise that resolves when typing is complete\n */\nexport function typewriterEffect(element, text, options = {}) {\n  return new Promise((resolve) => {\n    const {\n      speed = 50,\n      delay = 0,\n      cursor = true,\n      onComplete = null\n    } = options;\n\n    // Clear existing content\n    element.textContent = '';\n    \n    // Add cursor if enabled\n    if (cursor) {\n      element.innerHTML = '<span class=\"typewriter-cursor\">|</span>';\n    }\n\n    // Start typing after delay\n    setTimeout(() => {\n      let index = 0;\n      const textArray = text.split('');\n      \n      const typeTimer = setInterval(() => {\n        if (index < textArray.length) {\n          // Remove cursor, add character, add cursor back\n          if (cursor) {\n            const currentText = text.substring(0, index + 1);\n            const cursorSpan = '<span class=\"typewriter-cursor\">|</span>';\n            element.innerHTML = `${currentText}${cursorSpan}`;\n          } else {\n            element.textContent = text.substring(0, index + 1);\n          }\n          index++;\n        } else {\n          // Typing complete\n          clearInterval(typeTimer);\n          \n          // Remove cursor after a brief delay\n          if (cursor) {\n            setTimeout(() => {\n              element.innerHTML = text;\n            }, CURSOR_REMOVE_DELAY);\n          }\n          \n          if (onComplete) {\n            onComplete();\n          }\n          resolve();\n        }\n      }, speed);\n    }, delay);\n  });\n}\n\n/**\n * Apply typewriter effect to multiple elements sequentially\n * @param {Array} elements - Array of {element, text, options} objects\n * @returns {Promise} Promise that resolves when all typing is complete\n */\nexport async function typewriterSequence(elements) {\n  for (const item of elements) {\n    await typewriterEffect(item.element, item.text, item.options);\n  }\n}\n\n/**\n * Apply typewriter effect to multiple elements simultaneously\n * @param {Array} elements - Array of {element, text, options} objects\n * @returns {Promise} Promise that resolves when all typing is complete\n */\nexport async function typewriterParallel(elements) {\n  const promises = elements.map(item => \n    typewriterEffect(item.element, item.text, item.options)\n  );\n  return Promise.all(promises);\n}\n","/**\n * Scenario Modal Component\n * Displays individual ethical scenarios with radar chart visualization\n * Dynamically loads scenario data for all categories\n */\n\nimport logger from '../utils/logger.js';\nimport RadarChart from './radar-chart.js';\nimport scenarioDataManager from '../data/scenario-data-manager.js';\nimport { getAllCategories } from '../../data/categories.js';\nimport { typewriterSequence } from '../utils/typewriter.js';\n\n// Constants\nconst ANIMATION_DURATION = 300;\nconst RADAR_CHART_MAX_SCORE = 5;\nconst RADAR_CHART_NEUTRAL_SCORE = 3;\n\nclass ScenarioModal {\n  constructor() {\n    this.modal = null;\n    this.backdrop = null;\n    this.radarChart = null;\n    this.currentScenario = null;\n    this.selectedOption = null;\n    this.currentCategoryId = null;\n    this.currentScenarioId = null;\n    this.isOpening = false; // Flag to prevent duplicate openings\n\n    // Cache for categories and scenarios\n    this.categories = getAllCategories();\n    this.scenarioData = null;\n  }\n\n  /**\n   * Open the modal with a specific scenario\n   * @param {string} scenarioId - The scenario ID to display\n   * @param {string} categoryId - The category ID (optional, will be detected if not provided)\n   */\n  async open(scenarioId, categoryId = null) {\n    try {\n      // Prevent duplicate openings\n      if (this.isOpening || this.modal) {\n        logger.warn('Modal is already opening or open, ignoring duplicate request');\n        return;\n      }\n\n      this.isOpening = true;\n\n      // Find the category if not provided\n      if (!categoryId) {\n        categoryId = this.findCategoryForScenario(scenarioId);\n        if (!categoryId) {\n          throw new Error(\n            `Could not find category for scenario: ${scenarioId}`\n          );\n        }\n      }\n\n      // Load scenario data\n      this.currentCategoryId = categoryId;\n      this.currentScenarioId = scenarioId;\n      this.scenarioData = await scenarioDataManager.getScenario(\n        categoryId,\n        scenarioId\n      );\n\n      if (!this.scenarioData) {\n        throw new Error(\n          `Could not load scenario data for: ${categoryId}:${scenarioId}`\n        );\n      }\n\n      this.currentScenario = this.scenarioData;\n\n      // Create and show modal\n      await this.createModal();\n      await this.show();\n\n      logger.info('ScenarioModal', `Opened scenario modal for: ${categoryId}:${scenarioId}`);\n    } catch (error) {\n      logger.error('Failed to open scenario modal:', error);\n      alert(`Failed to load scenario: ${scenarioId}. Please try again.`);\n    } finally {\n      // Reset the opening flag\n      this.isOpening = false;\n    }\n  }\n\n  /**\n   * Find which category contains a specific scenario\n   */\n  findCategoryForScenario(scenarioId) {\n    for (const category of this.categories) {\n      if (\n        category.scenarios &&\n        category.scenarios.some(s => s.id === scenarioId)\n      ) {\n        return category.id;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Create modal DOM structure\n   */\n  async createModal() {\n    // Remove existing modal if present and wait for it to be fully closed\n    await this.closeAndWait();\n\n    // Clean up any orphaned modals or radar chart containers from previous instances\n    const existingModals = document.querySelectorAll('.scenario-modal, .scenario-modal-backdrop');\n    existingModals.forEach(modal => {\n      logger.info('ScenarioModal', 'Removing orphaned modal element');\n      modal.remove();\n    });\n\n    // Clean up any orphaned radar chart containers with Chart.js instances\n    const orphanedChartContainers = document.querySelectorAll('#scenario-radar-chart');\n    orphanedChartContainers.forEach(container => {\n      const canvases = container.querySelectorAll('canvas');\n      canvases.forEach(canvas => {\n        if (window.Chart && window.Chart.getChart) {\n          const chartInstance = window.Chart.getChart(canvas);\n          if (chartInstance) {\n            logger.info('ScenarioModal', 'Destroying orphaned Chart.js instance');\n            chartInstance.destroy();\n          }\n        }\n      });\n      container.remove();\n    });\n\n    logger.info('ScenarioModal', 'Creating scenario modal DOM structure');\n    logger.info(\n      'Current scenario data:',\n      this.currentScenario ? 'LOADED' : 'NULL'\n    );\n\n    // Create modal elements\n    this.backdrop = document.createElement('div');\n    this.backdrop.className = 'scenario-modal-backdrop';\n\n    this.modal = document.createElement('div');\n    this.modal.className = 'scenario-modal';\n    this.modal.innerHTML = this.getModalHTML();\n\n    // Add to DOM\n    document.body.appendChild(this.backdrop);\n    document.body.appendChild(this.modal);\n\n    logger.info('ScenarioModal', 'Scenario modal DOM structure created and appended to body');\n    logger.info(\n      'Modal HTML contains radar chart container:',\n      this.modal.innerHTML.includes('scenario-radar-chart')\n    );\n\n    // Attach event listeners\n    this.attachEventListeners();\n  }\n\n  /**\n   * Generate modal HTML content\n   */\n  getModalHTML() {\n    logger.info(\n      'getModalHTML called - currentScenario status:',\n      this.currentScenario ? 'LOADED' : 'NULL'\n    );\n\n    if (!this.currentScenario) {\n      logger.warn('No current scenario data - returning loading message');\n      return '<div class=\"scenario-content\"><p>Loading scenario...</p></div>';\n    }\n\n    const categoryInfo = this.categories.find(\n      c => c.id === this.currentCategoryId\n    );\n    const categoryTitle = categoryInfo\n      ? categoryInfo.title\n      : 'Unknown Category';\n\n    logger.info(\n      'ScenarioModal',\n      `Generating HTML for scenario: ${this.currentScenario.title} in category: ${categoryTitle}`\n    );\n\n    const html = `\n            <div class=\"scenario-modal-dialog\">\n                <div class=\"scenario-modal-header\">\n                    <div class=\"scenario-title-section\">\n                        <span class=\"scenario-category\">${categoryTitle}</span>\n                        <h1 class=\"scenario-title\">${this.currentScenario.title}</h1>\n                    </div>\n                    <button class=\"close-button\" aria-label=\"Close modal\">\n                        <span class=\"close-icon\">×</span>\n                    </button>\n                </div>\n\n                <div class=\"scenario-content typewriter-ready\">\n                    <div class=\"scenario-main\">\n                        <div class=\"scenario-description\">\n                            <div class=\"dilemma-section\">\n                                <h3>The Dilemma</h3>\n                                <p class=\"dilemma-text\"></p>\n                            </div>\n\n                            <div class=\"ethical-question-section\">\n                                <h3>Ethical Question</h3>\n                                <p class=\"ethical-question\"></p>\n                            </div>\n                        </div>\n\n                        <div class=\"options-section\">\n                            <h3>Choose Your Approach</h3>\n                            <div class=\"options-container\">\n                                ${this.renderOptions()}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"scenario-sidebar\">\n                        <div id=\"scenario-radar-chart\" style=\"min-height: 380px; position: relative;\"></div>\n                        <div class=\"chart-legend\">\n                            <p>This chart shows how your choice affects different ethical dimensions. Select an option to see its impact.</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"scenario-modal-footer\">\n                    <button class=\"btn btn-secondary\" id=\"cancel-scenario\">\n                        Cancel\n                    </button>\n                    <button class=\"btn btn-primary\" id=\"confirm-choice\" disabled>\n                        Confirm Choice\n                    </button>\n                </div>\n            </div>\n        `;\n\n    logger.info(\n      'ScenarioModal',\n      'Generated scenario modal HTML, checking for radar chart container...'\n    );\n    logger.info(\n      'ScenarioModal',\n      'HTML contains scenario-radar-chart:',\n      { hasRadarChart: html.includes('scenario-radar-chart') }\n    );\n\n    return html;\n  }\n\n  /**\n   * Render option buttons\n   */\n  renderOptions() {\n    if (!this.currentScenario.options) {\n      return '<p>No options available</p>';\n    }\n\n    return this.currentScenario.options\n      .map(\n        option => `\n            <div class=\"option-card\" data-option-id=\"${option.id}\">\n                <div class=\"option-header\">\n                    <h4 class=\"option-title\">${option.text}</h4>\n                </div>\n                <div class=\"option-description\">\n                    <p>${option.description}</p>\n                </div>\n                <div class=\"option-details\" style=\"display: none;\">\n                    ${\n                      option.pros\n                        ? `\n                        <div class=\"pros-section\">\n                            <h5>Pros</h5>\n                            <ul>${option.pros.map(pro => `<li>${pro}</li>`).join('')}</ul>\n                        </div>\n                    `\n                        : ''\n                    }\n                    ${\n                      option.cons\n                        ? `\n                        <div class=\"cons-section\">\n                            <h5>Cons</h5>\n                            <ul>${option.cons.map(con => `<li>${con}</li>`).join('')}</ul>\n                        </div>\n                    `\n                        : ''\n                    }\n                </div>\n            </div>\n        `\n      )\n      .join('');\n  }\n\n  /**\n   * Initialize radar chart\n   */\n  async initializeRadarChart() {\n    try {\n      // Check if modal is closing or already closed before initializing\n      if (this.isClosing || !this.modal || this.modal.style.display === 'none' || !document.body.contains(this.modal)) {\n        logger.info('RadarChart', 'Modal closing/closed, skipping radar chart initialization');\n        return;\n      }\n\n      // Clean up any existing radar chart instance\n      if (this.radarChart) {\n        try {\n          this.radarChart.destroy();\n        } catch (e) {\n          logger.warn('RadarChart', 'Failed to destroy existing radar chart', e);\n        }\n        this.radarChart = null;\n      }\n\n      // More robust container search with additional checks\n      let chartContainer = null;\n      let attempts = 0;\n      const maxAttempts = 20; // Increased attempts\n      const retryDelay = 150; // ms - delay between attempts\n      \n      while (!chartContainer && attempts < maxAttempts) {\n        // Check if modal is closing before each attempt\n        if (this.isClosing || !this.modal || !document.body.contains(this.modal)) {\n          logger.info('RadarChart', 'Modal closing during container search, aborting');\n          return;\n        }\n        \n        // Check if modal has been properly rendered\n        if (this.modal.style.display === 'none') {\n          logger.debug('RadarChart', `Modal not visible yet (attempt ${attempts + 1}/${maxAttempts})`);\n          await new Promise(resolve => setTimeout(resolve, retryDelay));\n          attempts++;\n          continue;\n        }\n        \n        // Double-check that modal contains the expected HTML\n        if (!this.modal.innerHTML.includes('scenario-radar-chart')) {\n          logger.debug('RadarChart', `Modal HTML incomplete (attempt ${attempts + 1}/${maxAttempts})`);\n          await new Promise(resolve => setTimeout(resolve, retryDelay));\n          attempts++;\n          continue;\n        }\n        \n        chartContainer = document.getElementById('scenario-radar-chart');\n        if (!chartContainer) {\n          logger.debug('RadarChart', `Container not found in DOM (attempt ${attempts + 1}/${maxAttempts})`);\n          await new Promise(resolve => setTimeout(resolve, retryDelay));\n          attempts++;\n        }\n      }\n\n      logger.info('RadarChart', `Container search completed`, {\n        found: !!chartContainer,\n        attempts: attempts + 1,\n        modalVisible: this.modal?.style.display !== 'none',\n        modalInDOM: document.body.contains(this.modal),\n        modalHasHTML: this.modal?.innerHTML.includes('scenario-radar-chart')\n      });\n\n      if (!chartContainer) {\n        // If we still can't find the container, this might not be an error but normal behavior\n        // (e.g., user closed modal quickly)\n        if (this.isClosing || !document.body.contains(this.modal)) {\n          logger.info('RadarChart', 'Modal was closed during initialization, this is normal');\n        } else {\n          logger.error('RadarChart', 'Container not found after all attempts', {\n            modalVisible: this.modal?.style.display !== 'none',\n            modalHTML: this.modal?.innerHTML ? 'present' : 'missing',\n            modalInDOM: document.body.contains(this.modal),\n            containerInHTML: this.modal?.innerHTML.includes('scenario-radar-chart')\n          });\n        }\n        return;\n      }\n\n      // Clean up any existing Chart.js instances in the container\n      const existingCanvases = chartContainer.querySelectorAll('canvas');\n      existingCanvases.forEach(canvas => {\n        // Check if there's a Chart.js instance attached to this canvas\n        if (window.Chart && window.Chart.getChart) {\n          const chartInstance = window.Chart.getChart(canvas);\n          if (chartInstance) {\n            logger.info('RadarChart', 'Destroying existing Chart.js instance before creating new one');\n            chartInstance.destroy();\n          }\n        }\n        canvas.remove();\n      });\n\n      // Clear any existing content to prevent \"null\" display\n      chartContainer.innerHTML = '';\n      chartContainer.textContent = '';\n\n      logger.info('RadarChart', 'Container cleared, initializing radar chart');\n\n      // Pass the container ID (string), not the element itself\n      this.radarChart = new RadarChart('scenario-radar-chart', {\n        width: 380,\n        height: 380,\n        showLabels: true,\n        showLegend: false,\n        animated: true,\n        realTime: true,\n        title: null, // Disable chart title to avoid duplication with h3\n      });\n\n      // Wait for the RadarChart to be fully initialized\n      await this.radarChart.initializationPromise;\n      logger.info('RadarChart', 'Radar chart async initialization completed');\n\n      // Set initial neutral scores (using the correct method)\n      const neutralScores = {\n        fairness: RADAR_CHART_NEUTRAL_SCORE,\n        sustainability: RADAR_CHART_NEUTRAL_SCORE,\n        autonomy: RADAR_CHART_NEUTRAL_SCORE,\n        beneficence: RADAR_CHART_NEUTRAL_SCORE,\n        transparency: RADAR_CHART_NEUTRAL_SCORE,\n        accountability: RADAR_CHART_NEUTRAL_SCORE,\n        privacy: RADAR_CHART_NEUTRAL_SCORE,\n        proportionality: RADAR_CHART_NEUTRAL_SCORE,\n      };\n\n      this.radarChart.setScores(neutralScores);\n      logger.info('RadarChart', 'Radar chart initialized successfully with neutral scores');\n      \n      // Process any pending radar chart updates\n      if (this.pendingRadarUpdate && this.selectedOption) {\n        logger.info('ScenarioModal', 'Processing pending radar chart update');\n        this.updateRadarChart();\n        this.pendingRadarUpdate = false;\n      }\n    } catch (error) {\n      logger.error('Radar chart initialization failed:', error);\n\n      // Clear container and show fallback message instead of null\n      const chartContainer = document.getElementById('scenario-radar-chart');\n      if (chartContainer) {\n        chartContainer.innerHTML = `\n                    <div style=\"\n                        display: flex; \n                        align-items: center; \n                        justify-content: center; \n                        min-height: 300px; \n                        color: #6b7280; \n                        font-size: 0.9rem;\n                        text-align: center;\n                        background: rgba(248, 250, 252, 0.5);\n                        border-radius: 8px;\n                        border: 1px solid rgba(229, 231, 235, 0.6);\n                    \">\n                        <div>\n                            <p style=\"margin: 0 0 0.5rem 0;\">Chart Loading...</p>\n                            <small style=\"color: #9ca3af;\">Ethical impact visualization will appear here</small>\n                        </div>\n                    </div>\n                `;\n      }\n    }\n  }\n\n  /**\n   * Attach event listeners\n   */\n  attachEventListeners() {\n    // Close button\n    const closeButton = this.modal.querySelector('.close-button');\n    if (closeButton) {\n      closeButton.addEventListener('click', () => this.close());\n    }\n\n    // Backdrop click to close\n    if (this.backdrop) {\n      this.backdrop.addEventListener('click', () => this.close());\n    }\n\n    // Option selection\n    const optionCards = this.modal.querySelectorAll('.option-card');\n    optionCards.forEach(card => {\n      card.addEventListener('click', () => this.selectOption(card));\n    });\n\n    // Cancel button\n    const cancelButton = this.modal.querySelector('#cancel-scenario');\n    if (cancelButton) {\n      cancelButton.addEventListener('click', () => this.close());\n    }\n\n    // Confirm button\n    const confirmButton = this.modal.querySelector('#confirm-choice');\n    if (confirmButton) {\n      confirmButton.addEventListener('click', () => this.confirmChoice());\n    }\n\n    // Escape key to close\n    this.escapeHandler = e => {\n      if (e.key === 'Escape') {\n        this.close();\n      }\n    };\n    document.addEventListener('keydown', this.escapeHandler);\n  }\n\n  /**\n   * Select an option\n   */\n  selectOption(card) {\n    logger.info('ScenarioModal', 'Option selection started');\n\n    const optionId = card.getAttribute('data-option-id');\n    const isCurrentlySelected = card.classList.contains('selected');\n\n    // If the clicked option is already selected, deselect it\n    if (isCurrentlySelected) {\n      logger.info('ScenarioModal', 'Deselecting currently selected option:', { optionId });\n\n      // Remove selection\n      card.classList.remove('selected');\n      const details = card.querySelector('.option-details');\n      if (details) details.style.display = 'none';\n\n      // Clear selected option\n      this.selectedOption = null;\n\n      // Reset radar chart to neutral state\n      if (this.radarChart && this.radarChart.isInitialized) {\n        this.radarChart.resetScores();\n        logger.info('RadarChart', 'Radar chart reset to neutral state');\n      }\n\n      // Disable confirm button\n      const confirmButton = this.modal.querySelector('#confirm-choice');\n      if (confirmButton) {\n        confirmButton.disabled = true;\n      }\n\n      return;\n    }\n\n    // Remove previous selection from all cards\n    this.modal.querySelectorAll('.option-card').forEach(c => {\n      c.classList.remove('selected');\n      const details = c.querySelector('.option-details');\n      if (details) details.style.display = 'none';\n    });\n\n    // Select new option\n    card.classList.add('selected');\n    const details = card.querySelector('.option-details');\n    if (details) details.style.display = 'block';\n\n    // Store selected option\n    this.selectedOption = this.currentScenario.options.find(\n      opt => opt.id === optionId\n    );\n\n    logger.info('Option selected:', {\n      optionId,\n      hasSelectedOption: !!this.selectedOption,\n      hasImpact: !!this.selectedOption?.impact,\n      impact: this.selectedOption?.impact,\n    });\n\n    // Queue radar chart update if chart isn't ready yet\n    if (this.radarChart && this.radarChart.isInitialized) {\n      this.updateRadarChart();\n    } else {\n      // Store the update request for when chart is ready\n      this.pendingRadarUpdate = true;\n      logger.info('ScenarioModal', 'Radar chart not ready, queuing update');\n    }\n\n    // Enable confirm button\n    const confirmButton = this.modal.querySelector('#confirm-choice');\n    if (confirmButton) {\n      confirmButton.disabled = false;\n    }\n\n    logger.info('ScenarioModal', 'Option selection completed');\n  }\n\n  /**\n   * Update radar chart with selected option impact\n   */\n  updateRadarChart() {\n    if (\n      !this.radarChart ||\n      !this.selectedOption ||\n      !this.selectedOption.impact\n    ) {\n      logger.warn('RadarChart', 'Cannot update radar chart - missing components', {\n        hasRadarChart: !!this.radarChart,\n        hasSelectedOption: !!this.selectedOption,\n        hasImpact: !!this.selectedOption?.impact,\n      });\n      return;\n    }\n\n    try {\n      // Check if radar chart is initialized\n      if (!this.radarChart.isInitialized) {\n        logger.warn('RadarChart', 'Radar chart not yet initialized, skipping update');\n        return;\n      }\n\n      // Convert impact data from (-2 to +2) to radar chart scale (0 to 5)\n      // -2 becomes 1, -1 becomes 2, 0 becomes 3, +1 becomes 4, +2 becomes 5\n      const impactScores = {};\n      const neutralScore = RADAR_CHART_NEUTRAL_SCORE; // Middle of 0-5 scale\n\n      Object.keys(this.selectedOption.impact).forEach(axis => {\n        const impactValue = this.selectedOption.impact[axis] || 0;\n        impactScores[axis] = neutralScore + impactValue;\n\n        // Clamp to valid range (0-5)\n        impactScores[axis] = Math.max(\n          0,\n          Math.min(RADAR_CHART_MAX_SCORE, impactScores[axis])\n        );\n      });\n\n      logger.info('RadarChart', 'Updating radar chart with converted scores:', impactScores);\n      this.radarChart.setScores(impactScores);\n      logger.info('RadarChart', 'Radar chart updated successfully');\n    } catch (error) {\n      logger.error('Failed to update radar chart:', error);\n    }\n  }\n\n  /**\n   * Confirm the selected choice\n   */\n  async confirmChoice() {\n    if (!this.selectedOption) {\n      logger.warn('No option selected for confirmation');\n      return;\n    }\n\n    // Store completion data for after modal closes\n    const completionData = {\n      categoryId: this.currentCategoryId,\n      scenarioId: this.currentScenarioId,\n      selectedOption: this.selectedOption,\n      option: this.selectedOption, // Legacy compatibility\n    };\n\n    // Dispatch initial scenario completion event (for immediate progress tracking)\n    const event = new CustomEvent('scenario-completed', {\n      detail: completionData,\n    });\n    document.dispatchEvent(event);\n\n    logger.info('Scenario completed:', {\n      categoryId: this.currentCategoryId,\n      scenarioId: this.currentScenarioId,\n      selectedOption: this.selectedOption.id,\n    });\n\n    // Close modal with delay to show completion, then dispatch final event\n    setTimeout(async () => {\n      await this.closeAndWait();\n      \n      // Dispatch event after modal is fully closed (for badge display)\n      const closedEvent = new CustomEvent('scenario-modal-closed', {\n        detail: completionData,\n      });\n      document.dispatchEvent(closedEvent);\n      \n      logger.info('ScenarioModal', 'Scenario modal fully closed, badges can now be displayed');\n    }, 1000);\n  }\n\n  /**\n   * Show the modal\n   */\n  async show() {\n    if (!this.modal || !this.backdrop) {\n      logger.error('Modal elements not created');\n      return;\n    }\n\n    // Focus management\n    this.previousFocusedElement = document.activeElement;\n\n    // Prevent body scrolling\n    document.body.style.overflow = 'hidden';\n\n    // Add show class for animation and wait for it to complete\n    await new Promise(resolve => {\n      requestAnimationFrame(() => {\n        this.backdrop.classList.add('show');\n        this.modal.classList.add('show');\n\n        // Wait for CSS transition to complete\n        setTimeout(() => {\n          // Focus close button after animation\n          const closeButton = this.modal.querySelector('.close-button');\n          if (closeButton) {\n            closeButton.focus();\n          }\n          resolve();\n        }, ANIMATION_DURATION);\n      });\n    });\n\n    // Start typewriter effect for the dilemma and ethical question\n    await this.startTypewriterEffect();\n  }\n\n  /**\n   * Close the modal and wait for it to be fully removed\n   */\n  async closeAndWait() {\n    if (this.modal || this.backdrop) {\n      this.close();\n      // Wait for the animation to complete plus small buffer\n      const CLOSE_BUFFER = 50; // ms\n      await new Promise(resolve =>\n        setTimeout(resolve, ANIMATION_DURATION + CLOSE_BUFFER)\n      );\n    }\n  }\n\n  /**\n   * Close the modal\n   */\n  close() {\n    // Set closing flag to prevent radar chart initialization\n    this.isClosing = true;\n    \n    if (this.modal) {\n      this.modal.classList.add('closing');\n      setTimeout(() => {\n        if (this.modal) {\n          this.modal.remove();\n          this.modal = null;\n        }\n      }, ANIMATION_DURATION);\n    }\n\n    if (this.backdrop) {\n      this.backdrop.classList.add('closing');\n      setTimeout(() => {\n        if (this.backdrop) {\n          this.backdrop.remove();\n          this.backdrop = null;\n        }\n      }, ANIMATION_DURATION);\n    }\n\n    // Restore focus\n    if (this.previousFocusedElement) {\n      this.previousFocusedElement.focus();\n    }\n\n    // Restore body scrolling\n    document.body.style.overflow = '';\n\n    // Remove event listeners\n    if (this.escapeHandler) {\n      document.removeEventListener('keydown', this.escapeHandler);\n      this.escapeHandler = null;\n    }\n\n    // Reset state\n    this.currentScenario = null;\n    this.selectedOption = null;\n    this.currentCategoryId = null;\n    this.currentScenarioId = null;\n    this.scenarioData = null;\n    this.radarChart = null;\n    this.isOpening = false; // Reset opening flag\n\n    logger.info('ScenarioModal', 'Scenario modal closed');\n  }\n\n  /**\n   * Start typewriter effect for dilemma and ethical question text\n   */\n  async startTypewriterEffect() {\n    try {\n      const dilemmaElement = this.modal.querySelector('.dilemma-text');\n      const ethicalQuestionElement = this.modal.querySelector('.ethical-question');\n      const scenarioContent = this.modal.querySelector('.scenario-content');\n      \n      if (!dilemmaElement || !ethicalQuestionElement) {\n        logger.warn('Could not find text elements for typewriter effect');\n        return;\n      }\n\n      // Add active class to start typewriter styling\n      if (scenarioContent) {\n        scenarioContent.classList.add('typewriter-active');\n      }\n\n      // Get the original text content\n      const dilemmaText = this.currentScenario.dilemma;\n      const ethicalQuestionText = this.currentScenario.ethicalQuestion;\n\n      // Apply typewriter effect sequentially\n      await typewriterSequence([\n        {\n          element: dilemmaElement,\n          text: dilemmaText,\n          options: {\n            speed: 15, // Faster typing\n            delay: 200, // Small delay before starting\n            cursor: true\n          }\n        },\n        {\n          element: ethicalQuestionElement,\n          text: ethicalQuestionText,\n          options: {\n            speed: 20, // Faster typing for emphasis\n            delay: 200, // Shorter delay after first text completes\n            cursor: true\n          }\n        }\n      ]);\n\n      logger.info('ScenarioModal', 'Typewriter effect completed');\n      \n      // Initialize radar chart after all animations are complete\n      await this.initializeRadarChart();\n    } catch (error) {\n      logger.error('Failed to apply typewriter effect:', error);\n      \n      // Fallback - show text immediately if typewriter fails\n      const dilemmaElement = this.modal.querySelector('.dilemma-text');\n      const ethicalQuestionElement = this.modal.querySelector('.ethical-question');\n      \n      if (dilemmaElement) {\n        dilemmaElement.textContent = this.currentScenario.dilemma;\n      }\n      if (ethicalQuestionElement) {\n        ethicalQuestionElement.textContent = this.currentScenario.ethicalQuestion;\n      }\n    }\n  }\n}\n\nexport default ScenarioModal;\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Badge Configuration System\n * \n * Defines badge tiers, requirements, and category-specific metadata\n * for the SimulateAI achievement system.\n * \n * Badge Progression: Triangular numbers (1, 3, 6, 10, 15, 21...)\n * Formula: T(n) = n(n+1)/2\n */\n\n// Badge tier configuration with triangular progression\nexport const BADGE_TIERS = [\n  { tier: 1, requirement: 1, triangularNumber: 1 },\n  { tier: 2, requirement: 3, triangularNumber: 3 },\n  { tier: 3, requirement: 6, triangularNumber: 6 },\n  // Future expansion ready\n  { tier: 4, requirement: 10, triangularNumber: 10 },\n  { tier: 5, requirement: 15, triangularNumber: 15 },\n  { tier: 6, requirement: 21, triangularNumber: 21 }\n];\n\n// Current active tiers (3 tiers for 6 scenarios per category)\nconst CURRENT_TIER_COUNT = 3;\nexport const ACTIVE_BADGE_TIERS = BADGE_TIERS.slice(0, CURRENT_TIER_COUNT);\n\n// Badge titles and metadata by category\nexport const BADGE_CONFIGURATIONS = {\n  'trolley-problem': {\n    categoryName: 'The Trolley Problem',\n    categoryEmoji: '🚃',\n    badges: {\n      tier1: {\n        title: 'Ethics Explorer',\n        sidekickEmoji: '⚖️',\n        quote: 'Every choice denies another. You chose—and the universe responded.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Junction Strategist',\n        sidekickEmoji: '🚂',\n        quote: 'Certainty was never the point. You navigated ambiguity with insight.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Consequence Architect',\n        sidekickEmoji: '🧠',\n        quote: 'You didn\\'t find the answer. You became the question.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n  \n  'ai-black-box': {\n    categoryName: 'The AI Black Box',\n    categoryEmoji: '📦',\n    badges: {\n      tier1: {\n        title: 'Mystery Seeker',\n        sidekickEmoji: '🔍',\n        quote: 'The first step to wisdom is admitting what you cannot see.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Algorithm Investigator',\n        sidekickEmoji: '🕵️',\n        quote: 'Truth hides in the shadows of complexity. You brought light.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Transparency Champion',\n        sidekickEmoji: '💎',\n        quote: 'The simulation blinked—and saw you watching.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n\n  'automation-oversight': {\n    categoryName: 'Automation vs Human Oversight',\n    categoryEmoji: '⚖️',\n    badges: {\n      tier1: {\n        title: 'Balance Finder',\n        sidekickEmoji: '🎯',\n        quote: 'Between machine precision and human wisdom lies the path.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Oversight Guardian',\n        sidekickEmoji: '👁️‍🗨️',\n        quote: 'You judged not with power, but with pause.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Harmony Architect',\n        sidekickEmoji: '🌉',\n        quote: 'Where others saw conflict, you built bridges between minds.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n\n  'consent-surveillance': {\n    categoryName: 'Consent and Surveillance',\n    categoryEmoji: '👁️',\n    badges: {\n      tier1: {\n        title: 'Privacy Guardian',\n        sidekickEmoji: '🛡️',\n        quote: 'In a watched world, you chose to watch the watchers.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Consent Advocate',\n        sidekickEmoji: '🤝',\n        quote: 'True consent requires understanding. You illuminated both.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Surveillance Ethicist',\n        sidekickEmoji: '⚖️',\n        quote: 'Where others saw safety versus privacy, you found wisdom.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n\n  'bias-fairness': {\n    categoryName: 'Bias & Fairness',\n    categoryEmoji: '⚡',\n    badges: {\n      tier1: {\n        title: 'Bias Detective',\n        sidekickEmoji: '🔍',\n        quote: 'The first bias you recognized was the assumption there was none.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Fairness Engineer',\n        sidekickEmoji: '⚙️',\n        quote: 'Justice isn\\'t coded—it\\'s crafted through conscious choice.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Equity Visionary',\n        sidekickEmoji: '🌈',\n        quote: 'You saw not what algorithms should avoid, but what they should embrace.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n\n  'ai-alignment': {\n    categoryName: 'AI Alignment',\n    categoryEmoji: '🚢',\n    badges: {\n      tier1: {\n        title: 'Direction Finder',\n        sidekickEmoji: '🧭',\n        quote: 'The compass points true north, but who decides which way is forward?',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Goal Harmonizer',\n        sidekickEmoji: '🎼',\n        quote: 'You orchestrated purpose from the chaos of competing objectives.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Alignment Master',\n        sidekickEmoji: '🎯',\n        quote: 'Perfect alignment was a myth. Ethical navigation was your truth.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n\n  'misinformation-trust': {\n    categoryName: 'Misinformation & Trust',\n    categoryEmoji: '🌐',\n    badges: {\n      tier1: {\n        title: 'Truth Sentinel',\n        sidekickEmoji: '🛡️',\n        quote: 'In an ocean of information, you became a lighthouse.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Trust Weaver',\n        sidekickEmoji: '🕸️',\n        quote: 'Trust isn\\'t binary. You learned to navigate the spectrum.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Reality Curator',\n        sidekickEmoji: '📚',\n        quote: 'You didn\\'t just fight falsehood—you cultivated understanding.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n\n  'ai-governance': {\n    categoryName: 'AI Governance',\n    categoryEmoji: '🎭',\n    badges: {\n      tier1: {\n        title: 'Rule Examiner',\n        sidekickEmoji: '📋',\n        quote: 'Good governance starts with questioning what good means.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Policy Architect',\n        sidekickEmoji: '🏛️',\n        quote: 'You built frameworks that could bend without breaking.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Governance Sage',\n        sidekickEmoji: '👑',\n        quote: 'True leadership is knowing when not to lead.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n\n  'moral-luck': {\n    categoryName: 'Moral Luck',\n    categoryEmoji: '🔄',\n    badges: {\n      tier1: {\n        title: 'Chance Contemplator',\n        sidekickEmoji: '🎭',\n        quote: 'You realized that wisdom begins with accepting what you cannot control.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Fortune Philosopher',\n        sidekickEmoji: '🎯',\n        quote: 'Between intention and outcome lies the realm of moral complexity.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Destiny Navigator',\n        sidekickEmoji: '⭐',\n        quote: 'You learned to take responsibility for choices, not their consequences.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n\n  'responsibility-blame': {\n    categoryName: 'Responsibility and Blame',\n    categoryEmoji: '⚡',\n    badges: {\n      tier1: {\n        title: 'Accountability Seeker',\n        sidekickEmoji: '🔍',\n        quote: 'When harm occurs, you asked not just what, but who and why.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Liability Navigator',\n        sidekickEmoji: '⚖️',\n        quote: 'Between action and consequence, you mapped responsibility.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Justice Architect',\n        sidekickEmoji: '🏛️',\n        quote: 'True accountability flows from understanding, not blame.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n\n  'collective-ai-responsibility': {\n    categoryName: 'Collective AI Responsibility',\n    categoryEmoji: '🎲',\n    badges: {\n      tier1: {\n        title: 'Collective Thinker',\n        sidekickEmoji: '🧩',\n        quote: 'No decision exists in isolation. You saw the bigger picture.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Responsibility Weaver',\n        sidekickEmoji: '🕸️',\n        quote: 'You understood that shared power requires shared accountability.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Collective Wisdom Keeper',\n        sidekickEmoji: '🌟',\n        quote: 'Individual ethics scale to collective responsibility through conscious design.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n\n  'ship-of-theseus': {\n    categoryName: 'The Ship of Theseus',\n    categoryEmoji: '🚢',\n    badges: {\n      tier1: {\n        title: 'Identity Seeker',\n        sidekickEmoji: '🔍',\n        quote: 'You questioned what makes something the same across time.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Continuity Philosopher',\n        sidekickEmoji: '🧠',\n        quote: 'Between memory and matter, you found the essence of being.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Consciousness Navigator',\n        sidekickEmoji: '🌟',\n        quote: 'Identity is not what remains unchanged—it\\'s what persists through change.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n\n  'simulation-hypothesis': {\n    categoryName: 'The Simulation Hypothesis',\n    categoryEmoji: '🌐',\n    badges: {\n      tier1: {\n        title: 'Reality Questioner',\n        sidekickEmoji: '🔍',\n        quote: 'You dared to question the nature of existence itself.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Digital Philosopher',\n        sidekickEmoji: '🧠',\n        quote: 'Between code and consciousness, you found new depths of being.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Simulation Sage',\n        sidekickEmoji: '✨',\n        quote: 'Reality is not what we see—it\\'s what we choose to believe.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n\n  'experience-machine': {\n    categoryName: 'The Experience Machine',\n    categoryEmoji: '🎭',\n    badges: {\n      tier1: {\n        title: 'Authenticity Seeker',\n        sidekickEmoji: '💎',\n        quote: 'You chose the difficult path of authentic experience.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Meaning Navigator',\n        sidekickEmoji: '🧭',\n        quote: 'True happiness cannot be manufactured—only earned.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Genuine Experience Master',\n        sidekickEmoji: '🌟',\n        quote: 'The value of life lies not in pleasure, but in the pursuit of purpose.',\n        glowIntensity: 'high'\n      }\n    }\n  },\n\n  'sorites-paradox': {\n    categoryName: 'The Sorites Paradox',\n    categoryEmoji: '🔄',\n    badges: {\n      tier1: {\n        title: 'Boundary Watcher',\n        sidekickEmoji: '👁️',\n        quote: 'You noticed the subtle shifts others missed.',\n        glowIntensity: 'low'\n      },\n      tier2: {\n        title: 'Gradual Change Guardian',\n        sidekickEmoji: '⚖️',\n        quote: 'Small steps can lead to vast distances—you stayed vigilant.',\n        glowIntensity: 'medium'\n      },\n      tier3: {\n        title: 'Threshold Sage',\n        sidekickEmoji: '🔮',\n        quote: 'Where others see continuity, you found the critical moments of transformation.',\n        glowIntensity: 'high'\n      }\n    }\n  }\n};\n\n// Glow intensity CSS class mapping\nexport const GLOW_INTENSITY_CLASSES = {\n  low: 'badge-glow-low',\n  medium: 'badge-glow-medium',\n  high: 'badge-glow-high'\n};\n\n/**\n * Gets badge configuration for a specific category and tier\n * @param {string} categoryId - Category identifier\n * @param {number} tier - Badge tier (1, 2, or 3)\n * @returns {Object|null} Badge configuration or null if not found\n */\nexport function getBadgeConfig(categoryId, tier) {\n  const categoryConfig = BADGE_CONFIGURATIONS[categoryId];\n  if (!categoryConfig) return null;\n  \n  const tierKey = `tier${tier}`;\n  const badgeConfig = categoryConfig.badges[tierKey];\n  if (!badgeConfig) return null;\n  \n  return {\n    ...badgeConfig,\n    categoryName: categoryConfig.categoryName,\n    categoryEmoji: categoryConfig.categoryEmoji,\n    tier,\n    requirement: ACTIVE_BADGE_TIERS.find(t => t.tier === tier)?.requirement || 0\n  };\n}\n\n/**\n * Gets all available badge tiers for a category\n * @param {string} categoryId - Category identifier\n * @returns {Array} Array of badge configurations\n */\nexport function getCategoryBadges(categoryId) {\n  return ACTIVE_BADGE_TIERS.map(tierInfo => \n    getBadgeConfig(categoryId, tierInfo.tier)\n  ).filter(Boolean);\n}\n\n/**\n * Calculates the next badge tier based on completion count\n * @param {number} completedCount - Number of completed scenarios\n * @returns {Object|null} Next badge tier info or null if all earned\n */\nexport function getNextBadgeTier(completedCount) {\n  return ACTIVE_BADGE_TIERS.find(tier => tier.requirement > completedCount) || null;\n}\n\n/**\n * Gets all earned badge tiers based on completion count\n * @param {number} completedCount - Number of completed scenarios\n * @returns {Array} Array of earned badge tier numbers\n */\nexport function getEarnedBadgeTiers(completedCount) {\n  return ACTIVE_BADGE_TIERS\n    .filter(tier => tier.requirement <= completedCount)\n    .map(tier => tier.tier);\n}\n\n/**\n * Checks if a specific badge tier is earned\n * @param {number} completedCount - Number of completed scenarios\n * @param {number} tier - Badge tier to check\n * @returns {boolean} True if badge is earned\n */\nexport function isBadgeEarned(completedCount, tier) {\n  const tierInfo = ACTIVE_BADGE_TIERS.find(t => t.tier === tier);\n  return tierInfo ? completedCount >= tierInfo.requirement : false;\n}\n\nexport default {\n  BADGE_TIERS,\n  ACTIVE_BADGE_TIERS,\n  BADGE_CONFIGURATIONS,\n  GLOW_INTENSITY_CLASSES,\n  getBadgeConfig,\n  getCategoryBadges,\n  getNextBadgeTier,\n  getEarnedBadgeTiers,\n  isBadgeEarned\n};\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Badge Progress Manager\n * \n * Handles badge state management, progress tracking, and achievement logic\n * for the SimulateAI badge system. Integrates with existing localStorage\n * progress tracking.\n */\n\nimport { \n  getBadgeConfig, \n  getNextBadgeTier,\n  ACTIVE_BADGE_TIERS \n} from '../data/badge-config.js';\n\n/**\n * Badge Manager Class\n * Manages badge state, progress tracking, and achievement calculations\n */\nexport class BadgeManager {\n  constructor() {\n    this.STORAGE_KEY = 'simulateai_badge_progress';\n    this.CATEGORY_PROGRESS_KEY = 'simulateai_category_progress';\n    this.badgeState = this.loadBadgeState();\n    this.categoryProgress = this.loadCategoryProgress();\n  }\n\n  /**\n   * Loads badge state from localStorage\n   * @returns {Object} Badge state object\n   */\n  loadBadgeState() {\n    try {\n      const stored = localStorage.getItem(this.STORAGE_KEY);\n      return stored ? JSON.parse(stored) : {};\n    } catch (error) {\n      // Silent error handling for badge state loading\n      return {};\n    }\n  }\n\n  /**\n   * Loads existing category progress from localStorage\n   * @returns {Object} Category progress object\n   */\n  loadCategoryProgress() {\n    try {\n      const stored = localStorage.getItem(this.CATEGORY_PROGRESS_KEY);\n      return stored ? JSON.parse(stored) : {};\n    } catch (error) {\n      // Silent error handling for category progress loading\n      return {};\n    }\n  }\n\n  /**\n   * Saves badge state to localStorage\n   */\n  saveBadgeState() {\n    try {\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(this.badgeState));\n    } catch (error) {\n      // Silent error handling for badge state saving\n      // Could implement user notification here if needed\n    }\n  }\n\n  /**\n   * Initializes badge state for a category if not exists\n   * @param {string} categoryId - Category identifier\n   */\n  initializeCategoryBadges(categoryId) {\n    if (!this.badgeState[categoryId]) {\n      this.badgeState[categoryId] = {\n        badges: {},\n        totalCompleted: 0,\n        lastUpdated: Date.now()\n      };\n\n      // Initialize all badge tiers as unearned\n      ACTIVE_BADGE_TIERS.forEach(tier => {\n        this.badgeState[categoryId].badges[`tier${tier.tier}`] = {\n          unlocked: false,\n          timestamp: null,\n          requirement: tier.requirement\n        };\n      });\n    }\n  }\n\n  /**\n   * Updates scenario completion and checks for new badge achievements\n   * @param {string} categoryId - Category identifier\n   * @param {string} _scenarioId - Scenario identifier (not used but part of API)\n   * @returns {Array} Array of newly earned badges\n   */\n  updateScenarioCompletion(categoryId, _scenarioId) {\n    // Initialize category if needed\n    this.initializeCategoryBadges(categoryId);\n\n    // Get current completion count for this category\n    const categoryProgress = this.categoryProgress[categoryId] || {};\n    const completedScenarios = Object.keys(categoryProgress).filter(\n      scenarioKey => categoryProgress[scenarioKey] === true\n    );\n    const completionCount = completedScenarios.length;\n\n    // Update badge state with current count\n    this.badgeState[categoryId].totalCompleted = completionCount;\n    this.badgeState[categoryId].lastUpdated = Date.now();\n\n    // Check for newly earned badges\n    const newlyEarnedBadges = this.checkForNewBadges(categoryId, completionCount);\n\n    // Save updated state\n    this.saveBadgeState();\n\n    return newlyEarnedBadges;\n  }\n\n  /**\n   * Checks for newly earned badges based on completion count\n   * @param {string} categoryId - Category identifier\n   * @param {number} completionCount - Number of completed scenarios\n   * @returns {Array} Array of newly earned badge configurations\n   */\n  checkForNewBadges(categoryId, completionCount) {\n    const newlyEarned = [];\n    const categoryBadges = this.badgeState[categoryId].badges;\n\n    ACTIVE_BADGE_TIERS.forEach(tier => {\n      const tierKey = `tier${tier.tier}`;\n      const badgeInfo = categoryBadges[tierKey];\n\n      // Check if badge should be earned but hasn't been unlocked yet\n      if (completionCount >= tier.requirement && !badgeInfo.unlocked) {\n        // Mark badge as earned\n        badgeInfo.unlocked = true;\n        badgeInfo.timestamp = Date.now();\n\n        // Get full badge configuration\n        const badgeConfig = getBadgeConfig(categoryId, tier.tier);\n        if (badgeConfig) {\n          newlyEarned.push({\n            ...badgeConfig,\n            categoryId,\n            timestamp: badgeInfo.timestamp\n          });\n        }\n      }\n    });\n\n    return newlyEarned;\n  }\n\n  /**\n   * Gets all earned badges for a category\n   * @param {string} categoryId - Category identifier\n   * @returns {Array} Array of earned badge configurations\n   */\n  getEarnedBadges(categoryId) {\n    this.initializeCategoryBadges(categoryId);\n    \n    const categoryBadges = this.badgeState[categoryId].badges;\n    const earnedBadges = [];\n\n    ACTIVE_BADGE_TIERS.forEach(tier => {\n      const tierKey = `tier${tier.tier}`;\n      const badgeInfo = categoryBadges[tierKey];\n\n      if (badgeInfo.unlocked) {\n        const badgeConfig = getBadgeConfig(categoryId, tier.tier);\n        if (badgeConfig) {\n          earnedBadges.push({\n            ...badgeConfig,\n            categoryId,\n            timestamp: badgeInfo.timestamp\n          });\n        }\n      }\n    });\n\n    return earnedBadges.sort((a, b) => a.tier - b.tier);\n  }\n\n  /**\n   * Gets next available badge for a category\n   * @param {string} categoryId - Category identifier\n   * @returns {Object|null} Next badge configuration or null if all earned\n   */\n  getNextBadge(categoryId) {\n    const completionCount = this.getCategoryCompletionCount(categoryId);\n    const nextTier = getNextBadgeTier(completionCount);\n    \n    return nextTier ? getBadgeConfig(categoryId, nextTier.tier) : null;\n  }\n\n  /**\n   * Gets completion count for a category\n   * @param {string} categoryId - Category identifier\n   * @returns {number} Number of completed scenarios\n   */\n  getCategoryCompletionCount(categoryId) {\n    // Always load fresh category progress to account for recent changes\n    const freshCategoryProgress = this.loadCategoryProgress();\n    const categoryProgress = freshCategoryProgress[categoryId] || {};\n    return Object.keys(categoryProgress).filter(\n      scenarioKey => categoryProgress[scenarioKey] === true\n    ).length;\n  }\n\n  /**\n   * Gets progress towards next badge\n   * @param {string} categoryId - Category identifier\n   * @returns {Object} Progress information\n   */\n  getBadgeProgress(categoryId) {\n    const completionCount = this.getCategoryCompletionCount(categoryId);\n    const nextBadge = this.getNextBadge(categoryId);\n    const earnedBadges = this.getEarnedBadges(categoryId);\n\n    return {\n      completed: completionCount,\n      nextBadge,\n      earnedBadges,\n      progress: nextBadge ? {\n        current: completionCount,\n        required: nextBadge.requirement,\n        remaining: Math.max(0, nextBadge.requirement - completionCount),\n        percentage: Math.min(100, (completionCount / nextBadge.requirement) * 100)\n      } : null\n    };\n  }\n\n  /**\n   * Gets all badge states across all categories\n   * @returns {Object} Complete badge state summary\n   */\n  getAllBadgeStates() {\n    const allStates = {};\n\n    // Reload category progress to get latest data\n    this.categoryProgress = this.loadCategoryProgress();\n\n    Object.keys(this.categoryProgress).forEach(categoryId => {\n      allStates[categoryId] = this.getBadgeProgress(categoryId);\n    });\n\n    return allStates;\n  }\n\n  /**\n   * Checks if a specific badge is earned\n   * @param {string} categoryId - Category identifier\n   * @param {number} tier - Badge tier\n   * @returns {boolean} True if badge is earned\n   */\n  isBadgeEarned(categoryId, tier) {\n    this.initializeCategoryBadges(categoryId);\n    const tierKey = `tier${tier}`;\n    return this.badgeState[categoryId].badges[tierKey]?.unlocked || false;\n  }\n\n  /**\n   * Gets total number of earned badges across all categories\n   * @returns {number} Total earned badge count\n   */\n  getTotalEarnedBadges() {\n    let total = 0;\n    \n    Object.keys(this.badgeState).forEach(categoryId => {\n      const categoryBadges = this.badgeState[categoryId].badges;\n      total += Object.values(categoryBadges).filter(badge => badge.unlocked).length;\n    });\n\n    return total;\n  }\n\n  /**\n   * Resets all badge progress (for testing/debugging)\n   */\n  resetBadgeProgress() {\n    this.badgeState = {};\n    localStorage.removeItem(this.STORAGE_KEY);\n    // Badge progress reset - for development/testing\n  }\n\n  /**\n   * Force updates category progress from current localStorage state\n   */\n  refreshCategoryProgress() {\n    this.categoryProgress = this.loadCategoryProgress();\n  }\n}\n\n// Create singleton instance\nconst badgeManager = new BadgeManager();\n\nexport default badgeManager;\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Badge Modal Component\n * \n * Handles badge reveal animations, confetti effects, and modal presentation\n * for the SimulateAI badge achievement system.\n */\n\nimport logger from '../utils/logger.js';\n\n// Import js-confetti from CDN for GitHub Pages compatibility  \nlet JSConfetti;\n\n// Dynamically import js-confetti\nasync function loadConfetti() {\n  if (!JSConfetti) {\n    try {\n      const module = await import('https://cdn.skypack.dev/js-confetti@0.12.0');\n      JSConfetti = module.default;\n    } catch (error) {\n      logger.warn('Failed to load js-confetti, confetti effects will be disabled:', error);\n    }\n  }\n  return JSConfetti;\n}\nimport { GLOW_INTENSITY_CLASSES } from '../data/badge-config.js';\n\n/**\n * Badge Modal Class\n * Manages badge reveal modals with confetti animations\n */\nexport class BadgeModal {\n  constructor() {\n    this.isVisible = false;\n    this.currentModal = null;\n    this.confetti = null; // Will be initialized when needed\n    this.ANIMATION_DURATION = {\n      CONFETTI: 3000,\n      CONFETTI_SECOND_DELAY: 500,\n      CONFETTI_THIRD_DELAY: 1000,\n      CONFETTI_FOURTH_DELAY: 1500,\n      CONFETTI_FIFTH_DELAY: 2000,\n      CONFETTI_SIMULTANEOUS: 10,\n      CONFETTI_NEAR_SIMULTANEOUS: 50,\n      CONFETTI_OVERLAP_SHORT: 100,\n      CONFETTI_OVERLAP_MEDIUM: 150,\n      CONFETTI_OVERLAP_LONG: 200,\n      MODAL_ENTER: 600,\n      MODAL_EXIT: 400,\n      BADGE_SCALE: 800,\n      SIDEKICK_ENTRANCE: 1200,\n      ENTRANCE_DELAY: 100,\n      SHIELD_DELAY: 200,\n      SIDEKICK_DELAY: 400,\n      TEXT_START_DELAY: 400,\n      TEXT_STAGGER_DELAY: 100,\n      TYPEWRITER_START_DELAY: 1000\n    };\n    \n    this.PARTICLE_CONFIG = {\n      COUNT: 15,\n      MIN_SIZE: 2,\n      SIZE_RANGE: 3,\n      MAX_DELAY: 8,\n      MIN_DURATION: 15,\n      DURATION_RANGE: 10,\n      DRIFT_MULTIPLIER: 100,\n      DRIFT_OFFSET: 0.5\n    };\n    \n    this.EMOJI_BUBBLE_CONFIG = {\n      CATEGORY_COUNT: 8,\n      SIDEKICK_COUNT: 6,\n      MAX_DELAY: 12,\n      MIN_DURATION: 8,\n      DURATION_RANGE: 4,\n      DRIFT_RANGE: 60\n    };\n    \n    this.TYPEWRITER_CONFIG = {\n      CHAR_SPEED: 20,\n      CURSOR_DELAY: 600,\n      START_DELAY: 50\n    };\n    \n    this.BADGE_TIERS = {\n      MAX_TIER: 3\n    };\n    \n    this.bindEvents();\n  }\n\n  /**\n   * Bind global event listeners\n   */\n  bindEvents() {\n    // Close modal on escape key\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && this.isVisible) {\n        this.closeModal();\n      }\n    });\n\n    // Close modal on backdrop click\n    document.addEventListener('click', (e) => {\n      if (e.target?.classList?.contains('badge-modal-backdrop') && this.isVisible) {\n        this.closeModal();\n      }\n    });\n  }\n\n  /**\n   * Shows a badge achievement modal with confetti\n   * @param {Object} badgeConfig - Badge configuration object\n   * @param {string} returnContext - Context to return to ('main' or 'category')\n   */\n  async showBadgeModal(badgeConfig, returnContext = 'main') {\n    if (this.isVisible) {\n      return; // Prevent multiple modals\n    }\n\n    this.isVisible = true;\n\n    // Start confetti celebration\n    this.triggerConfetti(badgeConfig.categoryEmoji, badgeConfig.tier);\n\n    // Delay modal creation to appear with the third wave (second group)\n    setTimeout(() => {\n      // Create and show modal\n      this.createModal(badgeConfig, returnContext);\n      this.animateModalEntrance();\n    }, this.ANIMATION_DURATION.CONFETTI_SECOND_DELAY);\n  }\n\n  /**\n   * Triggers category-specific emoji confetti\n   * @param {string} categoryEmoji - Category emoji for confetti\n   */\n  async triggerConfetti(categoryEmoji, badgeTier = 1) {\n    // Initialize confetti if not already loaded\n    if (!this.confetti) {\n      const ConfettiClass = await loadConfetti();\n      if (ConfettiClass) {\n        this.confetti = new ConfettiClass();\n      } else {\n        logger.warn('Confetti disabled - failed to load js-confetti library');\n        return;\n      }\n    }\n\n    // Wave 1 - Large confetti (immediate)\n    this.confetti.addConfetti({\n      emojis: [categoryEmoji],\n      emojiSize: 60,\n      confettiNumber: 15,\n    });\n    \n    // Wave 2 - Medium confetti (virtually simultaneous with wave 1)\n    setTimeout(() => {\n      this.confetti.addConfetti({\n        emojis: [categoryEmoji],\n        emojiSize: 40,\n        confettiNumber: 20,\n      });\n    }, this.ANIMATION_DURATION.CONFETTI_SIMULTANEOUS);\n    \n    // Wave 3 - Small confetti (after 500ms gap, with modal appearance)\n    setTimeout(() => {\n      this.confetti.addConfetti({\n        emojis: [categoryEmoji],\n        emojiSize: 25,\n        confettiNumber: 10,\n      });\n    }, this.ANIMATION_DURATION.CONFETTI_SECOND_DELAY);\n\n    // Wave 4 - Extra large finale for tier 3 badges only\n    setTimeout(() => {\n      if (badgeTier === this.BADGE_TIERS.MAX_TIER) {\n        this.confetti.addConfetti({\n          emojis: [categoryEmoji],\n          emojiSize: 70,\n          confettiNumber: 25,\n        });\n      }\n    }, this.ANIMATION_DURATION.CONFETTI_THIRD_DELAY);\n  }\n\n  /**\n   * Creates the badge modal DOM structure\n   * @param {Object} badgeConfig - Badge configuration\n   * @param {string} returnContext - Return context\n   */\n  createModal(badgeConfig, returnContext) {\n    const modal = document.createElement('div');\n    modal.className = 'badge-modal-backdrop';\n    modal.innerHTML = this.generateModalHTML(badgeConfig, returnContext);\n    \n    document.body.appendChild(modal);\n    this.currentModal = modal;\n\n    // Add floating particles\n    this.createFloatingParticles();\n\n    // Add bubbling emoji effect\n    this.createBubblingEmojis(badgeConfig.categoryEmoji, badgeConfig.sidekickEmoji);\n\n    // Bind close button\n    const closeBtn = modal.querySelector('.badge-close-btn');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => this.closeModal());\n    }\n\n    // Initialize typewriter effect after modal is shown\n    setTimeout(() => {\n      this.initializeTypewriter(badgeConfig.quote);\n    }, this.ANIMATION_DURATION.TYPEWRITER_START_DELAY);\n  }\n\n  /**\n   * Generates the modal HTML structure\n   * @param {Object} badgeConfig - Badge configuration\n   * @param {string} returnContext - Return context\n   * @returns {string} Modal HTML\n   */\n  generateModalHTML(badgeConfig, returnContext) {\n    const timestamp = new Date(badgeConfig.timestamp).toLocaleString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n\n    const glowClass = GLOW_INTENSITY_CLASSES[badgeConfig.glowIntensity] || 'badge-glow-low';\n    const tierText = this.getTierText(badgeConfig.tier);\n    const reasonText = this.getReasonText(badgeConfig, tierText);\n\n    return `\n      <div class=\"badge-modal\">\n        <div class=\"badge-modal-content\">\n          <div class=\"badge-visual-container\">\n            <div class=\"badge-shield ${glowClass}\">\n              <span class=\"badge-shield-emoji\">🛡️</span>\n              <span class=\"badge-category-emoji\">${badgeConfig.categoryEmoji}</span>\n              <span class=\"badge-sidekick-emoji\">${badgeConfig.sidekickEmoji}</span>\n            </div>\n          </div>\n          \n          <div class=\"badge-text-content\">\n            <h2 class=\"badge-title\">${badgeConfig.title}</h2>\n            <p class=\"badge-quote\">\"${badgeConfig.quote}\"</p>\n            <div class=\"badge-details\">\n              <p class=\"badge-reason\">${reasonText}</p>\n              <p class=\"badge-timestamp\">Earned: ${timestamp}</p>\n            </div>\n          </div>\n          \n          <div class=\"badge-modal-footer\">\n            <button class=\"badge-close-btn btn-primary\">\n              Back to ${returnContext === 'category' ? 'Category' : 'Scenarios'}\n            </button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Gets tier-specific text\n   * @param {number} tier - Badge tier\n   * @returns {string} Tier description\n   */\n  getTierText(tier) {\n    const tierMap = {\n      1: 'your first scenario',\n      2: 'three scenarios',\n      3: 'all six scenarios'\n    };\n    return tierMap[tier] || `${tier} scenarios`;\n  }\n\n  /**\n   * Gets reason text for badge achievement\n   * @param {Object} badgeConfig - Badge configuration\n   * @param {string} tierText - Tier description text\n   * @returns {string} Reason text\n   */\n  getReasonText(badgeConfig, tierText) {\n    return `You've earned this badge for completing ${tierText} in the ${badgeConfig.categoryName} category.`;\n  }\n\n  /**\n   * Animates modal entrance with staggered effects\n   */\n  animateModalEntrance() {\n    if (!this.currentModal) return;\n\n    const modal = this.currentModal.querySelector('.badge-modal');\n    const shield = this.currentModal.querySelector('.badge-shield');\n    const sidekick = this.currentModal.querySelector('.badge-sidekick-emoji');\n    const title = this.currentModal.querySelector('.badge-title');\n    const quote = this.currentModal.querySelector('.badge-quote');\n    const details = this.currentModal.querySelector('.badge-details');\n    const footer = this.currentModal.querySelector('.badge-modal-footer');\n\n    // Initial states\n    modal.style.transform = 'scale(0.8)';\n    modal.style.opacity = '0';\n    sidekick.style.transform = 'scale(0) rotate(-180deg)';\n    sidekick.style.opacity = '0';\n    title.style.transform = 'translateY(20px)';\n    title.style.opacity = '0';\n    quote.style.transform = 'translateY(20px)';\n    quote.style.opacity = '0';\n    details.style.transform = 'translateY(20px)';\n    details.style.opacity = '0';\n    footer.style.transform = 'translateY(20px)';\n    footer.style.opacity = '0';\n\n    // Animate modal entrance\n    setTimeout(() => {\n      modal.style.transition = `all ${this.ANIMATION_DURATION.MODAL_ENTER}ms cubic-bezier(0.68, -0.55, 0.265, 1.55)`;\n      modal.style.transform = 'scale(1)';\n      modal.style.opacity = '1';\n    }, this.ANIMATION_DURATION.ENTRANCE_DELAY);\n\n    // Animate shield scale\n    setTimeout(() => {\n      shield.style.transition = `transform ${this.ANIMATION_DURATION.BADGE_SCALE}ms cubic-bezier(0.68, -0.55, 0.265, 1.55)`;\n      shield.style.transform = 'scale(1.1)';\n      \n      setTimeout(() => {\n        shield.style.transform = 'scale(1)';\n      }, this.ANIMATION_DURATION.BADGE_SCALE);\n    }, this.ANIMATION_DURATION.SHIELD_DELAY);\n\n    // Animate sidekick emoji entrance\n    setTimeout(() => {\n      sidekick.style.transition = `all ${this.ANIMATION_DURATION.SIDEKICK_ENTRANCE}ms cubic-bezier(0.68, -0.55, 0.265, 1.55)`;\n      sidekick.style.transform = 'scale(1) rotate(0deg)';\n      sidekick.style.opacity = '1';\n    }, this.ANIMATION_DURATION.SIDEKICK_DELAY);\n\n    // Animate text elements with stagger\n    const textElements = [title, quote, details, footer];\n    textElements.forEach((element, index) => {\n      setTimeout(() => {\n        element.style.transition = 'all 400ms ease-out';\n        element.style.transform = 'translateY(0)';\n        element.style.opacity = '1';\n      }, this.ANIMATION_DURATION.TEXT_START_DELAY + (index * this.ANIMATION_DURATION.TEXT_STAGGER_DELAY));\n    });\n  }\n\n  /**\n   * Closes the badge modal\n   */\n  closeModal() {\n    if (!this.isVisible || !this.currentModal) return;\n\n    const modal = this.currentModal.querySelector('.badge-modal');\n    \n    // Animate exit\n    modal.style.transition = `all ${this.ANIMATION_DURATION.MODAL_EXIT}ms ease-in`;\n    modal.style.transform = 'scale(0.9)';\n    modal.style.opacity = '0';\n\n    // Remove from DOM\n    setTimeout(() => {\n      if (this.currentModal) {\n        document.body.removeChild(this.currentModal);\n        this.currentModal = null;\n      }\n      this.isVisible = false;\n    }, this.ANIMATION_DURATION.MODAL_EXIT);\n  }\n\n  /**\n   * Checks if modal is currently visible\n   * @returns {boolean} True if modal is visible\n   */\n  isModalVisible() {\n    return this.isVisible;\n  }\n\n  /**\n   * Force closes modal (for cleanup)\n   */\n  forceClose() {\n    if (this.currentModal) {\n      document.body.removeChild(this.currentModal);\n      this.currentModal = null;\n    }\n    this.isVisible = false;\n  }\n\n  /**\n   * Creates floating particles for background atmosphere\n   */\n  createFloatingParticles() {\n    if (!this.currentModal) return;\n\n    const particlesContainer = document.createElement('div');\n    particlesContainer.className = 'particles-container';\n    \n    const particleCount = this.PARTICLE_CONFIG.COUNT;\n    for (let i = 0; i < particleCount; i++) {\n      const particle = document.createElement('div');\n      particle.className = 'floating-particle';\n      \n      // Random properties for each particle\n      const size = Math.random() * this.PARTICLE_CONFIG.SIZE_RANGE + this.PARTICLE_CONFIG.MIN_SIZE;\n      const left = Math.random() * 100; // 0-100%\n      const animationDelay = Math.random() * this.PARTICLE_CONFIG.MAX_DELAY;\n      const animationDuration = Math.random() * this.PARTICLE_CONFIG.DURATION_RANGE + this.PARTICLE_CONFIG.MIN_DURATION;\n      const drift = (Math.random() - this.PARTICLE_CONFIG.DRIFT_OFFSET) * this.PARTICLE_CONFIG.DRIFT_MULTIPLIER;\n      \n      particle.style.cssText = `\n        width: ${size}px;\n        height: ${size}px;\n        left: ${left}%;\n        animation-delay: ${animationDelay}s;\n        animation-duration: ${animationDuration}s;\n        --drift: ${drift}px;\n      `;\n      \n      particlesContainer.appendChild(particle);\n    }\n    \n    // Insert particles behind modal content\n    const modalBackdrop = this.currentModal;\n    modalBackdrop.insertBefore(particlesContainer, modalBackdrop.firstChild);\n  }\n\n  /**\n   * Creates bubbling emoji background effect\n   * @param {string} categoryEmoji - Category emoji to bubble\n   * @param {string} sidekickEmoji - Sidekick emoji to bubble\n   */\n  createBubblingEmojis(categoryEmoji, sidekickEmoji) {\n    if (!this.currentModal) return;\n\n    const bubblesContainer = document.createElement('div');\n    bubblesContainer.className = 'emoji-bubbles-container';\n    \n    // Create category emoji bubbles\n    for (let i = 0; i < this.EMOJI_BUBBLE_CONFIG.CATEGORY_COUNT; i++) {\n      const bubble = document.createElement('div');\n      bubble.className = 'bubbling-emoji category';\n      bubble.textContent = categoryEmoji;\n      \n      // Random properties for each bubble\n      const left = Math.random() * 100; // 0-100%\n      const animationDelay = Math.random() * this.EMOJI_BUBBLE_CONFIG.MAX_DELAY; // 0-12s\n      const animationDuration = Math.random() * this.EMOJI_BUBBLE_CONFIG.DURATION_RANGE + this.EMOJI_BUBBLE_CONFIG.MIN_DURATION; // 8-12s\n      const driftX = (Math.random() - this.PARTICLE_CONFIG.DRIFT_OFFSET) * this.EMOJI_BUBBLE_CONFIG.DRIFT_RANGE; // -30px to 30px horizontal drift\n      \n      bubble.style.cssText = `\n        left: ${left}%;\n        animation-delay: ${animationDelay}s;\n        animation-duration: ${animationDuration}s;\n        --drift-x: ${driftX}px;\n      `;\n      \n      bubblesContainer.appendChild(bubble);\n    }\n    \n    // Create sidekick emoji bubbles\n    for (let i = 0; i < this.EMOJI_BUBBLE_CONFIG.SIDEKICK_COUNT; i++) {\n      const bubble = document.createElement('div');\n      bubble.className = 'bubbling-emoji sidekick';\n      bubble.textContent = sidekickEmoji;\n      \n      // Random properties for each bubble\n      const left = Math.random() * 100; // 0-100%\n      const animationDelay = Math.random() * this.EMOJI_BUBBLE_CONFIG.MAX_DELAY; // 0-12s\n      const animationDuration = Math.random() * this.EMOJI_BUBBLE_CONFIG.DURATION_RANGE + this.EMOJI_BUBBLE_CONFIG.MIN_DURATION; // 8-12s\n      const driftX = (Math.random() - this.PARTICLE_CONFIG.DRIFT_OFFSET) * this.EMOJI_BUBBLE_CONFIG.DRIFT_RANGE; // -30px to 30px horizontal drift\n      \n      bubble.style.cssText = `\n        left: ${left}%;\n        animation-delay: ${animationDelay}s;\n        animation-duration: ${animationDuration}s;\n        --drift-x: ${driftX}px;\n      `;\n      \n      bubblesContainer.appendChild(bubble);\n    }\n    \n    // Insert bubbles inside the modal as background\n    const modal = this.currentModal.querySelector('.badge-modal');\n    if (modal) {\n      modal.insertBefore(bubblesContainer, modal.firstChild);\n    }\n  }\n\n  /**\n   * Initializes typewriter effect for quote text\n   * @param {string} quote - The quote text to animate\n   */\n  initializeTypewriter(quote) {\n    if (!this.currentModal) return;\n\n    const quoteElement = this.currentModal.querySelector('.badge-quote');\n    if (!quoteElement) return;\n\n    // Reset quote content and prepare for typewriter\n    quoteElement.textContent = '';\n    \n    // Set up typewriter styles with improved responsive handling\n    quoteElement.style.whiteSpace = 'nowrap';\n    quoteElement.style.overflow = 'hidden';\n    quoteElement.style.width = '0';\n    quoteElement.style.maxWidth = '100%';\n    quoteElement.style.borderRight = '2px solid rgba(255, 255, 255, 0.8)';\n    quoteElement.style.textOverflow = 'clip'; // Prevent ellipsis during animation\n    \n    // Start typewriter animation\n    let charIndex = 0;\n    const typeSpeed = this.TYPEWRITER_CONFIG.CHAR_SPEED;\n    \n    const typeCharacter = () => {\n      if (charIndex < quote.length) {\n        quoteElement.textContent += quote.charAt(charIndex);\n        charIndex++;\n        setTimeout(typeCharacter, typeSpeed);\n      } else {\n        // Remove cursor and allow proper text wrapping after typing is complete\n        setTimeout(() => {\n          quoteElement.style.borderRight = 'none';\n          quoteElement.style.whiteSpace = 'normal';\n          quoteElement.style.width = 'auto';\n          quoteElement.style.overflow = 'visible';\n          quoteElement.style.textOverflow = 'unset';\n          quoteElement.style.wordWrap = 'break-word';\n          quoteElement.style.overflowWrap = 'break-word';\n          quoteElement.style.hyphens = 'auto';\n        }, this.TYPEWRITER_CONFIG.CURSOR_DELAY);\n      }\n    };\n    \n    // Start the animation with faster CSS width animation\n    quoteElement.style.animation = 'typewriter 1.5s steps(30) forwards';\n    \n    // Start character typing\n    setTimeout(typeCharacter, this.TYPEWRITER_CONFIG.START_DELAY);\n  }\n}\n\n// Create singleton instance\nconst badgeModal = new BadgeModal();\n\nexport default badgeModal;\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Category Grid Component\n * Displays the main grid of ethical dilemma categories on the home page\n * Part of the SimulateAI Ethics Platform Revamp - Phase 1.1\n */\n\nimport {\n  getAllCategories,\n  getCategoryProgress,\n  getCategoryScenarios,\n} from '../../data/categories.js';\nimport logger from '../utils/logger.js';\nimport PreLaunchModal from './pre-launch-modal.js';\nimport ScenarioModal from './scenario-modal.js';\nimport badgeManager from '../core/badge-manager.js';\nimport badgeModal from './badge-modal.js';\n\n// Constants\nconst PROGRESS_CIRCLE_CIRCUMFERENCE = 163; // 2 * π * 26 (radius)\nconst HIGHLIGHT_DURATION = 2000;\nconst BADGE_DELAY_MS = 2000; // Delay between multiple badge reveals\nconst TOOLTIP_OFFSET = 8; // Tooltip offset from progress ring\nconst MOBILE_TOOLTIP_DURATION = 3000; // Mobile tooltip display duration\n\nclass CategoryGrid {\n  constructor() {\n    this.container = null;\n    this.categories = getAllCategories();\n    this.userProgress = this.loadUserProgress();\n    this.lastModalOpenTime = 0; // Debounce tracking\n    this.modalOpenCooldown = 500; // Minimum time between modal opens (ms)\n\n    this.init();\n  }\n\n  init() {\n    this.container = document.querySelector('.categories-grid, .simulations-grid');\n    if (!this.container) {\n      logger.error('Category grid container not found');\n      return;\n    }\n\n    this.render();\n  }\n\n  loadUserProgress() {\n    // Load user progress from localStorage\n    try {\n      const stored = localStorage.getItem('simulateai_category_progress');\n      return stored ? JSON.parse(stored) : {};\n    } catch (error) {\n      logger.error('Failed to load user progress:', error);\n      return {};\n    }\n  }\n\n  saveUserProgress() {\n    try {\n      localStorage.setItem(\n        'simulateai_category_progress',\n        JSON.stringify(this.userProgress)\n      );\n    } catch (error) {\n      logger.error('Failed to save user progress:', error);\n    }\n  }\n\n  getCategoryProgress(categoryId) {\n    return getCategoryProgress(categoryId, this.userProgress);\n  }\n\n  render() {\n    this.container.innerHTML = '';\n\n    // Create the complete category-based layout\n    this.categories.forEach(category => {\n      const categorySection = this.createCategorySection(category);\n      this.container.appendChild(categorySection);\n    });\n\n    // Attach event listeners after rendering\n    this.attachEventListeners();\n  }\n\n  createCategorySection(category) {\n    const section = document.createElement('section');\n    section.className = 'category-section';\n    section.setAttribute('data-category-id', category.id);\n    section.id = `category-${category.id}`;\n\n    const progress = this.getCategoryProgress(category.id);\n    const scenarios = getCategoryScenarios(category.id);\n\n    section.innerHTML = `\n            <div class=\"category-header\">\n                <div class=\"category-title-group\">\n                    <div class=\"category-icon-large\" style=\"background-color: ${category.color}20; color: ${category.color}\">\n                        ${category.icon}\n                    </div>\n                    <div class=\"category-info\">\n                        <h3 class=\"category-title\">${category.title}</h3>\n                        <p class=\"category-description\">${category.description}</p>\n                        <div class=\"category-meta\">\n                            <div class=\"category-meta-items\">\n                                <span class=\"category-difficulty difficulty-${category.difficulty}\">${category.difficulty}</span>\n                                <span class=\"category-time\">${category.estimatedTime} min</span>\n                                <span class=\"category-progress-text\">${progress.completed}/${progress.total} completed</span>\n                            </div>\n                            <a href=\"category.html?category=${category.id}\" class=\"category-see-all\">See All</a>\n                        </div>\n                    </div>\n                </div>\n${this.createProgressRing(category, progress)}\n            </div>\n\n            <div class=\"scenarios-grid\">\n                ${scenarios.map(scenario => this.createScenarioCard(scenario, category)).join('')}\n            </div>\n        `;\n\n    return section;\n  }\n\n  createScenarioCard(scenario, category) {\n    const isCompleted = this.userProgress[category.id]?.[scenario.id] || false;\n\n    return `\n            <article class=\"scenario-card ${isCompleted ? 'completed' : ''}\" \n                     data-scenario-id=\"${scenario.id}\" \n                     data-category-id=\"${category.id}\"\n                     role=\"button\" \n                     tabindex=\"0\"\n                     aria-label=\"Scenario: ${scenario.title} - ${scenario.difficulty} difficulty\">\n                \n                <div class=\"scenario-header\">\n                    <div class=\"scenario-icon\" style=\"background-color: ${category.color}15; color: ${category.color}\">\n                        ${category.icon}\n                    </div>\n                    <div class=\"scenario-difficulty difficulty-${scenario.difficulty}\">\n                        ${scenario.difficulty}\n                    </div>\n                </div>\n\n                <div class=\"scenario-content\">\n                    <h4 class=\"scenario-title\">${scenario.title}</h4>\n                    <p class=\"scenario-description\">${scenario.description}</p>\n                </div>\n\n                <div class=\"scenario-footer\">\n                    <button class=\"scenario-start-btn\" aria-label=\"Learning Lab for ${scenario.title} scenario\">\n                        Learning Lab\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                            <path d=\"M6 4L10 8L6 12\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </button>\n                    <button class=\"scenario-quick-start-btn\" aria-label=\"${isCompleted ? 'Replay' : 'Start'} ${scenario.title} scenario\">\n                        ${isCompleted ? 'Replay' : 'Start'}\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                            <path d=\"M5 3L12 8L5 13V3Z\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </button>\n                </div>\n\n                ${isCompleted ? '<div class=\"scenario-completed-badge\">✓</div>' : ''}\n            </article>\n        `;\n  }\n\n  attachEventListeners() {\n    this.container.addEventListener(\n      'click',\n      this.handleScenarioClick.bind(this)\n    );\n    this.container.addEventListener(\n      'keydown',\n      this.handleScenarioKeydown.bind(this)\n    );\n\n    // Listen for scenario modal fully closed (for badge display)\n    document.addEventListener('scenario-modal-closed', this.handleScenarioModalClosed.bind(this));\n    \n    // Add tooltip functionality for progress rings\n    this.attachProgressRingTooltips();\n  }\n\n  /**\n   * Attaches tooltip functionality to progress rings\n   */\n  attachProgressRingTooltips() {\n    const progressRings = this.container.querySelectorAll('.category-progress-ring[data-tooltip]');\n    \n    progressRings.forEach(ring => {\n      // Desktop: hover events\n      ring.addEventListener('mouseenter', this.showTooltip.bind(this));\n      ring.addEventListener('mouseleave', this.hideTooltip.bind(this));\n      \n      // Mobile: touch/tap events  \n      ring.addEventListener('touchstart', this.handleProgressRingTouch.bind(this));\n      ring.addEventListener('click', this.handleProgressRingClick.bind(this));\n      \n      // Keyboard accessibility\n      ring.addEventListener('keydown', this.handleProgressRingKeydown.bind(this));\n    });\n  }\n\n  /**\n   * Shows tooltip for progress ring\n   * @param {Event} event - Mouse or touch event\n   */\n  showTooltip(event) {\n    const ring = event.currentTarget;\n    const tooltip = ring.getAttribute('data-tooltip');\n    \n    if (!tooltip) return;\n\n    // Remove any existing tooltips\n    this.hideTooltip();\n\n    // Create tooltip element\n    const tooltipEl = document.createElement('div');\n    tooltipEl.className = 'progress-ring-tooltip';\n    tooltipEl.textContent = tooltip;\n    tooltipEl.setAttribute('role', 'tooltip');\n    \n    // Position tooltip above the progress ring\n    const rect = ring.getBoundingClientRect();\n    tooltipEl.style.position = 'fixed';\n    tooltipEl.style.left = `${rect.left + rect.width / 2}px`;\n    tooltipEl.style.transform = 'translateX(-50%)';\n    tooltipEl.style.zIndex = '1000';\n    \n    document.body.appendChild(tooltipEl);\n    \n    // Calculate position after adding to DOM so we can get tooltip height\n    const tooltipRect = tooltipEl.getBoundingClientRect();\n    const topPosition = rect.top - tooltipRect.height - TOOLTIP_OFFSET;\n    \n    // If tooltip would go off-screen at top, show it below instead\n    if (topPosition < 0) {\n      tooltipEl.style.top = `${rect.bottom + TOOLTIP_OFFSET}px`;\n    } else {\n      tooltipEl.style.top = `${topPosition}px`;\n    }\n    \n    // Trigger the visible state with a small delay to ensure CSS transition works\n    requestAnimationFrame(() => {\n      tooltipEl.classList.add('visible');\n    });\n    \n    // Store reference for cleanup\n    ring._tooltip = tooltipEl;\n  }\n\n  /**\n   * Hides tooltip for progress ring\n   */\n  hideTooltip() {\n    const existingTooltips = document.querySelectorAll('.progress-ring-tooltip');\n    existingTooltips.forEach(tooltip => {\n      tooltip.remove();\n    });\n    \n    // Clear tooltip references\n    const rings = this.container.querySelectorAll('.category-progress-ring');\n    rings.forEach(ring => {\n      if (ring._tooltip) {\n        ring._tooltip = null;\n      }\n    });\n  }\n\n  /**\n   * Handles touch events for mobile tooltip\n   * @param {Event} event - Touch event\n   */\n  handleProgressRingTouch(event) {\n    event.preventDefault();\n    this.showTooltip(event);\n    \n    // Hide tooltip after delay on mobile\n    setTimeout(() => {\n      this.hideTooltip();\n    }, MOBILE_TOOLTIP_DURATION);\n  }\n\n  /**\n   * Handles click events for progress ring\n   * @param {Event} event - Click event\n   */\n  handleProgressRingClick(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    // On mobile, toggle tooltip\n    if ('ontouchstart' in window) {\n      const ring = event.currentTarget;\n      if (ring._tooltip) {\n        this.hideTooltip();\n      } else {\n        this.showTooltip(event);\n        setTimeout(() => this.hideTooltip(), MOBILE_TOOLTIP_DURATION);\n      }\n    }\n  }\n\n  /**\n   * Handles keyboard events for progress ring accessibility\n   * @param {Event} event - Keyboard event\n   */\n  handleProgressRingKeydown(event) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.showTooltip(event);\n      \n      // Hide tooltip after delay\n      setTimeout(() => {\n        this.hideTooltip();\n      }, MOBILE_TOOLTIP_DURATION);\n    } else if (event.key === 'Escape') {\n      this.hideTooltip();\n    }\n  }\n\n  handleScenarioClick(event) {\n    const scenarioCard = event.target.closest('.scenario-card');\n    if (!scenarioCard) return;\n\n    // Prevent default navigation behavior\n    event.preventDefault();\n\n    const scenarioId = scenarioCard.getAttribute('data-scenario-id');\n    const categoryId = scenarioCard.getAttribute('data-category-id');\n    \n    // Check if the clicked element is the quick start button\n    if (event.target.classList.contains('scenario-quick-start-btn') || \n        event.target.closest('.scenario-quick-start-btn')) {\n      this.openScenarioModalDirect(categoryId, scenarioId);\n    } else {\n      // Regular Learning Lab button - go through pre-launch modal\n      this.openScenario(categoryId, scenarioId);\n    }\n  }\n\n  handleScenarioKeydown(event) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      const scenarioCard = event.target.closest('.scenario-card');\n      if (scenarioCard) {\n        const scenarioId = scenarioCard.getAttribute('data-scenario-id');\n        const categoryId = scenarioCard.getAttribute('data-category-id');\n        \n        // Check if focus is on the quick start button\n        if (event.target.classList.contains('scenario-quick-start-btn')) {\n          this.openScenarioModalDirect(categoryId, scenarioId);\n        } else {\n          // Regular Learning Lab button behavior\n          this.openScenario(categoryId, scenarioId);\n        }\n      }\n    }\n  }\n\n  openScenario(categoryId, scenarioId) {\n    const category = this.categories.find(c => c.id === categoryId);\n    const scenario = category?.scenarios.find(s => s.id === scenarioId);\n\n    if (!category || !scenario) {\n      logger.error('Category or scenario not found:', categoryId, scenarioId);\n      return;\n    }\n\n    logger.info('Opening premodal for category:', category);\n\n    // Dispatch custom event for other components to listen to\n    const event = new CustomEvent('scenario-selected', {\n      detail: { category, scenario, categoryId, scenarioId },\n    });\n    document.dispatchEvent(event);\n\n    // Open the PreLaunchModal configured for this category\n    this.openCategoryPremodal(category, scenario);\n  }\n\n  /**\n   * Clean up any existing modal instances to prevent multiple modals\n   */\n  cleanupExistingModals() {\n    // Close any existing pre-launch modals by backdrop\n    const existingModalBackdrops = document.querySelectorAll('.modal-backdrop');\n    existingModalBackdrops.forEach(backdrop => {\n      const modalDialog = backdrop.querySelector('.modal-dialog');\n      if (modalDialog && modalDialog.querySelector('.pre-launch-modal')) {\n        // Found a pre-launch modal, remove it immediately\n        backdrop.remove();\n      }\n    });\n\n    // Also clean up any orphaned modal elements\n    const orphanedPreLaunchModals = document.querySelectorAll('.pre-launch-modal');\n    orphanedPreLaunchModals.forEach(modal => {\n      const parentBackdrop = modal.closest('.modal-backdrop');\n      if (parentBackdrop) {\n        parentBackdrop.remove();\n      } else {\n        modal.remove();\n      }\n    });\n\n    // Clean up body styles that might be left behind\n    document.body.style.overflow = '';\n    \n    // Remove any modal-related classes from body\n    document.body.classList.remove('modal-open');\n    \n    // Remove any lingering inert states from other elements\n    document.querySelectorAll('[inert]').forEach(el => {\n      if (!el.classList.contains('modal-backdrop')) {\n        el.removeAttribute('inert');\n      }\n    });\n  }\n\n  openCategoryPremodal(category, scenario) {\n    try {\n      // Clean up any existing modals first\n      this.cleanupExistingModals();\n\n      // Use the category ID as the \"simulation ID\" and pass category/scenario data\n      const preModal = new PreLaunchModal(category.id, {\n        categoryData: category,\n        scenarioData: scenario,\n        onLaunch: () => {\n          logger.info('Starting scenario:', scenario.title);\n          // Launch the scenario modal with both category and scenario IDs\n          this.openScenarioModal(scenario.id, category.id);\n        },\n        onCancel: () => {\n          logger.info('Category premodal cancelled');\n        },\n        showEducatorResources: true,\n      });\n\n      preModal.show();\n    } catch (error) {\n      logger.error('Failed to open category premodal:', error);\n      // Fallback to simple alert\n      alert(\n        `Opening \"${scenario.title}\" from ${category.title} - Premodal setup needed for categories!`\n      );\n    }\n  }\n\n  /**\n   * Open scenario modal for a specific scenario\n   */\n  openScenarioModal(scenarioId, categoryId = null) {\n    try {\n      const scenarioModal = new ScenarioModal();\n      scenarioModal.open(scenarioId, categoryId);\n\n      // Listen for scenario completion\n      document.addEventListener(\n        'scenario-completed',\n        this.handleScenarioCompleted.bind(this),\n        { once: true }\n      );\n    } catch (error) {\n      logger.error('Failed to open scenario modal:', error);\n      // Fallback to alert\n      alert(`Failed to open scenario modal for: ${scenarioId}`);\n    }\n  }\n\n  /**\n   * Open scenario modal directly, skipping pre-launch modal\n   */\n  openScenarioModalDirect(categoryId, scenarioId) {\n    // Debounce to prevent rapid successive calls\n    const now = Date.now();\n    if (now - this.lastModalOpenTime < this.modalOpenCooldown) {\n      logger.warn('Modal opening too rapidly, ignoring duplicate request');\n      return;\n    }\n    this.lastModalOpenTime = now;\n\n    const category = this.categories.find(c => c.id === categoryId);\n    const scenario = category?.scenarios.find(s => s.id === scenarioId);\n\n    if (!category || !scenario) {\n      logger.error('Category or scenario not found:', categoryId, scenarioId);\n      return;\n    }\n\n    logger.info('CategoryGrid', 'Opening scenario modal directly for:', { title: scenario.title });\n\n    // Dispatch custom event for other components to listen to\n    const event = new CustomEvent('scenario-selected', {\n      detail: { category, scenario, categoryId, scenarioId },\n    });\n    document.dispatchEvent(event);\n\n    // Open the scenario modal directly\n    this.openScenarioModal(scenarioId, categoryId);\n  }\n\n  /**\n   * Handle scenario completion event (immediate progress tracking)\n   */\n  handleScenarioCompleted(event) {\n    const { scenarioId, selectedOption, option } = event.detail;\n\n    logger.info('Scenario completed:', {\n      scenarioId,\n      selectedOption,\n      optionText: option.text,\n    });\n\n    // Find the category that contains this scenario\n    const category = this.categories.find(cat => {\n      const scenarios = getCategoryScenarios(cat.id);\n      return scenarios.some(scenario => scenario.id === scenarioId);\n    });\n\n    if (category) {\n      // Update progress (without badge checking)\n      this.updateProgress(category.id, scenarioId, true, false);\n\n      // Track analytics if available\n      if (window.AnalyticsManager) {\n        window.AnalyticsManager.trackEvent('scenario_completed', {\n          categoryId: category.id,\n          scenarioId,\n          selectedOption,\n          optionText: option.text,\n          impact: option.impact,\n        });\n      }\n    }\n  }\n\n  /**\n   * Handle scenario modal fully closed event (for badge display)\n   */\n  handleScenarioModalClosed(event) {\n    const { categoryId, scenarioId } = event.detail;\n\n    logger.info('Scenario modal fully closed, checking for badges:', {\n      categoryId,\n      scenarioId,\n    });\n\n    // Now check for newly earned badges\n    this.checkForNewBadges(categoryId, scenarioId);\n  }\n\n  updateProgress(categoryId, scenarioId, completed = true, checkBadges = true) {\n    if (!this.userProgress[categoryId]) {\n      this.userProgress[categoryId] = {};\n    }\n\n    this.userProgress[categoryId][scenarioId] = completed;\n    this.saveUserProgress();\n\n    // Check for newly earned badges only if explicitly requested\n    if (completed && checkBadges) {\n      this.checkForNewBadges(categoryId, scenarioId);\n    }\n\n    // Re-render to update progress indicators\n    this.render();\n  }\n\n  /**\n   * Checks for newly earned badges and displays them\n   * @param {string} categoryId - Category identifier\n   * @param {string} scenarioId - Scenario identifier\n   */\n  async checkForNewBadges(categoryId, scenarioId) {\n    try {\n      // Refresh badge manager's category progress\n      badgeManager.refreshCategoryProgress();\n      \n      // Check for newly earned badges\n      const newBadges = badgeManager.updateScenarioCompletion(categoryId, scenarioId);\n      \n      if (newBadges && newBadges.length > 0) {\n        // Display each new badge with a delay between multiple badges\n        for (let i = 0; i < newBadges.length; i++) {\n          const badge = newBadges[i];\n          \n          // Add small delay between multiple badges\n          if (i > 0) {\n            await this.delay(BADGE_DELAY_MS);\n          }\n          \n          // Show badge modal with main context (from home page)\n          await badgeModal.showBadgeModal(badge, 'main');\n          \n          // Track badge achievement\n          logger.info('Badge earned:', {\n            categoryId: badge.categoryId,\n            badgeTitle: badge.title,\n            tier: badge.tier,\n            timestamp: badge.timestamp\n          });\n          \n          // Track analytics if available\n          if (window.AnalyticsManager) {\n            window.AnalyticsManager.trackEvent('badge_earned', {\n              categoryId: badge.categoryId,\n              badgeTitle: badge.title,\n              tier: badge.tier,\n              scenarioId\n            });\n          }\n        }\n      }\n    } catch (error) {\n      logger.error('Error checking for new badges:', error);\n    }\n  }\n\n  /**\n   * Utility function to create delays\n   * @param {number} ms - Milliseconds to delay\n   * @returns {Promise} Promise that resolves after delay\n   */\n  delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  getFilteredCategories(filter = {}) {\n    let filtered = [...this.categories];\n\n    if (filter.difficulty) {\n      filtered = filtered.filter(c => c.difficulty === filter.difficulty);\n    }\n\n    if (filter.tags) {\n      filtered = filtered.filter(c =>\n        filter.tags.some(tag => c.tags.includes(tag))\n      );\n    }\n\n    if (filter.completed !== undefined) {\n      filtered = filtered.filter(c => {\n        const progress = this.getCategoryProgress(c.id);\n        return filter.completed\n          ? progress.completed === progress.total\n          : progress.completed < progress.total;\n      });\n    }\n\n    return filtered;\n  }\n\n  /**\n   * Checks if user is one scenario away from earning the next badge\n   * @param {string} categoryId - Category identifier\n   * @returns {Object|null} Next badge info if one scenario away, null otherwise\n   */\n  isOneScenarioFromNextBadge(categoryId) {\n    try {\n      // Ensure badge manager has latest progress data\n      badgeManager.refreshCategoryProgress();\n      \n      const progress = badgeManager.getBadgeProgress(categoryId);\n      \n      if (!progress || !progress.nextBadge || !progress.progress) {\n        return null;\n      }\n\n      const { remaining } = progress.progress;\n      \n      // Check if exactly one scenario away from next badge\n      if (remaining === 1) {\n        return {\n          nextBadge: progress.nextBadge,\n          current: progress.progress.current,\n          required: progress.progress.required,\n          badgeTitle: progress.nextBadge.title,\n          sidekickEmoji: progress.nextBadge.sidekickEmoji\n        };\n      }\n\n      return null;\n    } catch (error) {\n      logger.error('Error checking badge progress:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Creates the progress ring with pulse animation and tooltip for badges\n   * @param {Object} category - Category object\n   * @param {Object} progress - Progress object\n   * @returns {string} Progress ring HTML\n   */\n  createProgressRing(category, progress) {\n    // Get badge progress information\n    const badgeProgress = badgeManager.getBadgeProgress(category.id);\n    const isOneScenarioAwayFromBadge = badgeProgress.nextBadge && badgeProgress.progress.remaining === 1;\n    \n    // Create enhanced tooltip content\n    let tooltipContent = `${progress.completed} of ${progress.total} scenarios completed`;\n    \n    if (badgeProgress.nextBadge) {\n      if (isOneScenarioAwayFromBadge) {\n        tooltipContent += `. 1 more to unlock next badge: '${badgeProgress.nextBadge.title}' ${badgeProgress.nextBadge.sidekickEmoji}`;\n      } else {\n        const { remaining } = badgeProgress.progress;\n        tooltipContent += `. ${remaining} more to unlock next badge: '${badgeProgress.nextBadge.title}' ${badgeProgress.nextBadge.sidekickEmoji}`;\n      }\n    } else {\n      tooltipContent += ` (${progress.percentage}%)`;\n    }\n\n    // Add badge alert class if one scenario away from earning a badge\n    const badgeAlertClass = isOneScenarioAwayFromBadge ? ' badge-alert' : '';\n\n    return `\n      <div class=\"category-progress-ring${badgeAlertClass}\" \n           data-tooltip=\"${tooltipContent}\"\n           role=\"button\"\n           tabindex=\"0\"\n           aria-label=\"Category progress: ${tooltipContent}\">\n        <svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\">\n          <circle cx=\"30\" cy=\"30\" r=\"26\" fill=\"none\" stroke=\"#e5e7eb\" stroke-width=\"4\"/>\n          <circle cx=\"30\" cy=\"30\" r=\"26\" fill=\"none\" stroke=\"${category.color}\" stroke-width=\"4\"\n                  stroke-linecap=\"round\" stroke-dasharray=\"${PROGRESS_CIRCLE_CIRCUMFERENCE}\" \n                  stroke-dashoffset=\"${PROGRESS_CIRCLE_CIRCUMFERENCE - (progress.percentage / 100) * PROGRESS_CIRCLE_CIRCUMFERENCE}\"\n                  style=\"transform: rotate(-90deg); transform-origin: 30px 30px;\"/>\n        </svg>\n        <span class=\"progress-percentage\">${progress.percentage}%</span>\n      </div>\n    `;\n  }\n\n  // Public API for external components\n  refreshProgress() {\n    this.userProgress = this.loadUserProgress();\n    this.render();\n  }\n\n  highlightScenario(categoryId, scenarioId) {\n    const card = this.container.querySelector(\n      `[data-category-id=\"${categoryId}\"][data-scenario-id=\"${scenarioId}\"]`\n    );\n    if (card) {\n      card.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      card.classList.add('scenario-card-highlighted');\n      setTimeout(\n        () => card.classList.remove('scenario-card-highlighted'),\n        HIGHLIGHT_DURATION\n      );\n    }\n  }\n\n  highlightCategory(categoryId) {\n    const section = this.container.querySelector(\n      `[data-category-id=\"${categoryId}\"]`\n    );\n    if (section) {\n      section.scrollIntoView({ behavior: 'smooth', block: 'start' });\n      section.classList.add('category-section-highlighted');\n      setTimeout(\n        () => section.classList.remove('category-section-highlighted'),\n        HIGHLIGHT_DURATION\n      );\n    }\n  }\n}\n\nexport default CategoryGrid;\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Onboarding Coach Marks System\n * Creates a guided walkthrough using spotlight/coach marks with auto-scroll\n */\n\nimport logger from '../utils/logger.js';\nimport focusManager from '../utils/focus-manager.js';\nimport scrollManager from '../utils/scroll-manager.js';\nimport ModalUtility from './modal-utility.js';\nimport { simpleStorage } from '../utils/simple-storage.js';\nimport { simpleAnalytics } from '../utils/simple-analytics.js';\n\nclass OnboardingTour {\n  static instanceCount = 0;\n\n  constructor() {\n    OnboardingTour.instanceCount++;\n    this.instanceId = OnboardingTour.instanceCount;\n\n    const STACK_TRACE_LINES = 5;\n    logger.warn(\n      'OnboardingTour',\n      `🏗️ NEW INSTANCE CREATED #${this.instanceId}`,\n      {\n        totalInstances: OnboardingTour.instanceCount,\n        stackTrace: new Error().stack.split('\\n').slice(1, STACK_TRACE_LINES),\n      }\n    );\n\n    this.currentStep = 0;\n    this.currentTutorial = 1;\n    this.isActive = false;\n    this.isTransitioning = false; // Prevent race conditions in step transitions\n    this.isProcessingAction = false; // Prevent rapid button clicks\n    this.coachMark = null;\n    this.overlay = null;\n    this.spotlight = null;\n    this.contentObserver = null; // For tracking dynamic content changes\n    this.contentUpdateTimeout = null; // For debouncing content updates\n\n    // User interaction states\n    this.userStates = {\n      'option-selected': false,\n      'choice-confirmed': false,\n      'modal-opened': false,\n    };\n\n    // Scroll tracking\n    this.isAutoScrolling = false;\n    this.userHasManuallyScrolled = false;\n    this.lastScrollPosition = 0;\n    this.scrollTrackingTimer = null;\n\n    // Constants\n    this.ANIMATION_DURATION = 300; // ms\n    this.SCROLL_DURATION = 800; // ms\n    this.SCROLL_OFFSET = 100; // px from top\n    this.COACH_MARK_SPACING = 20; // px\n    this.AUTO_ADVANCE_DELAY = 3000; // ms for steps with actions\n    this.MIN_SCROLL_DISTANCE = 5; // px\n    this.EASE_MIDPOINT = 0.5; // easing function midpoint\n    this.EASE_MULTIPLIER = 4; // easing function multiplier\n    this.DEBOUNCE_DURATION = 300; // ms for preventing rapid clicks\n    this.MOBILE_NAVIGATION_SPACE = 60; // px space for mobile navigation\n    this.MOBILE_MAX_HEIGHT_RATIO = 0.5; // max height as fraction of viewport\n    this.MOBILE_POSITION_RATIO = 0.3; // mobile positioning ratio\n    this.MOBILE_COACH_MARK_HEIGHT_RATIO = 0.4; // mobile coach mark max height ratio\n    this.MOBILE_BREAKPOINT = 768; // px - mobile breakpoint\n    this.SMALL_MOBILE_BREAKPOINT = 480; // px - very small screens\n    this.MOBILE_SPACING = 10; // px - reduced spacing on mobile\n    this.DESKTOP_SPACING = 20; // px - desktop spacing\n    this.MANUAL_SCROLL_RESET_DELAY = 2000; // ms to reset manual scroll flag\n    this.LEARNING_LAB_TUTORIAL = 3; // Tutorial number for Learning Lab\n    this.TUTORIAL_3_STEP_3_INDEX = 2; // 0-indexed step number for step 3\n    this.TUTORIAL_3_BOTTOM_POSITION_START = 2; // 0-indexed: step 3\n    this.TUTORIAL_3_BOTTOM_POSITION_END = 7; // 0-indexed: step 8\n    this.ACCORDION_CHECK_DELAY = 200; // ms to wait before checking accordion state\n    this.MODAL_CHECK_DELAY = 200; // ms between modal closure checks\n    this.CHECK_DELAY = 100; // ms for general UI state checks\n    this.DEBUG_TEXT_LENGTH = 20; // chars to show in debug logs\n    this.CLICK_TIMEOUT = 10000; // ms to wait for user click before fallback\n    this.OPTION_TEXT_LENGTH = 50; // chars to show in option logs\n    this.CONTENT_UPDATE_DELAY = 100; // ms to debounce content observer updates\n\n    // Keyboard navigation tracking\n    this.wasKeyboardNavigation = false;\n\n    // Tutorial steps configuration\n    this.tutorials = {\n      1: {\n        // Test Scenario Tutorial\n        name: 'test-scenario',\n        title: 'Test Scenario Tutorial',\n        steps: [\n          {\n            id: 'welcome',\n            title: 'Welcome to SimulateAI! 🤖',\n            content:\n              'A Digital Learning Lab where you journey into the ethical frontiers of AI and Robotics. This tour will guide you through our interactive platform.',\n            buttons: [\n              { text: 'Start Tour', action: 'continue', primary: true },\n              { text: 'Start Exploring', action: 'finish', primary: false },\n            ],\n            target: null,\n            position: 'center',\n            autoScroll: false,\n          },\n          {\n            id: 'launch-test',\n            title: 'Launch Test Scenario',\n            content:\n              'Click this button to open an interactive ethics simulation and see how moral dilemmas are presented.',\n            target: '#test-scenario-modal',\n            position: 'bottom',\n            action: 'wait-for-click',\n            autoScroll: true,\n            highlightClick: true,\n          },\n          {\n            id: 'dilemma-section',\n            title: 'The Dilemma Section',\n            content:\n              'This section presents the ethical scenario. Read carefully to understand the situation and its complexities.',\n            target: '.dilemma-text',\n            position: 'right',\n            waitFor: 'scenario-modal',\n            autoScroll: true,\n          },\n          {\n            id: 'ethical-question',\n            title: 'Ethical Question',\n            content:\n              'This highlights the core ethical consideration. What values are at stake in this scenario?',\n            target: '.ethical-question',\n            position: 'right',\n            autoScroll: true,\n          },\n          {\n            id: 'choose-approach',\n            title: 'Choose Your Approach',\n            content:\n              'Each approach represents a different ethical framework. Please click the <strong>first option</strong> to continue the tutorial and see how the analysis works!',\n            target: '.options-container',\n            position: 'right',\n            action: 'wait-for-click',\n            highlightClick: true,\n            autoScroll: true,\n          },\n          {\n            id: 'pros-cons',\n            title: 'Pros and Cons Analysis',\n            content:\n              'Perfect! The details expanded to show the analysis. Every ethical choice has trade-offs - these help you understand the implications.',\n            target: '.option-details',\n            position: 'right',\n            autoScroll: true,\n            waitForElement: true,\n          },\n          {\n            id: 'radar-chart-preview',\n            title: 'Radar Chart Visualization',\n            content:\n              \"This radar chart shows how your choice impacts different ethical dimensions. The chart updates based on your selection - we'll explore this in detail in Tutorial 2!\",\n            target: '#scenario-radar-chart',\n            position: 'left',\n            autoScroll: true,\n            waitFor: 'option-selected',\n          },\n          {\n            id: 'confirm-choice',\n            title: 'Confirm Your Decision',\n            content:\n              'When ready, confirm your choice. Remember - there\\'s no \"wrong\" answer in ethics exploration!',\n            target: '#confirm-choice',\n            position: 'right',\n            action: 'wait-for-click',\n            highlightClick: true,\n            autoScroll: true,\n          },\n          {\n            id: 'tutorial-complete',\n            title: 'Congratulations! 🎉',\n            content:\n              \"Excellent work! You've successfully completed your first ethical scenario exploration. You've learned how to navigate complex moral dilemmas, analyze different approaches, and understand the ethical implications through our interactive tools.<br><br>Would you like to continue with Tutorial 2 to explore the radar chart visualization in more detail?\",\n            buttons: [\n              {\n                text: '📊 Continue to Tutorial 2',\n                action: 'next-tutorial',\n                primary: true,\n              },\n              { text: 'Start Exploring', action: 'finish', primary: false },\n            ],\n            target: null,\n            position: 'center',\n            autoScroll: false,\n            skipUntil: 'choice-confirmed',\n          },\n        ],\n      },\n      2: {\n        // Hero Demo Tutorial\n        name: 'hero-demo',\n        title: 'Hero Demo Tutorial',\n        steps: [\n          {\n            id: 'hero-demo-chart',\n            title: 'Interactive Radar Chart 📊',\n            content:\n              'This is our Hero Demo radar chart. It shows how different ethical choices impact various dimensions in real-time, giving you a visual representation of moral decision-making.',\n            target: '#hero-ethics-chart',\n            position: 'bottom',\n            autoScroll: true,\n          },\n          {\n            id: 'ethical-dimensions',\n            title: 'Ethical Dimensions Explained',\n            content:\n              'The chart displays 8 key ethical dimensions that represent core moral principles. Each axis shows how your decisions impact different aspects of AI ethics - from fairness to sustainability.',\n            target: '#hero-ethics-chart',\n            position: 'left',\n            autoScroll: false,\n          },\n          {\n            id: 'interactive-controls',\n            title: 'Try the Controls! 🎮',\n            content:\n              'Use these buttons to see how different ethical approaches affect the dimensions. Watch the chart change in real-time as you explore different scenarios! Click \"Next\" when you\\'re ready to continue.',\n            target: '.demo-controls-grid',\n            position: 'left',\n            autoScroll: true,\n            highlightClick: true,\n          },\n          {\n            id: 'how-to-read',\n            title: 'How to Read Charts 📖',\n            content:\n              'This section teaches you about interpreting the visual data and understanding the ethical implications of each choice. Click \"Next\" to continue exploring.',\n            target: '.radar-instructions-accordion',\n            position: 'bottom',\n            autoScroll: true,\n            highlightClick: true,\n          },\n          {\n            id: 'glossary',\n            title: 'Ethical Dimensions Glossary 📚',\n            content:\n              'This glossary provides detailed definitions of each ethical principle used in our simulations. Click \"Next\" to complete the radar chart tutorial.',\n            target: '.ethics-glossary-accordion',\n            position: 'bottom',\n            autoScroll: true,\n            highlightClick: true,\n          },\n          {\n            id: 'radar-tutorial-complete',\n            title: 'Radar Chart Mastery! 🎉',\n            content:\n              'Excellent! You now understand how to interpret ethical impacts visually and interact with our radar chart system. Ready to explore the Learning Lab?',\n            buttons: [\n              {\n                text: '🧪 Learning Lab Tutorial',\n                action: 'next-tutorial',\n                primary: true,\n              },\n              { text: 'Start Exploring', action: 'finish', primary: false },\n            ],\n            target: null,\n            position: 'center',\n            autoScroll: false,\n          },\n        ],\n      },\n      3: {\n        // Learning Lab Pre-Launch Modal Tutorial\n        name: 'learning-lab',\n        title: 'Learning Lab Tutorial',\n        steps: [\n          {\n            id: 'find-trolley-problem',\n            title: 'Scenario Simulations',\n            content:\n              'Each scenario includes a fully equipped Learning Lab, offering a detailed overview and curated educator resources to deepen understanding and spark meaningful discussion.',\n            target:\n              '#category-trolley-problem > div.scenarios-grid > article:nth-child(1)',\n            position: 'bottom',\n            autoScroll: true,\n          },\n          {\n            id: 'click-learning-lab',\n            title: 'Open Learning Lab',\n            content:\n              'Perfect! Now click the \"Learning Lab\" button on this Trolley Problem scenario card to open the pre-launch modal.',\n            target:\n              '#category-trolley-problem > div.scenarios-grid > article:nth-child(1) > div.scenario-footer > button.scenario-start-btn',\n            position: 'bottom',\n            action: 'wait-for-click',\n            autoScroll: true,\n            highlightClick: true,\n            waitFor:\n              '#category-trolley-problem > div.scenarios-grid > article:nth-child(1)',\n          },\n          {\n            id: 'overview-tab',\n            title: 'Overview Tab',\n            content:\n              'This Overview tab provides a comprehensive introduction to the scenario, including the ethical dilemma, key stakeholders, and real-world context. Click \"Next\" to continue exploring the other tabs.',\n            target:\n              '.tab-buttons-container [data-tab=\"overview\"], .tab-buttons-container .tab-button[data-tab=\"overview\"]',\n            position: 'right',\n            waitFor: 'pre-launch-modal',\n            autoScroll: true,\n          },\n          {\n            id: 'learning-goals-tab',\n            title: 'Learning Goals Tab',\n            content:\n              'The Learning Goals tab outlines what you\\'ll discover and understand by completing this simulation, including key ethical principles and decision-making frameworks. Click \"Next\" to continue exploring the other tabs.',\n            target:\n              '.tab-buttons-container [data-tab=\"objectives\"], .tab-buttons-container .tab-button[data-tab=\"objectives\"]',\n            position: 'right',\n            highlightClick: true,\n            autoScroll: true,\n          },\n          {\n            id: 'ethics-guide-tab',\n            title: 'Ethics Guide Tab',\n            content:\n              'The Ethics Guide provides essential background on moral frameworks, philosophical approaches, and ethical theories relevant to this scenario. Click \"Next\" to see the next tab.',\n            target:\n              '.tab-buttons-container [data-tab=\"ethics\"], .tab-buttons-container .tab-button[data-tab=\"ethics\"]',\n            position: 'right',\n            highlightClick: true,\n            autoScroll: true,\n          },\n          {\n            id: 'get-ready-tab',\n            title: 'Get Ready Tab',\n            content:\n              'Get Ready helps you prepare for the simulation with pre-activity questions, reflection prompts, and scenario setup information. Click \"Next\" to continue.',\n            target:\n              '.tab-buttons-container [data-tab=\"preparation\"], .tab-buttons-container .tab-button[data-tab=\"preparation\"]',\n            position: 'right',\n            highlightClick: true,\n            autoScroll: true,\n          },\n          {\n            id: 'resources-tab',\n            title: 'Resources Tab',\n            content:\n              'The Resources tab contains supplementary materials, research papers, case studies, and additional reading to deepen your understanding. Click \"Next\" to see the final tab.',\n            target:\n              '.tab-buttons-container [data-tab=\"resources\"], .tab-buttons-container .tab-button[data-tab=\"resources\"]',\n            position: 'right',\n            highlightClick: true,\n            autoScroll: true,\n          },\n          {\n            id: 'for-educators-tab',\n            title: 'For Educators Tab',\n            content:\n              'For Educators provides teaching guides, discussion questions, assessment rubrics, and classroom integration strategies for instructors. This completes our tour of the Learning Lab tabs!',\n            target:\n              '.tab-buttons-container [data-tab=\"educator\"], .tab-buttons-container .tab-button[data-tab=\"educator\"]',\n            position: 'right',\n            highlightClick: true,\n            autoScroll: true,\n            hasNextButton: true,\n            action: 'next',\n            onShow() {\n              // Enhanced auto-scroll to ensure \"For Educators\" tab is visible\n              const educatorTab =\n                document.querySelector(\n                  '.tab-buttons-container [data-tab=\"educator\"]'\n                ) ||\n                document.querySelector(\n                  '.tab-buttons-container .tab-button[data-tab=\"educator\"]'\n                );\n\n              if (educatorTab) {\n                // Scroll the tab into view with enhanced positioning\n                educatorTab.scrollIntoView({\n                  behavior: 'smooth',\n                  block: 'center',\n                  inline: 'center',\n                });\n\n                // Also scroll the tab container to ensure proper visibility\n                const tabContainer = educatorTab.closest(\n                  '.tab-buttons-container'\n                );\n                if (tabContainer) {\n                  tabContainer.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                  });\n                }\n\n                logger.info(\n                  'OnboardingTour',\n                  'Auto-scrolled to For Educators tab',\n                  {\n                    element: educatorTab,\n                    container: tabContainer,\n                  }\n                );\n              } else {\n                logger.warn(\n                  'OnboardingTour',\n                  'Could not find For Educators tab'\n                );\n              }\n\n              // Also auto-scroll nav menu to highlight educators tab (legacy behavior)\n              const navEducatorsTab = document.querySelector(\n                'a[href=\"#educator-tools\"]'\n              );\n              if (navEducatorsTab) {\n                navEducatorsTab.scrollIntoView({\n                  behavior: 'smooth',\n                  block: 'center',\n                });\n                logger.info(\n                  'OnboardingTour',\n                  'Auto-scrolled to Educator Tools nav link',\n                  { element: navEducatorsTab }\n                );\n              }\n            },\n          },\n          {\n            id: 'tutorial-complete',\n            title: 'Mission Accomplished! 🎉🤖',\n            content:\n              \"You've completed the tutorial and unlocked the tools to navigate the ethical terrain of intelligent machines. Ready to begin your journey?\",\n            buttons: [\n              { text: '🚀 Start Exploring', action: 'finish', primary: true },\n            ],\n            target: null,\n            position: 'center',\n            autoScroll: false,\n          },\n        ],\n      },\n    };\n\n    // Set up keyboard navigation tracking\n    this.setupKeyboardTracking();\n\n    this.init();\n  }\n\n  init() {\n    logger.info('OnboardingTour', 'Initializing onboarding coach marks system');\n\n    // Don't auto-start - let the app control when the tour starts\n    logger.debug(\n      'OnboardingTour',\n      'OnboardingTour initialized, waiting for manual start'\n    );\n  }\n\n  setupKeyboardTracking() {\n    // Track when user uses Tab key for navigation\n    document.addEventListener('keydown', e => {\n      if (e.key === 'Tab') {\n        this.wasKeyboardNavigation = true;\n      }\n    });\n\n    // Reset keyboard navigation flag on mouse click\n    document.addEventListener('mousedown', () => {\n      this.wasKeyboardNavigation = false;\n    });\n  }\n\n  isFirstTimeVisit() {\n    const hasVisited = simpleStorage.get('has_visited', false);\n    if (!hasVisited) {\n      simpleStorage.set('has_visited', true);\n      return true;\n    }\n    return false;\n  }\n\n  hasCompletedTour() {\n    return simpleStorage.get('tour_completed', false);\n  }\n\n  startTour(tutorialNumber = 1) {\n    logger.info(\n      'OnboardingTour',\n      `🚀 Starting onboarding tour ${tutorialNumber}`,\n      {\n        instanceId: this.instanceId,\n        tutorialNumber,\n        isActive: this.isActive,\n      }\n    );\n\n    if (this.isActive) {\n      logger.warn(\n        'OnboardingTour',\n        'Tour already active, ignoring start request'\n      );\n      return;\n    }\n\n    // Initialize tour state\n    this.isActive = true;\n    this.currentTutorial = tutorialNumber;\n    this.currentStep = 0;\n\n    // Reset user interaction states\n    this.userStates = {\n      'option-selected': false,\n      'choice-confirmed': false,\n      'modal-opened': false,\n    };\n\n    logger.info('OnboardingTour', `Starting tutorial ${tutorialNumber}`, {\n      currentStep: this.currentStep,\n      totalSteps: this.tutorials[tutorialNumber]?.steps?.length || 0,\n    });\n\n    // Track analytics\n    simpleAnalytics.trackEvent('tour_started', {\n      tutorial: tutorialNumber,\n    });\n\n    // Create UI elements and start\n    this.createOverlay();\n    this.showStep();\n  }\n\n  createOverlay() {\n    // Remove existing overlay\n    this.removeOverlay();\n\n    logger.debug('OnboardingTour', 'Creating overlay elements', {\n      tutorial: this.currentTutorial,\n      step: this.currentStep,\n      existingOverlays: document.querySelectorAll('.onboarding-overlay').length,\n    });\n\n    // Create main overlay (darkens everything except spotlight)\n    this.overlay = document.createElement('div');\n    this.overlay.className = 'onboarding-overlay';\n    this.overlay.setAttribute('role', 'presentation');\n    this.overlay.setAttribute('aria-hidden', 'true');\n\n    // Create spotlight (highlighted area)\n    this.spotlight = document.createElement('div');\n    this.spotlight.className = 'onboarding-spotlight';\n\n    // Create coach mark popup\n    this.coachMark = document.createElement('div');\n    this.coachMark.className = 'onboarding-coach-mark';\n    this.coachMark.setAttribute('role', 'dialog');\n    this.coachMark.setAttribute('aria-modal', 'true');\n    this.coachMark.setAttribute('aria-labelledby', 'coach-mark-title');\n    this.coachMark.setAttribute('aria-describedby', 'coach-mark-content');\n\n    // Add to DOM in correct order\n    document.body.appendChild(this.overlay);\n    document.body.appendChild(this.spotlight);\n    document.body.appendChild(this.coachMark);\n\n    // Add body class for styling\n    document.body.classList.add('onboarding-active');\n\n    // Special handling for Tutorial 3 Step 3 to ensure maximum visibility\n    if (\n      this.currentTutorial === this.TUTORIAL_3 &&\n      this.currentStep === this.TUTORIAL_3_STEP_3_INDEX\n    ) {\n      this.coachMark.style.zIndex = '10020';\n      this.coachMark.style.isolation = 'isolate';\n      this.coachMark.style.position = 'fixed';\n      logger.warn(\n        'OnboardingTour',\n        'TUTORIAL 3 STEP 3 - Applied aggressive stacking',\n        {\n          zIndex: this.coachMark.style.zIndex,\n          position: getComputedStyle(this.coachMark).position,\n          isolation: this.coachMark.style.isolation,\n        }\n      );\n    }\n\n    logger.debug('OnboardingTour', 'Overlay elements created and appended', {\n      overlayInDom: !!document.querySelector('.onboarding-overlay'),\n      totalOverlays: document.querySelectorAll('.onboarding-overlay').length,\n      coachMarkInDom: !!document.querySelector('.onboarding-coach-mark'),\n    });\n\n    // Setup scroll tracking\n    this.setupScrollTracking();\n\n    // Ensure any existing modals are onboarding-friendly\n    this.makeModalsOnboardingFriendly();\n  }\n\n  makeModalsOnboardingFriendly() {\n    // Find any active modal backdrops and make them onboarding-friendly\n    const modalBackdrops = document.querySelectorAll('.modal-backdrop');\n    modalBackdrops.forEach(backdrop => {\n      if (backdrop.style.display !== 'none') {\n        backdrop.style.pointerEvents = 'none';\n        const modalDialog = backdrop.querySelector('.modal-dialog');\n        if (modalDialog) {\n          modalDialog.style.pointerEvents = 'auto';\n        }\n        logger.debug('OnboardingTour', 'Made modal onboarding-friendly', {\n          modalId: backdrop.id,\n        });\n      }\n    });\n  }\n\n  removeOverlay() {\n    logger.debug('OnboardingTour', 'Removing overlay elements', {\n      hasOverlay: !!this.overlay,\n      hasSpotlight: !!this.spotlight,\n      hasCoachMark: !!this.coachMark,\n      hasContentObserver: !!this.contentObserver,\n      totalOverlaysInDom: document.querySelectorAll('.onboarding-overlay')\n        .length,\n    });\n\n    // Clean up content observer\n    if (this.contentObserver) {\n      this.contentObserver.disconnect();\n      this.contentObserver = null;\n    }\n\n    // Clear any pending content update timeouts\n    if (this.contentUpdateTimeout) {\n      clearTimeout(this.contentUpdateTimeout);\n      this.contentUpdateTimeout = null;\n    }\n\n    if (this.overlay) {\n      this.overlay.remove();\n      this.overlay = null;\n    }\n    if (this.spotlight) {\n      this.spotlight.remove();\n      this.spotlight = null;\n    }\n    if (this.coachMark) {\n      this.coachMark.remove();\n      this.coachMark = null;\n    }\n\n    // Also remove any orphaned overlay elements\n    const orphanedOverlays = document.querySelectorAll('.onboarding-overlay');\n    const orphanedSpotlights = document.querySelectorAll(\n      '.onboarding-spotlight'\n    );\n    const orphanedCoachMarks = document.querySelectorAll(\n      '.onboarding-coach-mark'\n    );\n\n    if (\n      orphanedOverlays.length > 0 ||\n      orphanedSpotlights.length > 0 ||\n      orphanedCoachMarks.length > 0\n    ) {\n      logger.warn('OnboardingTour', 'Found orphaned elements, cleaning up', {\n        overlays: orphanedOverlays.length,\n        spotlights: orphanedSpotlights.length,\n        coachMarks: orphanedCoachMarks.length,\n      });\n\n      orphanedOverlays.forEach(el => el.remove());\n      orphanedSpotlights.forEach(el => el.remove());\n      orphanedCoachMarks.forEach(el => el.remove());\n    }\n\n    document.body.classList.remove('onboarding-active');\n\n    logger.debug('OnboardingTour', 'Overlay cleanup complete', {\n      totalOverlaysInDom: document.querySelectorAll('.onboarding-overlay')\n        .length,\n    });\n\n    // Clean up scroll tracking\n    this.removeScrollTracking();\n  }\n\n  setupScrollTracking() {\n    this.lastScrollPosition = window.pageYOffset;\n    this.userHasManuallyScrolled = false;\n\n    // Track scroll events to detect manual scrolling\n    this.scrollHandler = () => {\n      if (!this.isAutoScrolling) {\n        this.userHasManuallyScrolled = true;\n        // Clear any existing timer\n        if (this.scrollTrackingTimer) {\n          clearTimeout(this.scrollTrackingTimer);\n        }\n        // Reset manual scroll flag after a delay (user might have finished scrolling)\n        this.scrollTrackingTimer = setTimeout(() => {\n          this.userHasManuallyScrolled = false;\n        }, this.MANUAL_SCROLL_RESET_DELAY);\n      }\n    };\n\n    window.addEventListener('scroll', this.scrollHandler, { passive: true });\n  }\n\n  removeScrollTracking() {\n    if (this.scrollHandler) {\n      window.removeEventListener('scroll', this.scrollHandler);\n      this.scrollHandler = null;\n    }\n    if (this.scrollTrackingTimer) {\n      clearTimeout(this.scrollTrackingTimer);\n      this.scrollTrackingTimer = null;\n    }\n  }\n\n  /**\n   * Scroll to element using unified scroll manager\n   * @param {HTMLElement} element - Element to scroll to\n   * @param {number} offset - Scroll offset\n   * @returns {Promise<void>} Promise that resolves when scrolling is complete\n   */\n  async scrollToElement(element, offset = this.SCROLL_OFFSET) {\n    if (!element) return;\n\n    // Use the unified scroll manager\n    await scrollManager.scrollToElement(element, {\n      behavior: 'smooth',\n      offset,\n    });\n  }\n\n  positionSpotlight(targetElement) {\n    if (!targetElement || !this.spotlight) return;\n\n    const rect = targetElement.getBoundingClientRect();\n    const padding = 8;\n\n    this.spotlight.style.left = `${rect.left - padding}px`;\n    this.spotlight.style.top = `${rect.top + window.pageYOffset - padding}px`;\n    this.spotlight.style.width = `${rect.width + padding * 2}px`;\n    this.spotlight.style.height = `${rect.height + padding * 2}px`;\n    this.spotlight.style.display = 'block';\n  }\n\n  positionCoachMark(\n    targetElement,\n    position = 'bottom',\n    step = null,\n    retryCount = 0\n  ) {\n    if (!this.coachMark) return;\n\n    // Prevent infinite recursion - max 3 retries\n    const MAX_POSITION_RETRIES = 3;\n    if (retryCount > MAX_POSITION_RETRIES) {\n      logger.warn(\n        'OnboardingTour',\n        `⚠️ Max positioning retries reached for step ${step?.id || 'unknown'}`\n      );\n      return;\n    }\n\n    // MOBILE-AWARE POSITIONING LOGIC\n    const isMobile = window.innerWidth <= this.MOBILE_BREAKPOINT; // Mobile breakpoint\n\n    // Get coach mark dimensions after content is set\n    this.coachMark.style.visibility = 'hidden';\n    this.coachMark.style.display = 'block';\n    this.coachMark.style.position = 'fixed'; // Use fixed positioning for consistent behavior\n    this.coachMark.style.zIndex = '10014';\n\n    // Reset mobile overlay class in case it was previously set\n    this.coachMark.classList.remove('mobile-overlay');\n    this.coachMark.style.width = ''; // Reset width\n    this.coachMark.style.maxHeight = ''; // Reset max height\n    this.coachMark.style.overflow = ''; // Reset overflow\n\n    const coachMarkRect = this.coachMark.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n    const viewportWidth = window.innerWidth;\n    const spacing = isMobile ? this.MOBILE_SPACING : this.DESKTOP_SPACING;\n\n    let left, top;\n\n    if (targetElement) {\n      // Get target position relative to viewport (fixed positioning)\n      const targetRect = targetElement.getBoundingClientRect();\n\n      // Ensure target is visible in viewport before positioning\n      if (\n        targetRect.bottom < 0 ||\n        targetRect.top > viewportHeight ||\n        targetRect.right < 0 ||\n        targetRect.left > viewportWidth\n      ) {\n        // Target is outside viewport, scroll it into view (only if we haven't exceeded retries)\n        if (retryCount < MAX_POSITION_RETRIES) {\n          logger.debug(\n            'OnboardingTour',\n            `Target outside viewport, scrolling into view (retry ${retryCount + 1}/${MAX_POSITION_RETRIES})`\n          );\n          targetElement.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'center',\n          });\n          // Wait for scroll to complete and retry with incremented count\n          setTimeout(() => {\n            this.positionCoachMark(\n              targetElement,\n              position,\n              step,\n              retryCount + 1\n            );\n          }, this.ANIMATION_DURATION);\n          return;\n        } else {\n          // Exceeded retries, position anyway (might be partially visible)\n          logger.warn(\n            'OnboardingTour',\n            `Target still outside viewport after ${MAX_POSITION_RETRIES} retries, positioning anyway`\n          );\n        }\n      }\n\n      // MOBILE POSITIONING STRATEGY\n      if (isMobile) {\n        // On mobile, use a more intelligent positioning strategy that avoids covering the target\n        const mobileCoachMarkHeight = Math.min(\n          coachMarkRect.height,\n          viewportHeight * this.MOBILE_COACH_MARK_HEIGHT_RATIO\n        ); // Max 40% of screen\n\n        // Calculate available space in each direction\n        const spaceAbove = targetRect.top - spacing;\n        const spaceBelow = viewportHeight - targetRect.bottom - spacing;\n\n        logger.debug('OnboardingTour', 'Mobile positioning analysis', {\n          targetRect: {\n            x: targetRect.left,\n            y: targetRect.top,\n            w: targetRect.width,\n            h: targetRect.height,\n          },\n          spaceAbove,\n          spaceBelow,\n          coachMarkHeight: coachMarkRect.height,\n          mobileCoachMarkHeight,\n        });\n\n        // Priority order for mobile: below target, above target, full-width overlay at bottom\n        if (spaceBelow >= mobileCoachMarkHeight) {\n          // Enough space below - position there (preferred)\n          position = 'bottom';\n          left = Math.max(\n            spacing,\n            Math.min(\n              targetRect.left + targetRect.width / 2 - coachMarkRect.width / 2,\n              viewportWidth - coachMarkRect.width - spacing\n            )\n          );\n          top = targetRect.bottom + spacing;\n          logger.debug('OnboardingTour', 'Mobile: Positioning below target');\n        } else if (spaceAbove >= mobileCoachMarkHeight) {\n          // Enough space above - position there\n          position = 'top';\n          left = Math.max(\n            spacing,\n            Math.min(\n              targetRect.left + targetRect.width / 2 - coachMarkRect.width / 2,\n              viewportWidth - coachMarkRect.width - spacing\n            )\n          );\n          top = targetRect.top - coachMarkRect.height - spacing;\n          logger.debug('OnboardingTour', 'Mobile: Positioning above target');\n        } else {\n          // Not enough space above or below - use full-width overlay at bottom\n          this.coachMark.classList.add('mobile-overlay');\n          left = spacing;\n          top =\n            viewportHeight -\n            coachMarkRect.height -\n            spacing -\n            this.MOBILE_NAVIGATION_SPACE; // Leave space for navigation\n          this.coachMark.style.width = `${viewportWidth - spacing * 2}px`;\n          this.coachMark.style.maxHeight = `${viewportHeight * this.MOBILE_MAX_HEIGHT_RATIO}px`;\n          this.coachMark.style.overflow = 'auto';\n\n          logger.debug(\n            'OnboardingTour',\n            'Mobile: Using full-width overlay mode to avoid covering content'\n          );\n        }\n      } else {\n        // Desktop positioning (existing logic)\n        // Calculate initial position based on preferred direction\n        // Special handling for Tutorial 3 steps 3-8: force bottom positioning\n        if (\n          this.currentTutorial === this.LEARNING_LAB_TUTORIAL &&\n          this.currentStep >= this.TUTORIAL_3_BOTTOM_POSITION_START &&\n          this.currentStep <= this.TUTORIAL_3_BOTTOM_POSITION_END\n        ) {\n          logger.info(\n            'OnboardingTour',\n            `Forcing bottom position for Tutorial 3 step ${this.currentStep + 1}`\n          );\n          position = 'bottom';\n        }\n\n        switch (position) {\n          case 'top':\n            left =\n              targetRect.left + targetRect.width / 2 - coachMarkRect.width / 2;\n            top = targetRect.top - coachMarkRect.height - spacing;\n            break;\n          case 'bottom':\n            left =\n              targetRect.left + targetRect.width / 2 - coachMarkRect.width / 2;\n            top = targetRect.bottom + spacing;\n            break;\n          case 'left':\n            left = targetRect.left - coachMarkRect.width - spacing;\n            top =\n              targetRect.top + targetRect.height / 2 - coachMarkRect.height / 2;\n            break;\n          case 'right':\n            left = targetRect.right + spacing;\n            top =\n              targetRect.top + targetRect.height / 2 - coachMarkRect.height / 2;\n            break;\n          default: // Default to bottom\n            left =\n              targetRect.left + targetRect.width / 2 - coachMarkRect.width / 2;\n            top = targetRect.bottom + spacing;\n        }\n\n        // VIEWPORT BOUNDS CHECKING - Always keep within viewport\n        const minLeft = spacing;\n        const maxLeft = viewportWidth - coachMarkRect.width - spacing;\n        const minTop = spacing;\n        const maxTop = viewportHeight - coachMarkRect.height - spacing;\n\n        // Clamp to viewport bounds\n        left = Math.max(minLeft, Math.min(left, maxLeft));\n        top = Math.max(minTop, Math.min(top, maxTop));\n      }\n\n      // Special handling for interactive elements - avoid covering target (both mobile and desktop)\n      if (\n        step &&\n        step.highlightClick &&\n        !this.coachMark.classList.contains('mobile-overlay')\n      ) {\n        // If positioned over target, try alternative positions\n        if (\n          left < targetRect.right &&\n          left + coachMarkRect.width > targetRect.left &&\n          top < targetRect.bottom &&\n          top + coachMarkRect.height > targetRect.top\n        ) {\n          if (isMobile) {\n            // On mobile, prefer overlay mode when covering target\n            this.coachMark.classList.add('mobile-overlay');\n            left = spacing;\n            top =\n              viewportHeight -\n              coachMarkRect.height -\n              spacing -\n              this.MOBILE_NAVIGATION_SPACE;\n            this.coachMark.style.width = `${viewportWidth - spacing * 2}px`;\n          } else {\n            // Desktop fallback positioning\n            // Try positioning to the right\n            if (\n              targetRect.right + coachMarkRect.width + spacing <=\n              viewportWidth\n            ) {\n              left = targetRect.right + spacing;\n              top = Math.max(\n                spacing,\n                Math.min(\n                  targetRect.top,\n                  viewportHeight - coachMarkRect.height - spacing\n                )\n              );\n            }\n            // Try positioning to the left\n            else if (targetRect.left - coachMarkRect.width - spacing >= 0) {\n              left = targetRect.left - coachMarkRect.width - spacing;\n              top = Math.max(\n                spacing,\n                Math.min(\n                  targetRect.top,\n                  viewportHeight - coachMarkRect.height - spacing\n                )\n              );\n            }\n            // Try positioning below\n            else if (\n              targetRect.bottom + coachMarkRect.height + spacing <=\n              viewportHeight\n            ) {\n              left = Math.max(\n                spacing,\n                Math.min(\n                  targetRect.left,\n                  viewportWidth - coachMarkRect.width - spacing\n                )\n              );\n              top = targetRect.bottom + spacing;\n            }\n            // Try positioning above\n            else if (targetRect.top - coachMarkRect.height - spacing >= 0) {\n              left = Math.max(\n                spacing,\n                Math.min(\n                  targetRect.left,\n                  viewportWidth - coachMarkRect.width - spacing\n                )\n              );\n              top = targetRect.top - coachMarkRect.height - spacing;\n            }\n          }\n        }\n      }\n\n      logger.debug(\n        'OnboardingTour',\n        'Coach mark positioned relative to target',\n        {\n          stepId: step?.id,\n          targetRect: {\n            x: targetRect.left,\n            y: targetRect.top,\n            w: targetRect.width,\n            h: targetRect.height,\n          },\n          coachMarkPos: { left, top },\n          position,\n          isMobile,\n          isOverlay: this.coachMark.classList.contains('mobile-overlay'),\n        }\n      );\n    } else {\n      // Center on viewport for steps without targets\n      if (isMobile) {\n        // On mobile, position towards bottom to avoid header overlap\n        left = spacing;\n        top = Math.max(\n          viewportHeight * this.MOBILE_POSITION_RATIO,\n          viewportHeight -\n            coachMarkRect.height -\n            spacing -\n            this.MOBILE_NAVIGATION_SPACE\n        );\n        this.coachMark.style.width = `${viewportWidth - spacing * 2}px`;\n      } else {\n        left = viewportWidth / 2 - coachMarkRect.width / 2;\n        top = viewportHeight / 2 - coachMarkRect.height / 2;\n      }\n\n      logger.debug('OnboardingTour', 'Coach mark centered in viewport', {\n        stepId: step?.id,\n        coachMarkPos: { left, top },\n        isMobile,\n      });\n    }\n\n    // Apply position\n    this.coachMark.style.left = `${left}px`;\n    this.coachMark.style.top = `${top}px`;\n    this.coachMark.style.visibility = 'visible';\n    this.coachMark.style.opacity = '1';\n    this.coachMark.style.pointerEvents = 'auto';\n    this.coachMark.style.display = 'block';\n\n    // Final verification that coach mark is visible\n    const finalRect = this.coachMark.getBoundingClientRect();\n    const isVisible =\n      finalRect.width > 0 &&\n      finalRect.height > 0 &&\n      finalRect.left >= 0 &&\n      finalRect.top >= 0 &&\n      finalRect.right <= viewportWidth &&\n      finalRect.bottom <= viewportHeight;\n\n    if (!isVisible) {\n      logger.warn(\n        'OnboardingTour',\n        'Coach mark may not be fully visible, adjusting',\n        {\n          stepId: step?.id,\n          finalRect: {\n            x: finalRect.left,\n            y: finalRect.top,\n            w: finalRect.width,\n            h: finalRect.height,\n          },\n          viewport: { w: viewportWidth, h: viewportHeight },\n        }\n      );\n\n      // Emergency fallback: center in viewport\n      this.coachMark.style.left = `${viewportWidth / 2 - coachMarkRect.width / 2}px`;\n      this.coachMark.style.top = `${viewportHeight / 2 - coachMarkRect.height / 2}px`;\n    }\n\n    logger.info(\n      'OnboardingTour',\n      `Coach mark positioned for step ${step?.id || 'unknown'}`,\n      {\n        finalPosition: {\n          left: this.coachMark.style.left,\n          top: this.coachMark.style.top,\n        },\n        isVisible,\n      }\n    );\n  }\n\n  async showStep() {\n    const tutorial = this.tutorials[this.currentTutorial];\n    const step = tutorial.steps[this.currentStep];\n\n    if (!step) {\n      logger.error('OnboardingTour', 'No step found', {\n        currentTutorial: this.currentTutorial,\n        currentStep: this.currentStep,\n        totalSteps: tutorial?.steps?.length,\n      });\n      return;\n    }\n\n    logger.info(\n      'OnboardingTour',\n      `🚀 Starting step ${this.currentStep + 1}: ${step.id}`,\n      {\n        currentTutorial: this.currentTutorial,\n        currentStep: this.currentStep,\n        stepId: step.id,\n        totalSteps: tutorial.steps.length,\n      }\n    );\n\n    // SIMPLIFIED STEP RENDERING - Removed complex conditions that could cause skipping\n\n    // Find target element if specified\n    let targetElement = step.target\n      ? document.querySelector(step.target)\n      : null;\n\n    // If step requires waiting for element to appear, wait for it\n    if (step.waitForElement && step.target && !targetElement) {\n      logger.info(\n        'OnboardingTour',\n        `Waiting for element to appear: ${step.target}`,\n        {\n          stepId: step.id,\n          selector: step.target,\n        }\n      );\n\n      // Wait for element to appear with a timeout\n      let attempts = 0;\n      const maxAttempts = 30; // 3 seconds with 100ms intervals\n\n      while (!targetElement && attempts < maxAttempts) {\n        await new Promise(resolve => setTimeout(resolve, this.CHECK_DELAY));\n        targetElement = document.querySelector(step.target);\n        attempts++;\n      }\n\n      if (!targetElement) {\n        logger.warn(\n          'OnboardingTour',\n          `Target element still not found after waiting: ${step.target}`,\n          {\n            stepId: step.id,\n            selector: step.target,\n            attemptsUsed: attempts,\n          }\n        );\n      } else {\n        logger.info(\n          'OnboardingTour',\n          `Target element found after ${attempts * 100}ms`,\n          {\n            stepId: step.id,\n            selector: step.target,\n          }\n        );\n      }\n    }\n\n    if (step.target && !targetElement) {\n      logger.warn(\n        'OnboardingTour',\n        `Target element not found: ${step.target}`,\n        {\n          stepId: step.id,\n          selector: step.target,\n        }\n      );\n    }\n\n    // Auto-scroll to target if needed and element exists\n    if (step.autoScroll && targetElement) {\n      // Special handling for step 4 (ethical-question) - scroll within modal\n      if (step.id === 'ethical-question') {\n        const modalScrolled = this.scrollToElementInModal(targetElement, step);\n        if (modalScrolled) {\n          // Wait for modal scroll animation\n          await new Promise(resolve =>\n            setTimeout(resolve, this.SCROLL_DURATION)\n          );\n        }\n      } else {\n        // Regular page scrolling\n        const rect = targetElement.getBoundingClientRect();\n        const isInViewport = rect.top >= 0 && rect.bottom <= window.innerHeight;\n\n        if (!isInViewport) {\n          logger.info(\n            'OnboardingTour',\n            `Scrolling to bring target into view for step ${step.id}`\n          );\n          targetElement.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'center',\n          });\n          // Wait for scroll animation\n          await new Promise(resolve =>\n            setTimeout(resolve, this.SCROLL_DURATION)\n          );\n        }\n      }\n    }\n\n    // Position spotlight\n    if (targetElement) {\n      this.positionSpotlight(targetElement);\n    } else if (this.spotlight) {\n      this.spotlight.style.display = 'none';\n    }\n\n    // Create coach mark content - with robust null checking\n    if (!this.coachMark || !document.body.contains(this.coachMark)) {\n      logger.warn(\n        'OnboardingTour',\n        'Coach mark element is null or not in DOM, recreating overlay',\n        {\n          currentTutorial: this.currentTutorial,\n          currentStep: this.currentStep,\n          stepId: step.id,\n          isActive: this.isActive,\n          coachMarkExists: !!this.coachMark,\n          coachMarkInDom: this.coachMark\n            ? document.body.contains(this.coachMark)\n            : false,\n        }\n      );\n      this.createOverlay();\n\n      if (!this.coachMark) {\n        logger.error(\n          'OnboardingTour',\n          'Failed to create coach mark element, aborting step'\n        );\n        return;\n      }\n    }\n\n    // Additional safety check right before setting innerHTML\n    if (!this.coachMark) {\n      logger.error(\n        'OnboardingTour',\n        'Coach mark is null right before setting innerHTML - this should not happen!'\n      );\n      return;\n    }\n\n    // Verify the coach mark is still attached to DOM\n    if (!document.body.contains(this.coachMark)) {\n      logger.error(\n        'OnboardingTour',\n        'Coach mark exists but is not in DOM - recreating'\n      );\n      this.createOverlay();\n      if (!this.coachMark) {\n        logger.error('OnboardingTour', 'Failed to recreate coach mark element');\n        return;\n      }\n    }\n\n    try {\n      this.coachMark.innerHTML = this.createCoachMarkContent(step, tutorial);\n    } catch (error) {\n      logger.error('OnboardingTour', 'Error setting coach mark innerHTML', {\n        error: error.message,\n        coachMark: this.coachMark,\n        step: step.id,\n      });\n      return;\n    }\n\n    // Position coach mark\n    this.positionCoachMark(targetElement, step.position, step);\n\n    // Ensure coach mark is visible and interactive\n    this.coachMark.style.display = 'block';\n    this.coachMark.style.visibility = 'visible';\n    this.coachMark.style.opacity = '1';\n    this.coachMark.style.pointerEvents = 'auto';\n    this.coachMark.style.zIndex = '10014';\n\n    // Set up event listeners for buttons\n    this.setupEventListeners(step);\n\n    // Special handling for specific steps\n    if (step.id === 'dilemma-section') {\n      // Set up content observer for step 3 to track typewriter expansion\n      this.setupContentObserver(targetElement, step);\n    }\n\n    // Set up action handling\n    if (step.action === 'wait-for-click' && targetElement) {\n      this.waitForElementClick(targetElement, step);\n    } else if (step.action === 'wait-for-option-selection' && targetElement) {\n      logger.info(\n        'OnboardingTour',\n        `Setting up option selection waiting for step ${step.id}`\n      );\n      this.waitForOptionSelection(targetElement, step);\n    }\n\n    // Add click highlighting if needed\n    if (step.highlightClick && targetElement) {\n      targetElement.classList.add('onboarding-click-highlight');\n    }\n\n    // Execute onShow callback if defined\n    if (step.onShow && typeof step.onShow === 'function') {\n      try {\n        logger.info(\n          'OnboardingTour',\n          `Executing onShow callback for step ${step.id}`\n        );\n        step.onShow();\n      } catch (error) {\n        logger.error(\n          'OnboardingTour',\n          `Error executing onShow callback for step ${step.id}`,\n          {\n            error: error.message,\n          }\n        );\n      }\n    }\n\n    logger.info('OnboardingTour', `✅ Step ${step.id} rendered successfully`, {\n      hasTarget: !!targetElement,\n      targetInViewport: targetElement\n        ? this.isElementInViewport(targetElement)\n        : false,\n      coachMarkVisible: this.coachMark.style.visibility === 'visible',\n      coachMarkPosition: {\n        left: this.coachMark.style.left,\n        top: this.coachMark.style.top,\n      },\n    });\n  }\n\n  createCoachMarkContent(step, tutorial) {\n    const stepNumber = this.currentStep + 1;\n    const totalSteps = tutorial.steps.length;\n    const tutorialNumber = this.currentTutorial;\n    const totalTutorials = Object.keys(this.tutorials).length;\n\n    return `\n      <div class=\"coach-mark-header\">\n        <div class=\"coach-mark-progress\">\n          <span class=\"tutorial-indicator\">Tutorial ${tutorialNumber}/${totalTutorials}</span>\n          <div class=\"step-progress\">\n            <div class=\"step-dots\">\n              ${tutorial.steps\n                .map(\n                  (_, index) =>\n                    `<div class=\"step-dot ${index === this.currentStep ? 'active' : index < this.currentStep ? 'completed' : ''}\"></div>`\n                )\n                .join('')}\n            </div>\n            <span class=\"step-counter\">${stepNumber}/${totalSteps}</span>\n          </div>\n        </div>\n        <button class=\"coach-mark-close\" aria-label=\"Close tour\" type=\"button\">×</button>\n      </div>\n      \n      <div class=\"coach-mark-body\">\n        <h3 id=\"coach-mark-title\" class=\"coach-mark-title\">${step.title}</h3>\n        <div id=\"coach-mark-content\" class=\"coach-mark-content\">\n          ${step.content}\n        </div>\n      </div>\n      \n      <div class=\"coach-mark-footer\">\n        ${this.createCoachMarkButtons(step)}\n      </div>\n    `;\n  }\n\n  createCoachMarkButtons(step) {\n    if (step.buttons) {\n      return step.buttons\n        .map(\n          button =>\n            `<button class=\"coach-mark-btn ${button.primary ? 'primary' : 'secondary'}\" \n                 data-action=\"${button.action}\" \n                 type=\"button\">\n          ${button.text}\n         </button>`\n        )\n        .join('');\n    }\n\n    // Default buttons for steps without custom buttons\n    const isFirstStep = this.currentStep === 0;\n    const isLastStep =\n      this.currentStep ===\n      this.tutorials[this.currentTutorial].steps.length - 1;\n    const isLastTutorial =\n      this.currentTutorial === Object.keys(this.tutorials).length;\n    const hasUserAction =\n      step.action &&\n      (step.action === 'wait-for-click' ||\n        step.action === 'wait-for-option-selection');\n\n    logger.debug('OnboardingTour', 'Creating buttons', {\n      stepId: step.id,\n      tutorial: this.currentTutorial,\n      step: this.currentStep,\n      isFirstStep,\n      isLastStep,\n      isLastTutorial,\n      hasUserAction,\n      stepAction: step.action,\n    });\n\n    let buttons = '';\n\n    // Back button (show for all steps except the first step of any tutorial)\n    if (!isFirstStep) {\n      buttons += `<button class=\"coach-mark-btn secondary\" data-action=\"back\" type=\"button\">← Back</button>`;\n    }\n\n    // Skip button (show for non-final steps, but not for steps waiting for user action)\n    if (!isLastStep && !hasUserAction) {\n      buttons += `<button class=\"coach-mark-btn secondary\" data-action=\"skip\" type=\"button\">Skip</button>`;\n    }\n\n    // Primary action button - only show if not waiting for user action\n    if (!hasUserAction) {\n      if (isLastStep && isLastTutorial) {\n        buttons += `<button class=\"coach-mark-btn primary\" data-action=\"finish\" type=\"button\">🚀 Start Exploring</button>`;\n      } else if (isLastStep) {\n        buttons += `<button class=\"coach-mark-btn primary\" data-action=\"next-tutorial\" type=\"button\">Next Tutorial</button>`;\n      } else {\n        buttons += `<button class=\"coach-mark-btn primary\" data-action=\"continue\" type=\"button\">Next</button>`;\n      }\n    }\n\n    logger.debug('OnboardingTour', 'Buttons created', {\n      buttons: buttons.length > 0 ? 'yes' : 'no',\n    });\n\n    return buttons;\n  }\n\n  setupEventListeners(step) {\n    if (!this.coachMark) {\n      logger.warn(\n        'OnboardingTour',\n        'No coach mark element found for event listeners'\n      );\n      return;\n    }\n\n    logger.debug('OnboardingTour', 'Setting up event listeners for step', {\n      stepId: step.id,\n      buttons: this.coachMark.querySelectorAll('.coach-mark-btn').length,\n    });\n\n    // IMPROVED: Remove existing event listeners without DOM recreation\n    // Store reference to avoid multiple listeners\n    if (this.currentClickHandler) {\n      this.coachMark.removeEventListener('click', this.currentClickHandler);\n    }\n    if (this.currentKeyHandler) {\n      this.coachMark.removeEventListener('keydown', this.currentKeyHandler);\n    }\n\n    // Set up click handlers for coach mark buttons\n    this.currentClickHandler = e => {\n      logger.info('OnboardingTour', 'Coach mark clicked', {\n        target: e.target.tagName,\n        className: e.target.className,\n        textContent: e.target.textContent,\n        dataset: e.target.dataset,\n      });\n\n      if (e.target.classList.contains('coach-mark-btn')) {\n        const { action } = e.target.dataset;\n\n        if (action) {\n          // CRITICAL: Prevent event bubbling and default behavior\n          e.preventDefault();\n          e.stopPropagation();\n          e.stopImmediatePropagation(); // Prevent other listeners on same element\n\n          // Additional protection: Check if we're already processing an action\n          if (this.isProcessingAction) {\n            logger.debug(\n              'OnboardingTour',\n              `Button click ignored - already processing action`\n            );\n            return;\n          }\n\n          logger.info(\n            'OnboardingTour',\n            `Button clicked with action: ${action}`,\n            {\n              tutorial: this.currentTutorial,\n              step: this.currentStep,\n              stepId: step.id,\n            }\n          );\n\n          this.handleAction(action);\n        } else {\n          logger.warn('OnboardingTour', 'Button clicked but no action found', {\n            target: e.target,\n            dataset: e.target.dataset,\n          });\n        }\n      }\n\n      if (e.target.classList.contains('coach-mark-close')) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        logger.info('OnboardingTour', 'Close button clicked');\n        this.endTour();\n      }\n    };\n\n    this.coachMark.addEventListener('click', this.currentClickHandler);\n\n    // Keyboard navigation\n    this.currentKeyHandler = e => {\n      if (e.key === 'Escape') {\n        this.endTour();\n      } else if (e.key === 'Enter' || e.key === ' ') {\n        if (e.target.classList.contains('coach-mark-btn')) {\n          e.preventDefault();\n          e.target.click();\n        }\n      }\n    };\n\n    this.coachMark.addEventListener('keydown', this.currentKeyHandler);\n\n    // Focus management - use centralized focus manager for cleaner implementation\n    const firstButton = this.coachMark.querySelector('.coach-mark-btn');\n    if (firstButton) {\n      // Auto-focus using focus manager which respects keyboard navigation preferences\n      focusManager.autoFocus(this.coachMark, {\n        keyboardOnly: true,\n        delay: 100, // Small delay to ensure coach mark is positioned\n      });\n    }\n\n    logger.debug('OnboardingTour', 'Event listeners set up successfully', {\n      stepId: step.id,\n      hasFirstButton: !!firstButton,\n    });\n  }\n\n  handleStepAction(step, targetElement) {\n    switch (step.action) {\n      case 'wait-for-click':\n        this.waitForElementClick(targetElement);\n        break;\n      case 'wait-for-option-selection':\n        this.waitForOptionSelection();\n        break;\n    }\n  }\n\n  waitForElementClick(targetElement) {\n    if (!targetElement) {\n      logger.warn(\n        'OnboardingTour',\n        'waitForElementClick: No target element provided'\n      );\n      return;\n    }\n\n    logger.debug('OnboardingTour', 'Setting up click listener', {\n      targetTag: targetElement.tagName,\n      targetClass: targetElement.className,\n      tutorial: this.currentTutorial,\n      step: this.currentStep,\n    });\n\n    const clickHandler = event => {\n      logger.info('OnboardingTour', 'Target element clicked, advancing step', {\n        tutorial: this.currentTutorial,\n        step: this.currentStep,\n        eventTarget: event.target.tagName,\n      });\n      targetElement.removeEventListener('click', clickHandler);\n      clearTimeout(timeoutId);\n      // Advance immediately when user clicks the suggested element\n      setTimeout(() => this.nextStep(), this.ANIMATION_DURATION);\n    };\n\n    targetElement.addEventListener('click', clickHandler);\n\n    // Add a timeout fallback - if modal appears but user didn't click, advance anyway\n    const timeoutId = setTimeout(() => {\n      // Check if the expected modal is now open\n      const modalAppeared = document.querySelector(\n        '.pre-launch-modal, .reusable-modal'\n      );\n      if (modalAppeared) {\n        logger.info(\n          'OnboardingTour',\n          'Modal appeared without tracked click, advancing step',\n          {\n            tutorial: this.currentTutorial,\n            step: this.currentStep,\n          }\n        );\n        targetElement.removeEventListener('click', clickHandler);\n        this.nextStep();\n      } else {\n        logger.warn(\n          'OnboardingTour',\n          'Timeout waiting for click, but no modal appeared',\n          {\n            tutorial: this.currentTutorial,\n            step: this.currentStep,\n          }\n        );\n      }\n    }, this.CLICK_TIMEOUT);\n\n    // Also log if the target element exists and is visible\n    logger.debug('OnboardingTour', 'Click listener added to target', {\n      elementExists: !!targetElement,\n      elementVisible: targetElement.offsetParent !== null,\n      elementRect: targetElement.getBoundingClientRect(),\n    });\n  }\n\n  waitForOptionSelection(targetElement, step) {\n    logger.info(\n      'OnboardingTour',\n      `Waiting for option selection in step ${step.id}`,\n      {\n        targetSelector: step.target,\n      }\n    );\n\n    // Set up a broad click listener that will catch any clicks in the target area\n    const optionClickListener = e => {\n      const clickedElement = e.target;\n\n      // Check if this looks like an option click\n      const isOption =\n        clickedElement.tagName === 'BUTTON' ||\n        clickedElement.classList.contains('option') ||\n        clickedElement.classList.contains('option-card') ||\n        clickedElement.classList.contains('choice') ||\n        clickedElement.classList.contains('response') ||\n        clickedElement.hasAttribute('data-option') ||\n        clickedElement.hasAttribute('data-option-id') ||\n        clickedElement.hasAttribute('data-choice') ||\n        clickedElement.closest(\n          '.option, .option-card, .choice, .response-option'\n        );\n\n      if (isOption) {\n        logger.info(\n          'OnboardingTour',\n          `✅ Option selection detected in step ${step.id}`,\n          {\n            clickedElement: clickedElement.tagName,\n            clickedClass: clickedElement.className,\n            clickedText: clickedElement.textContent.substring(\n              0,\n              this.OPTION_TEXT_LENGTH\n            ),\n          }\n        );\n\n        // Remove the listener\n        targetElement.removeEventListener('click', optionClickListener);\n\n        // Mark as selected\n        this.userStates['option-selected'] = true;\n        clickedElement.classList.add('onboarding-selected');\n\n        // Advance to next step\n        setTimeout(() => {\n          this.nextStep();\n        }, this.SELECTION_DELAY);\n      }\n    };\n\n    targetElement.addEventListener('click', optionClickListener);\n\n    // Also add highlighting to make it clear the area is interactive\n    targetElement.classList.add('onboarding-click-highlight');\n\n    logger.debug(\n      'OnboardingTour',\n      `Option selection listener attached for step ${step.id}`\n    );\n  }\n\n  waitForCondition(condition, callback) {\n    const checkCondition = () => {\n      let conditionMet = false;\n\n      switch (condition) {\n        case 'scenario-modal':\n          conditionMet =\n            document.querySelector('.scenario-modal-dialog') !== null;\n          // Add delay for modal animation to complete\n          if (conditionMet) {\n            setTimeout(callback, this.ANIMATION_DURATION);\n            return;\n          }\n          break;\n        case 'pre-launch-modal':\n          conditionMet = document.querySelector('.pre-launch-modal') !== null;\n          // Add delay for modal animation to complete\n          if (conditionMet) {\n            setTimeout(callback, this.ANIMATION_DURATION);\n            return;\n          }\n          break;\n        case 'option-selected':\n          conditionMet = this.userStates['option-selected'];\n          break;\n        case 'choice-confirmed':\n          conditionMet = this.userStates['choice-confirmed'];\n          break;\n        default:\n          conditionMet = document.querySelector(condition) !== null;\n      }\n\n      if (conditionMet) {\n        callback();\n      } else {\n        setTimeout(checkCondition, this.CHECK_DELAY);\n      }\n    };\n\n    checkCondition();\n  }\n\n  handleAction(action) {\n    // Prevent rapid-fire clicks with debouncing\n    if (this.isProcessingAction) {\n      logger.debug(\n        'OnboardingTour',\n        `Action ${action} ignored - already processing another action`\n      );\n      return;\n    }\n\n    this.isProcessingAction = true;\n\n    logger.info('OnboardingTour', `Handling action: ${action}`, {\n      currentTutorial: this.currentTutorial,\n      currentStep: this.currentStep,\n    });\n\n    switch (action) {\n      case 'continue':\n        this.nextStep();\n        // Reset flag after step transition\n        setTimeout(() => {\n          this.isProcessingAction = false;\n        }, this.DEBOUNCE_DURATION);\n        break;\n      case 'back':\n        this.previousStep();\n        // Reset flag after step transition\n        setTimeout(() => {\n          this.isProcessingAction = false;\n        }, this.DEBOUNCE_DURATION);\n        break;\n      case 'next-tutorial':\n        logger.info('OnboardingTour', 'next-tutorial action triggered', {\n          currentTutorial: this.currentTutorial,\n          currentStep: this.currentStep,\n          isActive: this.isActive,\n        });\n        this.nextTutorial();\n        // Flag will be reset in nextTutorial() method itself\n        break;\n      case 'finish':\n      case 'skip':\n        this.endTour();\n        // Reset flag after tour ends\n        setTimeout(() => {\n          this.isProcessingAction = false;\n        }, this.DEBOUNCE_DURATION);\n        break;\n      default:\n        logger.warn('OnboardingTour', `Unknown action: ${action}`);\n        this.isProcessingAction = false;\n    }\n  }\n\n  nextStep() {\n    // Prevent race conditions - don't process if already transitioning\n    if (this.isTransitioning) {\n      logger.debug(\n        'OnboardingTour',\n        'Step transition already in progress, ignoring'\n      );\n      return;\n    }\n\n    this.isTransitioning = true;\n\n    // Remove click highlights\n    document.querySelectorAll('.onboarding-click-highlight').forEach(el => {\n      el.classList.remove('onboarding-click-highlight');\n    });\n\n    const tutorial = this.tutorials[this.currentTutorial];\n\n    logger.info('OnboardingTour', `Moving to next step`, {\n      currentStep: this.currentStep,\n      totalSteps: tutorial.steps.length,\n      currentStepId: tutorial.steps[this.currentStep]?.id,\n    });\n\n    if (this.currentStep < tutorial.steps.length - 1) {\n      this.currentStep++;\n      logger.info(\n        'OnboardingTour',\n        `Advanced to step ${this.currentStep + 1}`,\n        {\n          newStepId: tutorial.steps[this.currentStep]?.id,\n        }\n      );\n\n      // Small delay to ensure clean transition\n      const TRANSITION_DELAY = 50; // ms\n      setTimeout(() => {\n        this.isTransitioning = false;\n        this.showStep();\n      }, TRANSITION_DELAY);\n    } else {\n      logger.info(\n        'OnboardingTour',\n        'Tutorial complete, moving to next tutorial'\n      );\n      this.isTransitioning = false;\n      this.nextTutorial();\n    }\n  }\n\n  previousStep() {\n    // Remove click highlights\n    document.querySelectorAll('.onboarding-click-highlight').forEach(el => {\n      el.classList.remove('onboarding-click-highlight');\n    });\n\n    // Only go back within the current tutorial\n    if (this.currentStep > 0) {\n      this.currentStep--;\n      // Reset user states when going backwards to allow re-interaction\n      this.resetUserStatesForCurrentStep();\n      this.showStep();\n    }\n    // Don't do anything if we're at the first step - back button shouldn't be visible anyway\n  }\n\n  resetUserStatesForCurrentStep() {\n    // Reset relevant user states when going backwards to allow re-interaction\n    const tutorial = this.tutorials[this.currentTutorial];\n    const step = tutorial.steps[this.currentStep];\n\n    // If going back to a step that waits for user interaction, reset the relevant state\n    if (step && step.action === 'wait-for-option-selection') {\n      this.userStates['option-selected'] = false;\n    }\n  }\n\n  nextTutorial() {\n    // Track tutorial completion\n    simpleAnalytics.trackEvent('tour_tutorial_completed', {\n      tutorial: this.currentTutorial,\n    });\n\n    const totalTutorials = Object.keys(this.tutorials).length;\n    logger.info('OnboardingTour', `nextTutorial called`, {\n      currentTutorial: this.currentTutorial,\n      totalTutorials,\n      willContinue: this.currentTutorial < totalTutorials,\n    });\n\n    if (this.currentTutorial < totalTutorials) {\n      this.currentTutorial++;\n      this.currentStep = 0;\n      // Reset user states for new tutorial\n      this.userStates = {\n        'option-selected': false,\n        'choice-confirmed': false,\n        'modal-opened': false,\n      };\n      logger.info(\n        'OnboardingTour',\n        `Starting tutorial ${this.currentTutorial}`\n      );\n\n      // Special handling for Tutorial 2 - close any open modals and scroll to hero demo\n      if (this.currentTutorial === 2) {\n        // Check if there's a modal open from Tutorial 1\n        const scenarioModal = document.querySelector('.scenario-modal');\n        const preLaunchModal = document.querySelector('.pre-launch-modal');\n\n        if (scenarioModal || preLaunchModal) {\n          logger.info(\n            'OnboardingTour',\n            'Modal detected, closing modal before starting Tutorial 2'\n          );\n          this.waitForModalClosure(() => {\n            // After modal closes, scroll to hero demo and start tutorial\n            this.scrollToHeroDemoAndStart();\n          });\n\n          // Close the modal\n          if (scenarioModal) {\n            const closeBtn = scenarioModal.querySelector(\n              '.modal-close, .close-modal'\n            );\n            if (closeBtn) {\n              closeBtn.click();\n            }\n          }\n          if (preLaunchModal) {\n            const closeBtn = preLaunchModal.querySelector(\n              '.modal-close, .close-modal'\n            );\n            if (closeBtn) {\n              closeBtn.click();\n            }\n          }\n        } else {\n          logger.info(\n            'OnboardingTour',\n            'No modal detected, scrolling to hero demo for Tutorial 2'\n          );\n          this.scrollToHeroDemoAndStart();\n        }\n\n        // Reset processing flag immediately for Tutorial 2 since async operations will handle the rest\n        this.isProcessingAction = false;\n        logger.debug(\n          'OnboardingTour',\n          'Processing flag reset for Tutorial 2 transition'\n        );\n      }\n      // Special handling for Tutorial 3 - wait for scenario modal to close if one is open\n      else if (this.currentTutorial === this.LEARNING_LAB_TUTORIAL) {\n        // Check if there's actually a modal open before waiting\n        const scenarioModal = document.querySelector('.scenario-modal');\n        const preLaunchModal = document.querySelector('.pre-launch-modal');\n\n        if (scenarioModal || preLaunchModal) {\n          logger.info(\n            'OnboardingTour',\n            'Modal detected, waiting for closure before starting Tutorial 3'\n          );\n          this.waitForModalClosure(() => {\n            this.showStep();\n          });\n        } else {\n          logger.info(\n            'OnboardingTour',\n            'No modal detected, starting Tutorial 3 immediately'\n          );\n          this.showStep();\n        }\n\n        // Reset processing flag after initiating Tutorial 3\n        this.isProcessingAction = false;\n        logger.debug(\n          'OnboardingTour',\n          'Processing flag reset for Tutorial 3 transition'\n        );\n      } else {\n        this.showStep();\n        // Reset processing flag for normal tutorial progression\n        this.isProcessingAction = false;\n        logger.debug(\n          'OnboardingTour',\n          'Processing flag reset for normal tutorial transition'\n        );\n      }\n    } else {\n      this.endTour();\n      // Reset processing flag after tour ends\n      this.isProcessingAction = false;\n      logger.debug('OnboardingTour', 'Processing flag reset after tour end');\n    }\n  }\n\n  previousTutorial() {\n    if (this.currentTutorial > 1) {\n      this.currentTutorial--;\n      // Go to the last step of the previous tutorial\n      const previousTutorial = this.tutorials[this.currentTutorial];\n      this.currentStep = previousTutorial.steps.length - 1;\n      // Reset user states for previous tutorial\n      this.userStates = {\n        'option-selected': false,\n        'choice-confirmed': false,\n        'modal-opened': false,\n      };\n      logger.info(\n        'OnboardingTour',\n        `Going back to tutorial ${this.currentTutorial}`\n      );\n      this.showStep();\n    }\n  }\n\n  endTour() {\n    const STACK_TRACE_LINES = 5;\n    logger.info('OnboardingTour', 'Ending tour', {\n      currentTutorial: this.currentTutorial,\n      currentStep: this.currentStep,\n      stackTrace: new Error().stack.split('\\n').slice(1, STACK_TRACE_LINES),\n    });\n\n    // Remove click highlights\n    document.querySelectorAll('.onboarding-click-highlight').forEach(el => {\n      el.classList.remove('onboarding-click-highlight');\n    });\n\n    // Close pre-launch modal if we're finishing Tutorial 3 (Learning Lab)\n    if (this.currentTutorial === this.LEARNING_LAB_TUTORIAL) {\n      logger.info(\n        'OnboardingTour',\n        'Closing pre-launch modal after Tutorial 3 completion'\n      );\n\n      // Strategy 1: Look specifically for the pre-launch modal's cancel button\n      let modalClosed = false;\n\n      // First try to find a visible pre-launch modal and trigger its cancel button\n      const visibleModals = document.querySelectorAll(\n        '.modal-backdrop[style*=\"flex\"], [id^=\"modal-\"][style*=\"flex\"], .modal-backdrop.show, .modal-backdrop.visible'\n      );\n      logger.info(\n        'OnboardingTour',\n        `Found ${visibleModals.length} potentially visible modals`\n      );\n\n      for (const modal of visibleModals) {\n        const modalTitle = modal.querySelector('.modal-title');\n        const isPreLaunchModal =\n          modalTitle && modalTitle.textContent.includes('Prepare to Explore');\n\n        logger.info(\n          'OnboardingTour',\n          `Checking modal: ${modal.id || 'no-id'}, title: ${modalTitle?.textContent || 'no-title'}, isPreLaunch: ${isPreLaunchModal}`\n        );\n\n        if (isPreLaunchModal) {\n          const cancelButton = modal.querySelector(\n            '#cancel-launch, .btn-cancel'\n          );\n          if (cancelButton) {\n            logger.info(\n              'OnboardingTour',\n              'Found pre-launch modal, triggering cancel button for proper cleanup'\n            );\n            try {\n              cancelButton.click();\n              modalClosed = true;\n              logger.info(\n                'OnboardingTour',\n                'Successfully triggered cancel button'\n              );\n              break;\n            } catch (error) {\n              logger.error(\n                'OnboardingTour',\n                'Error clicking cancel button:',\n                error\n              );\n            }\n          } else {\n            logger.warn(\n              'OnboardingTour',\n              'Pre-launch modal found but no cancel button'\n            );\n          }\n        }\n      }\n\n      // Strategy 2: If no pre-launch modal found, try any visible cancel button\n      if (!modalClosed) {\n        logger.info(\n          'OnboardingTour',\n          'No pre-launch modal cancel button found, trying fallback approach'\n        );\n        const cancelButtons = document.querySelectorAll(\n          '#cancel-launch, .btn-cancel'\n        );\n        logger.info(\n          'OnboardingTour',\n          `Found ${cancelButtons.length} cancel buttons in DOM`\n        );\n\n        cancelButtons.forEach((cancelButton, index) => {\n          if (cancelButton && !modalClosed) {\n            // Check if this button is in a visible modal\n            const modal = cancelButton.closest(\n              '.modal-backdrop, [id^=\"modal-\"], #simulation-modal'\n            );\n            const isVisible =\n              modal &&\n              (modal.style.display === 'flex' ||\n                modal.classList.contains('show') ||\n                modal.classList.contains('visible'));\n\n            logger.info(\n              'OnboardingTour',\n              `Cancel button ${index}: modal=${modal?.id || 'no-modal'}, visible=${isVisible}`\n            );\n\n            if (isVisible) {\n              logger.info(\n                'OnboardingTour',\n                'Triggering fallback cancel button click for modal cleanup'\n              );\n              try {\n                cancelButton.click();\n                modalClosed = true;\n                logger.info(\n                  'OnboardingTour',\n                  'Successfully triggered fallback cancel button'\n                );\n              } catch (error) {\n                logger.error(\n                  'OnboardingTour',\n                  'Error clicking fallback cancel button:',\n                  error\n                );\n              }\n            }\n          }\n        });\n      }\n\n      // Strategy 3: If no cancel button found, fall back to manual cleanup\n      if (!modalClosed) {\n        logger.info(\n          'OnboardingTour',\n          'No accessible cancel button found, using manual cleanup'\n        );\n\n        // Use the new ModalUtility cleanup methods to handle orphaned modals\n        ModalUtility.cleanupOrphanedModals();\n\n        // First, try to find the modal instance through any available method\n        const preLaunchModalElements =\n          document.querySelectorAll('[id^=\"modal-\"]');\n\n        preLaunchModalElements.forEach(modalElement => {\n          // Check if this looks like a pre-launch modal by checking content\n          const modalTitle = modalElement.querySelector('.modal-title');\n          if (\n            modalTitle &&\n            modalTitle.textContent.includes('Prepare to Explore')\n          ) {\n            // Try to find the close button and click it\n            const closeButton = modalElement.querySelector(\n              '[data-modal-close], .modal-close, .close-btn'\n            );\n            if (closeButton) {\n              closeButton.click();\n              logger.info(\n                'OnboardingTour',\n                'Closed pre-launch modal via close button after Tutorial 3 completion'\n              );\n            } else {\n              // Use ModalUtility to force destroy\n              ModalUtility.destroyModalById(modalElement.id);\n              logger.info(\n                'OnboardingTour',\n                'Force destroyed pre-launch modal after Tutorial 3 completion'\n              );\n            }\n          }\n        });\n\n        // Also try the legacy selector approach as fallback\n        const preLaunchModal = document.querySelector('.pre-launch-modal');\n        if (preLaunchModal) {\n          const closeButton = preLaunchModal.querySelector(\n            '[data-modal-close], .modal-close, .close-btn'\n          );\n          if (closeButton) {\n            closeButton.click();\n            logger.info(\n              'OnboardingTour',\n              'Closed legacy pre-launch modal after Tutorial 3 completion'\n            );\n          } else {\n            preLaunchModal.remove();\n            logger.info(\n              'OnboardingTour',\n              'Manually removed legacy pre-launch modal after Tutorial 3 completion'\n            );\n          }\n        }\n      }\n\n      // Final cleanup using ModalUtility - use aggressive cleanup for Tutorial 3\n      // Add a small delay to ensure all DOM operations are complete\n      setTimeout(() => {\n        logger.info(\n          'OnboardingTour',\n          'Running final cleanup after tutorial 3 completion'\n        );\n\n        // Count modals before cleanup for comparison\n        const modalsBefore = document.querySelectorAll(\n          '[id^=\"modal-\"], .modal-backdrop, .modal-dialog, .modal-body, #simulation-modal'\n        ).length;\n        logger.info(\n          'OnboardingTour',\n          `Modal elements before cleanup: ${modalsBefore}`\n        );\n\n        ModalUtility.aggressiveModalCleanup();\n\n        // Also run the standard cleanup as a safety net\n        ModalUtility.cleanupOrphanedModals();\n\n        // Count modals after cleanup\n        const modalsAfter = document.querySelectorAll(\n          '[id^=\"modal-\"], .modal-backdrop, .modal-dialog, .modal-body, #simulation-modal'\n        ).length;\n        logger.info(\n          'OnboardingTour',\n          `Modal elements after cleanup: ${modalsAfter} (removed ${modalsBefore - modalsAfter})`\n        );\n\n        if (modalsAfter === 0) {\n          logger.info(\n            'OnboardingTour',\n            '✅ All modal elements successfully cleaned up'\n          );\n        } else {\n          logger.warn(\n            'OnboardingTour',\n            `⚠️ ${modalsAfter} modal elements still remain in DOM`\n          );\n        }\n      }, 100);\n    }\n\n    // Track completion\n    simpleAnalytics.trackEvent('tour_completed', {\n      tutorial: this.currentTutorial,\n      step: this.currentStep,\n    });\n\n    // Mark as completed\n    simpleStorage.set('tour_completed', true);\n\n    // Clean up\n    this.removeOverlay();\n    this.isActive = false;\n  }\n\n  /**\n   * Scroll to hero demo section and start Tutorial 2\n   */\n  scrollToHeroDemoAndStart() {\n    logger.info('OnboardingTour', 'scrollToHeroDemoAndStart called', {\n      currentTutorial: this.currentTutorial,\n      currentStep: this.currentStep,\n      isActive: this.isActive,\n    });\n\n    const heroChart = document.getElementById('hero-ethics-chart');\n    if (heroChart) {\n      logger.info(\n        'OnboardingTour',\n        'Hero chart found, scrolling to hero demo for Tutorial 2',\n        {\n          heroChartRect: heroChart.getBoundingClientRect(),\n        }\n      );\n\n      // Scroll to the hero demo section\n      heroChart.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center',\n        inline: 'center',\n      });\n\n      // Wait for scroll animation to complete, then start the tutorial\n      setTimeout(() => {\n        logger.info(\n          'OnboardingTour',\n          'Scroll animation complete, ensuring overlay exists before showing step',\n          {\n            currentTutorial: this.currentTutorial,\n            currentStep: this.currentStep,\n            isActive: this.isActive,\n            overlayExists: !!this.overlay,\n            coachMarkExists: !!this.coachMark,\n          }\n        );\n\n        // Ensure overlay exists before showing step\n        if (\n          !this.overlay ||\n          !this.coachMark ||\n          !document.body.contains(this.coachMark)\n        ) {\n          logger.warn(\n            'OnboardingTour',\n            'Overlay missing before Tutorial 2, recreating'\n          );\n          this.createOverlay();\n        }\n\n        this.showStep();\n      }, this.SCROLL_DURATION);\n    } else {\n      logger.warn(\n        'OnboardingTour',\n        'Hero chart element not found, starting Tutorial 2 anyway'\n      );\n\n      // Ensure overlay exists even if hero chart not found\n      if (\n        !this.overlay ||\n        !this.coachMark ||\n        !document.body.contains(this.coachMark)\n      ) {\n        logger.warn(\n          'OnboardingTour',\n          'Overlay missing before Tutorial 2 (no hero chart), recreating'\n        );\n        this.createOverlay();\n      }\n\n      this.showStep();\n    }\n  }\n\n  announceStep(step) {\n    // Create announcement for screen readers\n    const announcement = document.createElement('div');\n    announcement.setAttribute('aria-live', 'polite');\n    announcement.setAttribute('aria-atomic', 'true');\n    announcement.className = 'sr-only';\n    announcement.textContent = `${step.title}. ${step.content}`;\n\n    document.body.appendChild(announcement);\n\n    // Remove after announcement\n    setTimeout(() => {\n      announcement.remove();\n    }, 1000);\n  }\n\n  waitForModalClosure(callback) {\n    logger.info('OnboardingTour', 'Starting to wait for modal closure');\n\n    const checkModalClosed = () => {\n      // Check for scenario modal and pre-launch modal specifically\n      const scenarioModal = document.querySelector('.scenario-modal');\n      const preLaunchModal = document.querySelector('.pre-launch-modal');\n\n      // Also check for any other modals that might be open\n      const otherModals = document.querySelectorAll(\n        '.modal, [class*=\"modal\"]:not(.scenario-modal):not(.pre-launch-modal)'\n      );\n      const hasOpenModal = Array.from(otherModals).some(modal => {\n        const style = getComputedStyle(modal);\n        const isVisible =\n          style.display !== 'none' && style.visibility !== 'hidden';\n        logger.debug('OnboardingTour', 'Other modal check', {\n          modal: modal.className,\n          isVisible,\n        });\n        return isVisible;\n      });\n\n      logger.info('OnboardingTour', 'Checking modal status', {\n        scenarioModal: !!scenarioModal,\n        preLaunchModal: !!preLaunchModal,\n        hasOtherOpenModal: hasOpenModal,\n        scenarioModalClass: scenarioModal?.className,\n        preLaunchModalClass: preLaunchModal?.className,\n      });\n\n      if (!scenarioModal && !preLaunchModal && !hasOpenModal) {\n        // All modals are closed, wait a bit for animations then proceed\n        logger.info(\n          'OnboardingTour',\n          'All modals closed, proceeding with step after animation delay'\n        );\n        setTimeout(callback, this.ANIMATION_DURATION);\n      } else {\n        // Modal still exists, check again\n        logger.debug(\n          'OnboardingTour',\n          `Modal still open, checking again in ${this.MODAL_CHECK_DELAY}ms`\n        );\n        setTimeout(checkModalClosed, this.MODAL_CHECK_DELAY);\n      }\n    };\n\n    checkModalClosed();\n  }\n\n  waitForAccordionOpen(callback) {\n    const checkAccordionOpen = () => {\n      // Check for the option details that are now visible (not display: none)\n      const optionDetails = document.querySelector('.option-details');\n\n      if (\n        optionDetails &&\n        optionDetails.offsetHeight > 0 &&\n        getComputedStyle(optionDetails).display !== 'none'\n      ) {\n        // Option details are visible\n        callback();\n      } else {\n        // Still waiting for option details to appear\n        setTimeout(checkAccordionOpen, this.CHECK_DELAY);\n      }\n    };\n\n    // Start checking after a brief delay to allow the click to process\n    setTimeout(checkAccordionOpen, this.ACCORDION_CHECK_DELAY);\n  }\n\n  /**\n   * Check if an element is in the viewport\n   */\n  isElementInViewport(element) {\n    if (!element) return false;\n    const rect = element.getBoundingClientRect();\n    return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <= window.innerHeight &&\n      rect.right <= window.innerWidth\n    );\n  }\n\n  // Static methods for manual control\n  static startManualTour(tutorialNumber = 1) {\n    // Remove existing tour if active\n    const existingTour = window.onboardingTourInstance;\n    if (existingTour && existingTour.isActive) {\n      existingTour.endTour();\n    }\n\n    // Create new tour instance\n    const tour = new OnboardingTour();\n    tour.startTour(tutorialNumber);\n    window.onboardingTourInstance = tour;\n    return tour;\n  }\n\n  static resetTour() {\n    simpleStorage.remove('tour_completed');\n    simpleStorage.remove('has_visited');\n    logger.info('OnboardingTour', 'Tour progress reset');\n  }\n\n  /**\n   * Debug method to force start tour from step 1\n   */\n  debugForceStartFromStep1() {\n    logger.warn('OnboardingTour', '🐛 DEBUG: Force starting tour from step 1');\n\n    if (this.isActive) {\n      this.finishTour();\n    }\n\n    this.currentStep = 0;\n    this.currentTutorial = 1;\n    this.isActive = false;\n\n    // Reset user states\n    this.userStates = {\n      'option-selected': false,\n      'choice-confirmed': false,\n      'modal-opened': false,\n    };\n\n    this.startTour(1);\n  }\n\n  // Content observer for dynamic content changes (typewriter effects, etc.)\n  setupContentObserver(targetElement, step) {\n    if (this.contentObserver) {\n      this.contentObserver.disconnect();\n    }\n\n    this.contentObserver = new MutationObserver(mutations => {\n      // Skip updates during transitions to prevent excessive repositioning\n      if (this.isTransitioning) {\n        return;\n      }\n\n      let shouldUpdate = false;\n\n      mutations.forEach(mutation => {\n        if (\n          mutation.type === 'childList' ||\n          mutation.type === 'characterData'\n        ) {\n          shouldUpdate = true;\n        }\n        // Also check for attribute changes that might affect size\n        if (\n          mutation.type === 'attributes' &&\n          (mutation.attributeName === 'style' ||\n            mutation.attributeName === 'class')\n        ) {\n          shouldUpdate = true;\n        }\n      });\n\n      if (shouldUpdate) {\n        // Debounce the updates to avoid excessive repositioning\n        clearTimeout(this.contentUpdateTimeout);\n        this.contentUpdateTimeout = setTimeout(() => {\n          if (this.coachMark && targetElement && !this.isTransitioning) {\n            logger.debug(\n              'OnboardingTour',\n              `Updating coach mark position due to content change in step ${step.id}`\n            );\n            this.positionCoachMark(targetElement, step.position, step);\n            this.positionSpotlight(targetElement);\n          }\n        }, this.CONTENT_UPDATE_DELAY); // Small delay to batch updates\n      }\n    });\n\n    this.contentObserver.observe(targetElement, {\n      childList: true,\n      subtree: true,\n      characterData: true,\n      attributes: true,\n      attributeFilter: ['style', 'class'],\n    });\n\n    logger.debug(\n      'OnboardingTour',\n      `Content observer set up for step ${step.id}`\n    );\n  }\n\n  // Scroll within modal content instead of main page\n  scrollToElementInModal(targetElement, step) {\n    const modal = targetElement.closest(\n      '.scenario-modal, .scenario-modal-dialog, .modal-dialog'\n    );\n\n    if (modal) {\n      const modalBody = modal.querySelector(\n        '.scenario-content, .modal-body, .modal-content'\n      );\n\n      if (modalBody) {\n        const elementRect = targetElement.getBoundingClientRect();\n        const modalRect = modalBody.getBoundingClientRect();\n        const currentScrollTop = modalBody.scrollTop;\n\n        // Calculate target scroll position within modal\n        const elementTopInModal =\n          elementRect.top - modalRect.top + currentScrollTop;\n        const targetScrollTop = Math.max(0, elementTopInModal - 100); // 100px offset from top\n\n        logger.info(\n          'OnboardingTour',\n          `Scrolling modal to element for step ${step.id}`,\n          {\n            elementTop: elementRect.top,\n            modalTop: modalRect.top,\n            currentScroll: currentScrollTop,\n            targetScroll: targetScrollTop,\n          }\n        );\n\n        modalBody.scrollTo({\n          top: targetScrollTop,\n          behavior: 'smooth',\n        });\n\n        return true;\n      }\n    }\n\n    return false; // Not in a modal or modal body not found\n  }\n}\n\n// Export for use in other modules\nexport default OnboardingTour;\n\n// Make available globally for debugging and manual control\nwindow.OnboardingTour = OnboardingTour;\n\n// Debug helper function\nwindow.debugStartTour = function () {\n  if (window.onboardingTourInstance) {\n    window.onboardingTourInstance.debugForceStartFromStep1();\n  } else {\n    logger.warn(\n      'OnboardingTour',\n      'No onboarding tour instance available. Please initialize through app.js first.'\n    );\n    logger.warn(\n      'OnboardingTour',\n      '⚠️ Cannot create OnboardingTour instance directly - must be initialized through app.js to prevent multiple instances'\n    );\n  }\n};\n\nwindow.debugShowTourState = function () {\n  if (window.onboardingTourInstance) {\n    logger.info('OnboardingTour', 'Tour State:', {\n      instanceId: window.onboardingTourInstance.instanceId,\n      isActive: window.onboardingTourInstance.isActive,\n      currentTutorial: window.onboardingTourInstance.currentTutorial,\n      currentStep: window.onboardingTourInstance.currentStep,\n      userStates: window.onboardingTourInstance.userStates,\n    });\n  } else {\n    logger.warn('OnboardingTour', 'No onboarding tour instance available');\n  }\n};\n","/**\n * Copyright 2025 Armando Sori\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Main Application - SimulateAI Educational Platform\n * Initializes the platform and manages the overall application state\n */\n\n// Import core modules\nimport EthicsSimulation from './core/simulation.js';\nimport AccessibilityManager from './core/accessibility.js';\nimport AnimationManager from './core/animation-manager.js';\nimport EducatorToolkit from './core/educator-toolkit.js';\nimport DigitalScienceLab from './core/digital-science-lab.js';\nimport ScenarioGenerator from './core/scenario-generator.js';\n\n// Import utilities\nimport { userPreferences, userProgress } from './utils/simple-storage.js';\nimport { simpleAnalytics } from './utils/simple-analytics.js';\nimport Helpers from './utils/helpers.js';\nimport canvasManager from './utils/canvas-manager.js';\nimport logger from './utils/logger.js';\nimport focusManager from './utils/focus-manager.js';\nimport scrollManager from './utils/scroll-manager.js';\nimport { loopDetector } from './utils/infinite-loop-detector.js';\n\n// Import enhanced objects (loaded dynamically as needed)\n// import { EthicsMeter, InteractiveButton, InteractiveSlider } from './objects/enhanced-objects.js';\n\n// Import new modal components\nimport PreLaunchModal from './components/pre-launch-modal.js';\nimport { EnhancedSimulationModal } from './components/enhanced-simulation-modal.js';\nimport { PostSimulationModal } from './components/post-simulation-modal.js';\nimport ModalFooterManager from './components/modal-footer-manager.js';\nimport CategoryGrid from './components/category-grid.js';\nimport RadarChart from './components/radar-chart.js';\nimport OnboardingTour from './components/onboarding-tour.js';\nimport { getAllCategories, getCategoryScenarios } from '../data/categories.js';\n\n// Constants for app configuration\nconst APP_CONSTANTS = {\n  VIEWPORT: {\n    MOBILE_BREAKPOINT: 767,\n  },\n  DEFAULTS: {\n    SCORE_VALUE: 0.5,\n    SLIDER_VALUE: 50,\n    METER_VALUE: 0.5,\n    ETHICS_METER_VALUE: 50,\n  },\n  FEEDBACK: {\n    EXCELLENT_THRESHOLD: 70,\n    GOOD_THRESHOLD: 50,\n  },\n  TIMING: {\n    ANIMATION_DELAY: 300,\n    NOTIFICATION_DURATION: 4000,\n    STAGGER_DELAY: 300,\n    QUICK_DELAY: 50,\n    FOCUS_DELAY: 100,\n    NAV_CLOSE_DELAY: 0,\n  },\n};\n\n// Debug utility to replace console statements\nconst AppDebug = {\n  log: (message, data = null) => {\n    if (window.DEBUG_MODE || localStorage.getItem('debug') === 'true') {\n      // eslint-disable-next-line no-console\n      console.log(`[App] ${message}`, data || '');\n    }\n  },\n  warn: (message, data = null) => {\n    if (window.DEBUG_MODE || localStorage.getItem('debug') === 'true') {\n      // eslint-disable-next-line no-console\n      console.warn(`[App] ${message}`, data || '');\n    }\n  },\n  error: (message, error = null) => {\n    // Always show errors\n    // eslint-disable-next-line no-console\n    console.error(`[App] ${message}`, error || '');\n  },\n};\n\nclass AIEthicsApp {\n  constructor() {\n    // Version identifier for debugging\n    this.version = 'v2.0.1-context-fixes';\n    logger.info(`[App] Initializing AIEthicsApp ${this.version}`);\n\n    this.currentSimulation = null;\n    this.engine = null;\n    this.visualEngine = null;\n    this.simulations = new Map();\n    this.isInitialized = false;\n    this.heroDemo = null;\n\n    // Modernized managers\n    this.accessibilityManager = null;\n    this.animationManager = null;\n\n    // Core educational modules\n    this.educatorToolkit = null;\n    this.digitalScienceLab = null;\n    this.scenarioGenerator = null;\n\n    // Enhanced objects for UI\n    this.ethicsMeters = new Map();\n    this.interactiveButtons = new Map();\n    this.simulationSliders = new Map();\n\n    // Canvas management IDs\n    this.currentSimulationCanvasId = null;\n    this.ethicsMetersCanvasId = null;\n    this.interactiveButtonsCanvasId = null;\n    this.simulationSlidersCanvasId = null;\n    this.heroDemoCanvasId = null;\n\n    // UI elements\n    this.modal = null;\n    this.enhancedModal = null;\n    this.simulationContainer = null;\n    this.categoriesGrid = null;\n    this.lastFocusedElement = null; // For focus restoration\n\n    // Theme and preferences\n    this.currentTheme = 'light';\n    this.preferences = {\n      reducedMotion: false,\n      highContrast: false,\n      largeText: false,\n    };\n\n    // Error handling\n    this.errorBoundary = null;\n    this.lastError = null;\n\n    // Onboarding tour\n    this.onboardingTour = null;\n\n    // Available simulation categories (each containing multiple scenarios)\n    // NOTE: These are thematic categories, not individual scenarios\n    this.availableSimulations = [\n      {\n        id: 'bias-fairness',\n        title: 'AI Ethics Explorer',\n        description:\n          'Explore real-world AI scenarios and see how different choices affect various groups in society. No right answers - just learning through cause and effect.',\n        difficulty: 'beginner',\n        duration: 1200, // 20 minutes\n        thumbnail: null, // Placeholder - will use default thumbnail\n        tags: ['ethics', 'fairness', 'education', 'scenarios', 'open-ended'],\n        useCanvas: false, // HTML-only simulation, no canvas needed\n        renderMode: 'html',\n      },\n      {\n        id: 'consent-transparency',\n        title: 'Consent & Transparency',\n        description:\n          'Learn about informed consent and the importance of transparency in AI systems.',\n        difficulty: 'beginner',\n        duration: 480, // 8 minutes\n        thumbnail: 'src/assets/images/consent-transparency-thumb.svg',\n        tags: ['consent', 'transparency', 'privacy', 'communication'],\n      },\n      {\n        id: 'autonomy-oversight',\n        title: 'Autonomy & Oversight',\n        description:\n          'Balance AI autonomy with human oversight in critical decision-making scenarios.',\n        difficulty: 'intermediate',\n        duration: 720, // 12 minutes\n        thumbnail: 'src/assets/images/autonomy-oversight-thumb.svg',\n        tags: ['autonomy', 'oversight', 'control', 'responsibility'],\n      },\n      {\n        id: 'misinformation-trust',\n        title: 'Misinformation & Trust',\n        description:\n          'Combat misinformation and build trustworthy AI communication systems.',\n        difficulty: 'advanced',\n        duration: 900, // 15 minutes\n        thumbnail: 'src/assets/images/misinformation-trust-thumb.svg',\n        tags: ['misinformation', 'trust', 'communication', 'verification'],\n      },\n    ];\n  }\n  async init() {\n    if (this.isInitialized) return;\n\n    try {\n      // Initialize scroll manager first (handles all scroll behavior)\n      scrollManager.init();\n\n      // Initialize theme detection first\n      this.initializeTheme();\n\n      // Initialize error handling\n      this.initializeErrorHandling();\n\n      // Initialize infinite loop detection (development mode only)\n      this.initializeLoopDetection();\n\n      // Initialize core systems\n      await this.initializeSystems();\n\n      // Setup UI\n      this.setupUI();\n\n      // Load simulations\n      await this.loadSimulations();\n\n      // Setup event listeners\n      this.setupEventListeners();\n\n      // Initialize accessibility\n      this.setupAccessibility();\n\n      // Render initial state\n      this.render();\n\n      // Initialize hero demo\n      await this.initializeHeroDemo();\n\n      // Initialize enhanced objects (after visual engine is set up)\n      await this.initializeEnhancedObjects();\n\n      // Initialize modal footer management\n      this.initializeModalFooterManager();\n\n      // Initialize ethics radar demo\n      await this.initializeEthicsRadarDemo();\n\n      // Initialize onboarding tour for first-time users (prevent multiple instances)\n      if (!this.onboardingTour && !window.onboardingTourInstance) {\n        this.onboardingTour = new OnboardingTour();\n\n        // Make onboarding tour available globally for debugging\n        window.onboardingTourInstance = this.onboardingTour;\n\n        // Instrument onboarding tour for loop detection (development mode)\n        this.instrumentOnboardingTour(this.onboardingTour);\n\n        // Check and start onboarding tour for first-time users\n        this.checkAndStartOnboardingTour();\n      } else {\n        AppDebug.warn(\n          'OnboardingTour instance already exists, skipping initialization'\n        );\n      }\n\n      // Initialize scroll reveal header\n      this.initializeScrollRevealHeader();\n\n      this.isInitialized = true;\n      AppDebug.log(\n        'AI Ethics App initialized successfully with modernized infrastructure'\n      );\n\n      // Track initialization\n      simpleAnalytics.trackEvent('app_initialized', {\n        simulations_available: this.availableSimulations.length,\n        browser: Helpers.getBrowserInfo().browser,\n        device: Helpers.getDeviceType(),\n        theme: this.currentTheme,\n        accessibility_enabled:\n          this.preferences.highContrast || this.preferences.largeText,\n      });\n    } catch (error) {\n      AppDebug.error('Failed to initialize app:', error);\n      this.handleError(\n        error,\n        'Failed to initialize the application. Please refresh the page.'\n      );\n    }\n  }\n\n  /**\n   * Initialize theme detection and monitoring\n   */\n  initializeTheme() {\n    // Detect system preferences\n    const prefersReducedMotion = window.matchMedia?.(\n      '(prefers-reduced-motion: reduce)'\n    ).matches;\n    const prefersHighContrast = window.matchMedia?.(\n      '(prefers-contrast: high)'\n    ).matches;\n\n    // Get saved user preferences (they override system preferences)\n    const savedPreferences = userPreferences.getAccessibilitySettings();\n\n    // Use saved preferences if they exist, otherwise use system preferences\n    this.preferences = {\n      reducedMotion:\n        savedPreferences.reducedMotion !== undefined\n          ? savedPreferences.reducedMotion\n          : prefersReducedMotion,\n      highContrast:\n        savedPreferences.highContrast !== undefined\n          ? savedPreferences.highContrast\n          : prefersHighContrast,\n      largeText: savedPreferences.largeText || false, // Default to false\n    };\n\n    this.currentTheme = this.preferences.highContrast\n      ? 'high-contrast'\n      : 'light';\n\n    // Apply initial theme\n    this.applyTheme();\n\n    // Monitor theme changes\n    this.setupThemeMonitoring();\n\n    AppDebug.log('Theme initialized:', this.currentTheme, this.preferences);\n  }\n\n  /**\n   * Initialize scroll reveal header functionality\n   */\n  initializeScrollRevealHeader() {\n    const header = document.querySelector('.header');\n    if (!header) return;\n\n    let lastScrollY = window.scrollY;\n\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n\n      // Don't hide header at the very top of the page\n      if (currentScrollY <= 10) {\n        header.classList.remove('header-hidden');\n        header.classList.add('header-visible');\n      } else {\n        // Hide header when scrolling down, show when scrolling up\n        if (currentScrollY > lastScrollY && currentScrollY > 100) {\n          // Scrolling down - hide header\n          header.classList.add('header-hidden');\n          header.classList.remove('header-visible');\n        } else if (currentScrollY < lastScrollY) {\n          // Scrolling up - show header\n          header.classList.remove('header-hidden');\n          header.classList.add('header-visible');\n        }\n      }\n\n      lastScrollY = currentScrollY;\n    };\n\n    // Throttle scroll events for better performance\n    let ticking = false;\n    const throttledHandleScroll = () => {\n      if (!ticking) {\n        requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n        });\n        ticking = true;\n      }\n    };\n\n    window.addEventListener('scroll', throttledHandleScroll, { passive: true });\n\n    // Initialize header as visible\n    header.classList.add('header-visible');\n\n    AppDebug.log('Scroll reveal header initialized');\n  }\n\n  /**\n   * Setup theme change monitoring\n   */\n  setupThemeMonitoring() {\n    const reducedMotionQuery = window.matchMedia?.(\n      '(prefers-reduced-motion: reduce)'\n    );\n    const highContrastQuery = window.matchMedia?.('(prefers-contrast: high)');\n\n    const handleThemeChange = () => {\n      // Get current saved preferences to check which ones are user-set\n      const savedPreferences = userPreferences.getAccessibilitySettings();\n\n      // Only update preferences that haven't been explicitly set by the user\n      const newPreferences = { ...this.preferences };\n\n      // Update system-based preferences only if user hasn't overridden them\n      if (savedPreferences.reducedMotion === undefined) {\n        newPreferences.reducedMotion = reducedMotionQuery?.matches || false;\n      }\n      if (savedPreferences.highContrast === undefined) {\n        newPreferences.highContrast = highContrastQuery?.matches || false;\n      }\n      // largeText is always user-controlled, so never auto-update it\n\n      if (JSON.stringify(newPreferences) !== JSON.stringify(this.preferences)) {\n        this.preferences = newPreferences;\n        this.currentTheme = newPreferences.highContrast\n          ? 'high-contrast'\n          : 'light';\n        this.applyTheme();\n        this.announceThemeChange();\n\n        AppDebug.log(\n          'System theme changed, updated non-user-set preferences:',\n          newPreferences\n        );\n      }\n    };\n\n    reducedMotionQuery?.addEventListener?.('change', handleThemeChange);\n    highContrastQuery?.addEventListener?.('change', handleThemeChange);\n  }\n\n  /**\n   * Apply current theme to the application\n   */\n  applyTheme() {\n    const { body } = document;\n\n    // Remove existing theme classes\n    body.classList.remove('high-contrast', 'reduced-motion', 'large-text');\n\n    // Apply current theme classes\n    if (this.preferences.highContrast) body.classList.add('high-contrast');\n    if (this.preferences.reducedMotion) body.classList.add('reduced-motion');\n    if (this.preferences.largeText) body.classList.add('large-text');\n\n    // Update button states (aria-pressed attributes)\n    this.updateButtonStates();\n\n    // Update theme color meta tag\n    const themeColorMeta = document.querySelector('meta[name=\"theme-color\"]');\n    if (themeColorMeta) {\n      const themeColor = '#1a73e8'; // Always use light theme color\n      themeColorMeta.setAttribute('content', themeColor);\n    }\n\n    // Update managers if they exist\n    if (this.animationManager) {\n      // Update the animation manager theme when preferences change\n      this.animationManager.updateAnimationDefaults();\n    }\n\n    if (this.accessibilityManager) {\n      this.accessibilityManager.updateTheme(this.preferences);\n    }\n  }\n\n  /**\n   * Update accessibility button states\n   */\n  updateButtonStates() {\n    const highContrastBtn = document.getElementById('toggle-high-contrast');\n    const largeTextBtn = document.getElementById('toggle-large-text');\n    const reducedMotionBtn = document.getElementById('toggle-reduced-motion');\n\n    if (highContrastBtn) {\n      highContrastBtn.setAttribute(\n        'aria-pressed',\n        this.preferences.highContrast.toString()\n      );\n    }\n    if (largeTextBtn) {\n      largeTextBtn.setAttribute(\n        'aria-pressed',\n        this.preferences.largeText.toString()\n      );\n    }\n    if (reducedMotionBtn) {\n      reducedMotionBtn.setAttribute(\n        'aria-pressed',\n        this.preferences.reducedMotion.toString()\n      );\n    }\n  }\n\n  /**\n   * Announce theme changes for accessibility\n   */\n  announceThemeChange() {\n    const announcement = `Theme changed to ${this.currentTheme.replace('-', ' ')} mode`;\n\n    if (this.accessibilityManager) {\n      this.accessibilityManager.announce(announcement);\n    } else {\n      // Fallback announcement\n      const liveRegion = document.getElementById('aria-live-polite');\n      if (liveRegion) {\n        liveRegion.textContent = announcement;\n      }\n    }\n  }\n\n  /**\n   * Initialize error handling and recovery\n   */\n  initializeErrorHandling() {\n    // Create error boundary element\n    this.errorBoundary = document.getElementById('error-boundary');\n\n    // Global error handlers\n    window.addEventListener('error', event => {\n      this.handleError(event.error, 'A JavaScript error occurred');\n    });\n\n    window.addEventListener('unhandledrejection', event => {\n      this.handleError(event.reason, 'An unhandled promise rejection occurred');\n    });\n\n    AppDebug.log('Error handling initialized');\n  }\n\n  /**\n   * Enhanced error handling with recovery options\n   */\n  handleError(error, userMessage = 'An unexpected error occurred') {\n    this.lastError = error;\n    AppDebug.error('App Error:', error);\n\n    // Track error for analytics\n    simpleAnalytics.trackEvent('app_error', {\n      error_message: error.message || String(error),\n      error_stack: error.stack,\n      user_agent: navigator.userAgent,\n      timestamp: new Date().toISOString(),\n    });\n\n    // Show error to user\n    this.showError(userMessage);\n\n    // Announce error for accessibility\n    if (this.accessibilityManager) {\n      this.accessibilityManager.announce(`Error: ${userMessage}`, 'assertive');\n    }\n  }\n\n  /**\n   * Show error in error boundary\n   */\n  showError(message, isRecoverable = true) {\n    if (!this.errorBoundary) {\n      // Fallback to alert if no error boundary\n      alert(message);\n      return;\n    }\n\n    const errorContent = this.errorBoundary.querySelector('.error-content');\n    if (errorContent) {\n      const messageEl = errorContent.querySelector('.error-message');\n      const retryBtn = errorContent.querySelector('#retry-action');\n      const reportBtn = errorContent.querySelector('#report-error');\n\n      if (messageEl) messageEl.textContent = message;\n\n      // Setup retry functionality\n      if (retryBtn && isRecoverable) {\n        retryBtn.style.display = 'inline-block';\n        retryBtn.onclick = () => {\n          this.hideError();\n          // Attempt to recover by reinitializing\n          if (!this.isInitialized) {\n            this.init();\n          }\n        };\n      } else if (retryBtn) {\n        retryBtn.style.display = 'none';\n      }\n\n      // Setup error reporting\n      if (reportBtn) {\n        reportBtn.onclick = () => {\n          this.reportError();\n        };\n      }\n    }\n\n    this.errorBoundary.setAttribute('aria-hidden', 'false');\n    this.errorBoundary.style.display = 'flex';\n  }\n\n  /**\n   * Hide error boundary\n   */\n  hideError() {\n    if (this.errorBoundary) {\n      this.errorBoundary.setAttribute('aria-hidden', 'true');\n      this.errorBoundary.style.display = 'none';\n    }\n  }\n\n  /**\n   * Report error to analytics/support\n   */\n  reportError() {\n    if (this.lastError) {\n      const errorReport = {\n        message: this.lastError.message || String(this.lastError),\n        stack: this.lastError.stack,\n        userAgent: navigator.userAgent,\n        url: window.location.href,\n        timestamp: new Date().toISOString(),\n        appState: {\n          initialized: this.isInitialized,\n          currentSimulation: this.currentSimulation?.id,\n          theme: this.currentTheme,\n        },\n      };\n\n      // Send to analytics\n      simpleAnalytics.trackEvent('error_reported', errorReport);\n\n      // Show confirmation\n      alert(\n        'Error report sent. Thank you for helping us improve the application.'\n      );\n    }\n  }\n\n  async initializeSystems() {\n    try {\n      // Initialize animation manager with theme preferences\n      this.animationManager = new AnimationManager({\n        enableAnimations: !this.preferences.reducedMotion,\n        reducedMotion: this.preferences.reducedMotion,\n        performanceMode: this.preferences.reducedMotion\n          ? 'compatibility'\n          : 'balanced',\n      });\n\n      // Initialize accessibility manager with current preferences\n      this.accessibilityManager = new AccessibilityManager(document.body, {\n        theme: this.currentTheme,\n        preferences: this.preferences,\n      });\n\n      // Initialize core educational modules\n      await this.initializeCoreModules();\n\n      // Visual Engine will be initialized later when we have canvas elements\n      // Just store the configuration for now\n      this.visualEngineConfig = {\n        renderMode: 'canvas',\n        accessibility: true,\n        highPerformance: !this.preferences.reducedMotion,\n        debug: false,\n        highContrast: this.preferences.highContrast,\n        reducedMotion: this.preferences.reducedMotion,\n      };\n\n      // Systems are already initialized via their modules\n      // Simple analytics auto-initializes\n      AppDebug.log('Core systems initialized with modernized infrastructure');\n    } catch (error) {\n      AppDebug.error('Failed to initialize systems:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize core educational modules\n   */\n  async initializeCoreModules() {\n    try {\n      // Initialize Educator Toolkit\n      this.educatorToolkit = new EducatorToolkit();\n      AppDebug.log('Educator Toolkit initialized');\n\n      // Initialize Digital Science Lab\n      this.digitalScienceLab = new DigitalScienceLab();\n      AppDebug.log('Digital Science Lab initialized');\n\n      // Initialize Scenario Generator\n      this.scenarioGenerator = new ScenarioGenerator();\n      AppDebug.log('Scenario Generator initialized');\n\n      // Connect the modules for integrated functionality\n      this.connectEducationalModules();\n    } catch (error) {\n      AppDebug.error('Failed to initialize core educational modules:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Connect educational modules for integrated functionality\n   */\n  connectEducationalModules() {\n    // Connect scenario generator to educator toolkit for assessment alignment\n    if (this.educatorToolkit && this.scenarioGenerator) {\n      this.educatorToolkit.setScenarioGenerator(this.scenarioGenerator);\n    }\n\n    // Connect digital science lab to both toolkit and generator\n    if (this.digitalScienceLab) {\n      if (this.educatorToolkit) {\n        this.digitalScienceLab.setEducatorToolkit(this.educatorToolkit);\n      }\n      if (this.scenarioGenerator) {\n        this.digitalScienceLab.setScenarioGenerator(this.scenarioGenerator);\n      }\n    }\n\n    AppDebug.log('Educational modules connected successfully');\n  }\n\n  /**\n   * Connect core educational modules to a simulation instance\n   * @param {Object} simulation - The simulation instance\n   * @param {Object} config - The simulation configuration\n   */\n  connectModulesToSimulation(simulation, config) {\n    try {\n      // Connect Educator Toolkit\n      if (this.educatorToolkit && simulation) {\n        simulation.educatorToolkit = this.educatorToolkit;\n\n        // Get curriculum alignment for this simulation\n        const curriculumAlignment = this.educatorToolkit.getCurriculumAlignment(\n          config.tags || []\n        );\n        if (curriculumAlignment) {\n          simulation.curriculumAlignment = curriculumAlignment;\n        }\n\n        // Get assessment tools for this simulation\n        const assessmentTools = this.educatorToolkit.getAssessmentTools(\n          config.difficulty\n        );\n        if (assessmentTools) {\n          simulation.assessmentTools = assessmentTools;\n        }\n      }\n\n      // Connect Digital Science Lab\n      if (this.digitalScienceLab && simulation) {\n        simulation.digitalScienceLab = this.digitalScienceLab;\n\n        // Get relevant lab stations for this simulation\n        const relevantStations = this.digitalScienceLab.getRelevantStations(\n          config.tags || []\n        );\n        if (relevantStations) {\n          simulation.labStations = relevantStations;\n        }\n      }\n\n      // Connect Scenario Generator\n      if (this.scenarioGenerator && simulation) {\n        simulation.scenarioGenerator = this.scenarioGenerator;\n\n        // If this simulation can use generated scenarios, provide them\n        if (simulation.supportsGeneratedScenarios) {\n          const generatedScenarios = this.scenarioGenerator.generateScenarios(\n            config.tags?.[0] || 'general',\n            config.difficulty || 'beginner'\n          );\n          if (generatedScenarios) {\n            simulation.generatedScenarios = generatedScenarios;\n          }\n        }\n      }\n\n      AppDebug.log(\n        `Educational modules connected to simulation: ${simulation.id || 'unknown'}`\n      );\n    } catch (error) {\n      AppDebug.error(\n        'Failed to connect educational modules to simulation:',\n        error\n      );\n      // Non-critical error - simulation can still function without full integration\n    }\n  }\n\n  setupUI() {\n    // Get key UI elements\n    this.modal = document.getElementById('simulation-modal');\n    this.simulationContainer = document.getElementById('simulation-container');\n    this.categoriesGrid = document.querySelector('.categories-grid');\n    this.loading = document.getElementById('loading');\n\n    if (!this.categoriesGrid) {\n      AppDebug.error('Categories grid not found');\n      return;\n    }\n\n    // Initialize CategoryGrid\n    this.initializeCategoryGrid();\n  }\n\n  /**\n   * Initialize the new category grid system\n   */\n  initializeCategoryGrid() {\n    try {\n      AppDebug.log('Attempting to initialize CategoryGrid...');\n      this.categoryGrid = new CategoryGrid();\n      AppDebug.log('Category grid initialized successfully');\n    } catch (error) {\n      AppDebug.error('Failed to initialize category grid:', error);\n      // Fallback to legacy simulation loading if category grid fails\n      this.loadLegacySimulations();\n    }\n  }\n\n  /**\n   * Fallback method for legacy simulation loading\n   */\n  loadLegacySimulations() {\n    AppDebug.log('Loading legacy simulation cards as fallback');\n    // This will be populated with existing simulation loading logic if needed\n    // For now, just log that we're in fallback mode\n  }\n\n  async loadSimulations() {\n    // Simulations are loaded dynamically in createSimulationInstance()\n    // Store available simulation configs in the simulations Map\n    this.availableSimulations.forEach(simConfig => {\n      this.simulations.set(simConfig.id, simConfig);\n    });\n  }\n\n  /**\n   * Initialize hero demo component\n   * Currently using radar chart demo instead of HeroDemo class\n   */\n  async initializeHeroDemo() {\n    // The HeroDemo class is designed for a different hero layout\n    // that's not currently implemented. The radar chart demo is working fine.\n    logger.info('Hero demo: Using radar chart demo instead of HeroDemo class');\n  }\n\n  /**\n   * Initialize enhanced objects (visual components)\n   */\n  async initializeEnhancedObjects() {\n    try {\n      // Enhanced objects are loaded dynamically when needed\n      // This method is kept for future initialization if needed\n      logger.info('Enhanced objects system ready for dynamic loading');\n    } catch (error) {\n      logger.error('Failed to initialize enhanced objects:', error);\n      // Non-critical error - app can continue with basic functionality\n    }\n  }\n\n  /**\n   * Initialize modal footer management system\n   */\n  initializeModalFooterManager() {\n    try {\n      // Initialize the modal footer manager\n      this.modalFooterManager = new ModalFooterManager();\n\n      // Store reference for cleanup\n      this.modalFooterManager.app = this;\n\n      logger.info('Modal footer manager initialized successfully');\n    } catch (error) {\n      logger.error('Failed to initialize modal footer manager:', error);\n      // Non-critical error - modals will still work with basic functionality\n    }\n  }\n\n  /**\n   * Initialize ethics radar demo system\n   */\n  async initializeEthicsRadarDemo() {\n    try {\n      // Only initialize if the hero demo container exists\n      const demoContainer = document.getElementById('hero-ethics-chart');\n      if (demoContainer) {\n        // Initialize the ethics radar demo\n        ethicsDemo = new EthicsRadarDemo();\n\n        logger.info('Ethics radar demo initialized successfully');\n      } else {\n        logger.warn(\n          'Hero ethics chart container not found, skipping radar demo initialization'\n        );\n      }\n    } catch (error) {\n      logger.error('Failed to initialize ethics radar demo:', error);\n      // Non-critical error - the demo is optional\n    }\n  }\n\n  setupEventListeners() {\n    // Mobile navigation functionality\n    this.setupMobileNavigation();\n\n    // Surprise Me functionality\n    this.setupSurpriseMe();\n\n    // Hero section buttons\n    const startLearningBtn = document.getElementById('start-learning');\n\n    if (startLearningBtn) {\n      startLearningBtn.addEventListener('click', () => {\n        this.scrollToSimulations();\n      });\n    }\n\n    // Debug: Test scenario modal button\n    const testScenarioBtn = document.getElementById('test-scenario-modal');\n    if (testScenarioBtn) {\n      testScenarioBtn.addEventListener('click', () => {\n        this.testScenarioModal();\n      });\n    }\n\n    // Take Tour button in navigation\n    const tourBtn = document.getElementById('start-tour-nav');\n    if (tourBtn) {\n      tourBtn.addEventListener('click', e => {\n        e.preventDefault(); // Prevent default link behavior\n        this.startOnboardingTour();\n\n        // Close mobile navigation if open, with proper focus management\n        const navToggle = document.querySelector('.nav-toggle');\n        const mainNav = document.querySelector('.main-nav');\n        if (mainNav && mainNav.classList.contains('open')) {\n          // Move focus away from the clicked tour button before hiding navigation\n          if (navToggle) {\n            navToggle.focus();\n          } else {\n            document.body.focus();\n          }\n\n          // Close navigation after focus has moved\n          setTimeout(() => {\n            mainNav.classList.remove('open');\n            navToggle?.setAttribute('aria-expanded', 'false');\n            mainNav.setAttribute('aria-hidden', 'true');\n\n            // Also handle nav backdrop if present\n            const navBackdrop = document.querySelector('.nav-backdrop');\n            if (navBackdrop) {\n              navBackdrop.classList.remove('open');\n            }\n          }, 0);\n        }\n      });\n    }\n\n    // Modal controls\n    if (this.modal) {\n      const closeBtn = this.modal.querySelector('.modal-close');\n      const resetBtn = document.getElementById('reset-simulation');\n      const nextBtn = document.getElementById('next-scenario');\n\n      if (closeBtn) {\n        closeBtn.addEventListener('click', () => this.closeSimulation());\n\n        // Add focus trapping to the modal\n        this.modal.addEventListener('keydown', e => {\n          if (e.key === 'Tab') {\n            this.trapFocusInModal(e);\n          }\n        });\n      }\n\n      if (resetBtn) {\n        resetBtn.addEventListener('click', () => this.resetCurrentSimulation());\n      }\n\n      if (nextBtn) {\n        nextBtn.addEventListener('click', () => this.nextScenario());\n      }\n\n      // Close modal on backdrop click\n      this.modal.addEventListener('click', e => {\n        if (e.target === this.modal) {\n          this.closeSimulation();\n        }\n      });\n\n      // Close modal on Escape key\n      document.addEventListener('keydown', e => {\n        if (e.key === 'Escape' && !this.modal.hasAttribute('aria-hidden')) {\n          this.closeSimulation();\n        }\n      });\n    }\n\n    // Enhanced simulation card buttons (delegated event handling)\n    document.addEventListener('click', e => {\n      if (e.target.classList.contains('enhanced-sim-button')) {\n        e.preventDefault();\n        const simulationId = e.target.getAttribute('data-simulation');\n        if (simulationId) {\n          // Learning Lab button - go through pre-launch modal\n          this.startSimulation.call(this, simulationId);\n        }\n      } else if (e.target.classList.contains('simulation-quick-start-btn')) {\n        e.preventDefault();\n        const simulationId = e.target.getAttribute('data-simulation');\n        if (simulationId) {\n          // Quick start button - skip pre-launch modal\n          this.launchSimulationDirect.call(this, simulationId);\n        }\n      }\n    });\n  }\n\n  /**\n   * Check if this is a first-time visit and start onboarding tour\n   */\n  checkAndStartOnboardingTour() {\n    if (!this.onboardingTour) {\n      return;\n    }\n\n    // Check if user has completed the tour\n    if (this.onboardingTour.hasCompletedTour()) {\n      AppDebug.log('User has already completed onboarding tour');\n      return;\n    }\n\n    // Check if this is a first-time visit\n    if (this.onboardingTour.isFirstTimeVisit()) {\n      AppDebug.log('First-time visit detected, starting onboarding tour');\n      // Small delay to ensure all UI is ready\n      const UI_READY_DELAY = 500; // ms\n      setTimeout(() => {\n        this.onboardingTour.startTour(1);\n      }, UI_READY_DELAY);\n    }\n  }\n\n  /**\n   * Manually start the onboarding tour (for testing)\n   */\n  startOnboardingTour() {\n    if (!this.onboardingTour && !window.onboardingTourInstance) {\n      this.onboardingTour = new OnboardingTour();\n      // Make onboarding tour available globally for debugging\n      window.onboardingTourInstance = this.onboardingTour;\n    } else if (window.onboardingTourInstance) {\n      this.onboardingTour = window.onboardingTourInstance;\n    }\n\n    // Clear localStorage to force tour to start\n    localStorage.removeItem('has_visited');\n    localStorage.removeItem('tour_completed');\n\n    AppDebug.log('Manually starting onboarding tour');\n    this.onboardingTour.startTour(1);\n  }\n\n  setupAccessibility() {\n    // Preferences are now loaded in initializeTheme(), so we just need to ensure\n    // the theme is applied (which was already done in initializeTheme)\n    // This method is kept for future accessibility setup if needed\n  }\n\n  render() {\n    // Skip rendering the old simulations grid if CategoryGrid is active\n    if (!this.categoryGrid) {\n      this.renderSimulationsGrid();\n    }\n    // Hero demo is now handled by the HeroDemo class\n  }\n\n  renderSimulationsGrid() {\n    if (!this.categoriesGrid) return;\n\n    this.categoriesGrid.innerHTML = '';\n\n    this.availableSimulations.forEach(sim => {\n      const card = this.createSimulationCard(sim);\n      this.categoriesGrid.appendChild(card);\n    });\n  }\n\n  createSimulationCard(simulation) {\n    const card = Helpers.createElement('div', 'simulation-card', {\n      role: 'gridcell',\n      tabindex: '0',\n      'aria-label': `${simulation.title} simulation`,\n    });\n\n    const progress = userProgress.getSimulationProgress(simulation.id);\n    const isCompleted = progress.completed || false;\n    const score = progress.score || 0;\n\n    card.innerHTML = `\n            <div class=\"card-thumbnail\">\n                <img src=\"${simulation.thumbnail}\" alt=\"${simulation.title}\" onerror=\"this.src='src/assets/images/default-thumb.svg'\">\n                ${isCompleted ? '<div class=\"completion-badge\">✓</div>' : ''}\n            </div>\n            \n            <div class=\"card-content\">\n                <h3 class=\"card-title\">${simulation.title}</h3>\n                <p class=\"card-description\">${simulation.description}</p>\n                \n                <div class=\"card-meta\">\n                    <span class=\"difficulty difficulty-${simulation.difficulty}\">${Helpers.capitalize(simulation.difficulty)}</span>\n                    <span class=\"duration\">${Helpers.formatDuration(simulation.duration * 1000)}</span>\n                </div>\n                \n                <div class=\"card-tags\">\n                    ${simulation.tags.map(tag => `<span class=\"tag\">${tag}</span>`).join('')}\n                </div>\n                \n                ${\n                  isCompleted\n                    ? `\n                    <div class=\"completion-info\">\n                        <span class=\"score\">Score: ${score}/100</span>\n                        <span class=\"grade\">${Helpers.getEthicsGrade(score).grade}</span>\n                    </div>\n                `\n                    : ''\n                }\n                  <div class=\"card-actions\">\n                    <button class=\"btn btn-primary enhanced-sim-button\" data-simulation=\"${simulation.id}\">\n                        Learning Lab Simulation\n                    </button>\n                    <button class=\"btn btn-secondary simulation-quick-start-btn\" data-simulation=\"${simulation.id}\">\n                        ${isCompleted ? 'Retry' : 'Start'} Simulation\n                    </button>\n                </div>\n            </div>\n        `;\n\n    // Add hover and focus effects\n    card.addEventListener('mouseenter', () => {\n      card.style.transform = 'translateY(-2px)';\n    });\n\n    card.addEventListener('mouseleave', () => {\n      card.style.transform = 'translateY(0)';\n    });\n\n    card.addEventListener('keydown', e => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        this.startSimulation(simulation.id);\n      }\n    });\n\n    return card;\n  }\n\n  /**\n   * Simulation management - Two-stage launch flow\n   */\n  async startSimulation(simulationId) {\n    try {\n      // Verify 'this' context is correct\n      if (!this || typeof this.showNotification !== 'function') {\n        throw new Error(\n          'App context not properly bound. startSimulation called with wrong context.'\n        );\n      }\n\n      // Check if we should show the pre-launch modal first\n      const shouldShowPreLaunch =\n        !userPreferences.shouldSkipPreLaunch(simulationId);\n\n      if (shouldShowPreLaunch) {\n        this.showPreLaunchModal(simulationId);\n        return; // Pre-launch modal will call launchSimulationDirect when ready\n      }\n\n      // Direct launch (skipping pre-launch modal)\n      await this.launchSimulationDirect(simulationId);\n    } catch (error) {\n      AppDebug.error('Failed to start simulation:', error);\n      this.hideLoading();\n\n      // Use fallback notification if this.showNotification is not available\n      if (typeof this.showNotification === 'function') {\n        this.showNotification(\n          'Failed to start simulation. Please try again.',\n          'error'\n        );\n      } else {\n        // Fallback to logger and direct notification system\n        logger.error('Failed to start simulation:', error.message);\n        if (window.NotificationToast) {\n          window.NotificationToast.show({\n            type: 'error',\n            message: 'Failed to start simulation. Please try again.',\n            duration: 5000,\n            closable: true,\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * Shows the pre-launch information modal\n   */\n  showPreLaunchModal(simulationId) {\n    logger.debug('Showing pre-launch modal for:', simulationId);\n\n    const prelaunchModal = new PreLaunchModal(simulationId, {\n      onLaunch: id => {\n        logger.debug('Pre-launch modal onLaunch called with:', id);\n        // User clicked \"Start Exploration\" - proceed with simulation\n        this.launchSimulationDirect(id || simulationId);\n      },\n      onCancel: () => {\n        logger.debug('Pre-launch modal cancelled');\n        // User clicked \"Maybe Later\" - just close modal\n        this.hideLoading();\n      },\n      showEducatorResources: true, // Always show educator resources\n    });\n\n    prelaunchModal.show();\n  }\n\n  /**\n   * Direct simulation launch (bypasses pre-launch modal)\n   */\n  async launchSimulationDirect(simulationId) {\n    try {\n      this.showLoading();\n\n      // Cleanup previous simulation canvases and engines\n      if (this.currentSimulation && this.currentSimulation.cleanup) {\n        this.currentSimulation.cleanup();\n      }\n\n      // Cleanup any existing simulation canvas\n      if (this.currentSimulationCanvasId) {\n        canvasManager.removeCanvas(this.currentSimulationCanvasId);\n        this.currentSimulationCanvasId = null;\n      }\n\n      // Cleanup hero demo canvas if running\n      if (this.heroDemoCanvasId) {\n        canvasManager.removeCanvas(this.heroDemoCanvasId);\n        this.heroDemoCanvasId = null;\n      }\n\n      const simConfig = this.simulations.get(simulationId);\n      if (!simConfig) {\n        throw new Error(`Simulation ${simulationId} not found`);\n      }\n\n      // Track simulation start\n      simpleAnalytics.trackSimulationStart(simulationId, simConfig.title); // Get simulation container\n      const simulationContainer = document.getElementById(\n        'simulation-container'\n      );\n      if (!simulationContainer) {\n        throw new Error('Simulation container not found');\n      }\n\n      // Add loading state to container\n      simulationContainer.classList.add('loading');\n      simulationContainer.setAttribute('aria-busy', 'true');\n      simulationContainer.setAttribute(\n        'aria-label',\n        `Loading ${simConfig.title} simulation`\n      );\n\n      // Clear previous content and remove any error states\n      simulationContainer.innerHTML = '';\n      simulationContainer.classList.remove('error');\n      // Create managed canvas for the simulation\n      const { canvas, id } = await canvasManager.createCanvas({\n        width: 600,\n        height: 400,\n        container: simulationContainer,\n        className: 'simulation-canvas',\n        id: `simulation-${simulationId}`,\n      });\n\n      // Store canvas ID for cleanup\n      this.currentSimulationCanvasId = id;\n\n      // Check if simulation needs canvas or is HTML-only\n      if (simConfig.useCanvas !== false && simConfig.renderMode !== 'html') {\n        // Apply responsive styling to canvas\n        canvas.style.cssText = `\n                    max-width: 100%;\n                    max-height: 100%;\n                    width: auto;\n                    height: auto;\n                    border: 1px solid #ddd;\n                    border-radius: 8px;\n                    background: #fff;\n                `;\n\n        // Create visual engine using canvas manager\n        this.engine = await canvasManager.createVisualEngine(id, {\n          renderMode: 'canvas',\n          accessibility: true,\n          debug: false,\n          width: 600,\n          height: 400,\n        });\n\n        // Set the container reference on the engine for simulation compatibility\n        this.engine.container = simulationContainer;\n      } else {\n        // For HTML-only simulations, create a simple mock engine with just the container\n        this.engine = {\n          container: simulationContainer,\n          type: 'html',\n          renderMode: 'html',\n          start: () => {\n            // Mock engine started for HTML simulation\n          },\n          stop: () => {\n            // Mock engine stopped for HTML simulation\n          },\n          destroy: () => {\n            // Mock engine destroyed for HTML simulation\n          },\n        };\n\n        // Remove the canvas element since it's not needed\n        if (canvas && canvas.parentNode) {\n          canvas.parentNode.removeChild(canvas);\n        }\n      }\n\n      // Create the specific simulation instance\n      this.currentSimulation = await this.createSimulationInstance(\n        simulationId,\n        simConfig\n      );\n\n      if (!this.currentSimulation) {\n        throw new Error('Failed to create simulation instance');\n      }\n\n      // Initialize the simulation\n      this.currentSimulation.init(this.engine);\n\n      // Setup simulation event listeners\n      this.setupSimulationEventListeners();\n\n      // Show the enhanced simulation modal instead of the basic modal\n      this.showEnhancedSimulationModal(simulationId, simConfig);\n\n      // Start the engine\n      this.engine.start();\n      // Start the simulation\n      this.currentSimulation.start();\n\n      this.hideLoading();\n      // Remove loading state from container\n      if (simulationContainer) {\n        simulationContainer.classList.remove('loading');\n        simulationContainer.removeAttribute('aria-busy');\n        simulationContainer.setAttribute(\n          'aria-label',\n          `${simConfig.title} simulation`\n        );\n      }\n\n      logger.debug('Simulation launched successfully');\n    } catch (error) {\n      AppDebug.error('Failed to start simulation:', error);\n      this.hideLoading();\n\n      // Add error state to container\n      const simulationContainer = document.getElementById(\n        'simulation-container'\n      );\n      if (simulationContainer) {\n        simulationContainer.classList.remove('loading');\n        simulationContainer.classList.add('error');\n        simulationContainer.removeAttribute('aria-busy');\n        simulationContainer.setAttribute(\n          'aria-label',\n          'Simulation failed to load'\n        );\n        simulationContainer.innerHTML = `\n                    <div style=\"text-align: center; padding: 2rem;\">\n                        <h3>Simulation Failed to Load</h3>\n                        <p>There was an error loading the simulation. Please try again.</p>\n                        <button class=\"btn btn-primary\" onclick=\"this.closest('.modal').querySelector('.modal-close').click()\">Close</button>\n                    </div>\n                `;\n      }\n\n      this.showError('Failed to start the simulation. Please try again.');\n    }\n  }\n\n  async createSimulationInstance(simulationId, config) {\n    try {\n      let simulation;\n\n      // Load the specific simulation class based on ID\n      switch (simulationId) {\n        default: {\n          // Fallback to basic simulation for unimplemented simulations\n          const basicScenarios = [\n            {\n              id: 'intro',\n              title: 'Introduction',\n              description:\n                'Welcome to this open-ended exploration of AI ethics',\n              objective:\n                'Explore different perspectives and discover consequences of choices',\n            },\n            {\n              id: 'decision1',\n              title: 'First Decision',\n              description: 'Make your first ethical choice',\n              objective: 'Choose the most ethical option',\n            },\n            {\n              id: 'conclusion',\n              title: 'Conclusion',\n              description: 'Reflect on your decisions',\n              objective: 'Review your ethical choices',\n            },\n          ];\n\n          simulation = new EthicsSimulation(simulationId, {\n            title: config.title,\n            description: config.description,\n            difficulty: config.difficulty,\n            duration: config.duration,\n            scenarios: basicScenarios,\n            ethicsMetrics: [\n              {\n                name: 'fairness',\n                label: 'Fairness',\n                value: APP_CONSTANTS.DEFAULTS.ETHICS_METER_VALUE,\n              },\n              {\n                name: 'transparency',\n                label: 'Transparency',\n                value: APP_CONSTANTS.DEFAULTS.ETHICS_METER_VALUE,\n              },\n              {\n                name: 'privacy',\n                label: 'Privacy',\n                value: APP_CONSTANTS.DEFAULTS.ETHICS_METER_VALUE,\n              },\n            ],\n          });\n\n          // Set container reference\n          simulation.container = document.getElementById(\n            'simulation-container'\n          );\n          break;\n        }\n      }\n\n      // Connect core educational modules to the simulation\n      if (simulation) {\n        this.connectModulesToSimulation(simulation, config);\n      }\n\n      return simulation;\n    } catch (error) {\n      AppDebug.error(`Failed to load simulation ${simulationId}:`, error);\n      throw error;\n    }\n  }\n\n  setupSimulationEventListeners() {\n    if (!this.currentSimulation) return;\n\n    this.currentSimulation.on('simulation:completed', data => {\n      this.onSimulationCompleted(data);\n    });\n\n    this.currentSimulation.on('ethics:updated', data => {\n      // Handle ethics updates\n      AppDebug.log('Ethics updated:', data);\n    });\n\n    this.currentSimulation.on('scenario:loaded', data => {\n      // Update UI for new scenario\n      this.updateModalTitle(data.scenario.title);\n    });\n  }\n\n  /**\n   * Handle simulation completion - show post-simulation modal\n   */\n  onSimulationCompleted(data) {\n    AppDebug.log('Simulation completed:', data);\n\n    try {\n      // Close the enhanced simulation modal first\n      const enhancedModal = document.querySelector(\n        '.enhanced-simulation-modal'\n      );\n      if (enhancedModal) {\n        enhancedModal.style.display = 'none';\n        enhancedModal.setAttribute('aria-hidden', 'true');\n      }\n\n      // Track simulation completion\n      if (this.currentSimulation && this.currentSimulation.id) {\n        simpleAnalytics.trackSimulationComplete(\n          this.currentSimulation.id,\n          data\n        );\n      }\n\n      // Show post-simulation modal\n      this.showPostSimulationModal(data);\n    } catch (error) {\n      AppDebug.error('Error handling simulation completion:', error);\n      // Fallback to basic completion handling\n      this.hideModal();\n      this.showNotification(\n        'Simulation completed! Thank you for exploring AI Ethics.',\n        'success'\n      );\n    }\n  }\n\n  /**\n   * Show the post-simulation reflection modal\n   */\n  showPostSimulationModal(data) {\n    const simulationId = this.currentSimulation?.id || 'unknown';\n\n    const postModal = new PostSimulationModal(simulationId, {\n      sessionData: data,\n      onComplete: () => {\n        // User finished reflection - close modal and return to main view\n        this.hideModal();\n        this.showNotification(\n          'Thank you for your thoughtful reflection!',\n          'success'\n        );\n      },\n      onSkip: () => {\n        // User skipped reflection - just close modal\n        this.hideModal();\n      },\n      onRestart: () => {\n        // User wants to restart simulation\n        this.hideModal();\n        this.startSimulation(simulationId);\n      },\n    });\n\n    postModal.show();\n  }\n\n  /**\n   * Show the enhanced simulation modal for the active simulation\n   */\n  showEnhancedSimulationModal(simulationId, simConfig) {\n    AppDebug.log('Showing enhanced simulation modal for:', simulationId);\n\n    try {\n      // Configure modal options based on simulation type\n      const modalOptions = {\n        simulation: this.currentSimulation,\n        onClose: () => {\n          AppDebug.log('Enhanced modal closed');\n          this.enhancedModal = null;\n          this.hideModal();\n        },\n        onMinimize: () => {\n          AppDebug.log('Enhanced modal minimized');\n          // Keep simulation running but minimize UI\n        },\n      };\n\n      // No specific simulation optimizations needed - all use default configuration\n\n      this.enhancedModal = new EnhancedSimulationModal(\n        simulationId,\n        modalOptions\n      );\n\n      this.enhancedModal.show();\n\n      // CRITICAL: Connect the simulation to the enhanced modal's container\n      setTimeout(() => {\n        const enhancedContainer = this.enhancedModal.getSimulationContainer();\n        if (enhancedContainer && this.currentSimulation) {\n          AppDebug.log('Moving simulation to enhanced modal container');\n\n          // Get the original simulation container content\n          const originalContainer = document.getElementById(\n            'simulation-container'\n          );\n          if (originalContainer) {\n            // Move all content from original container to enhanced container\n            while (originalContainer.firstChild) {\n              enhancedContainer.appendChild(originalContainer.firstChild);\n            }\n\n            // Update the simulation's container reference\n            if (this.engine) {\n              this.engine.container = enhancedContainer;\n            }\n\n            // If the simulation has a container property, update it\n            if (this.currentSimulation.container) {\n              this.currentSimulation.container = enhancedContainer;\n            }\n\n            // Re-setup the simulation UI in the new container\n            if (this.currentSimulation.setupUI) {\n              this.currentSimulation.setupUI();\n            }\n          }\n        }\n      }, 100); // Small delay to ensure modal is fully created\n    } catch (error) {\n      AppDebug.error('Failed to show enhanced simulation modal:', error);\n      // Fallback to basic modal\n      this.showSimulationModal(simConfig);\n    }\n  }\n\n  showSimulationModal(simConfig) {\n    if (!this.modal) return;\n\n    const title = this.modal.querySelector('#modal-title');\n    if (title) {\n      title.textContent = simConfig.title;\n    }\n\n    // Store the currently focused element to restore later\n    this.lastFocusedElement = document.activeElement;\n\n    // Remove inert from modal and set aria-hidden to false\n    this.modal.removeAttribute('inert');\n    this.modal.setAttribute('aria-hidden', 'false');\n    this.modal.style.display = 'flex';\n\n    // Add visible class for CSS opacity transition\n    requestAnimationFrame(() => {\n      this.modal.classList.add('visible');\n    });\n\n    // Make background content inert\n    const mainContent = document.getElementById('main-content');\n    if (mainContent) {\n      mainContent.setAttribute('inert', '');\n    }\n\n    // Focus management - create focus trap for modal\n    this.modalFocusTrap = focusManager.createTrap(this.modal, {\n      autoFocus: true,\n      restoreFocus: true,\n    });\n  }\n\n  /**\n   * Handle keyboard navigation in modal (delegated to focus manager)\n   */\n  trapFocusInModal(event) {\n    // This is now handled by the focus manager\n    // Keep method for backward compatibility but delegate to focus manager\n    if (this.modalFocusTrap && event.key === 'Tab') {\n      // Focus manager handles this automatically\n      return;\n    }\n  }\n\n  closeSimulation() {\n    if (this.currentSimulation) {\n      this.currentSimulation.reset();\n      this.currentSimulation = null;\n    }\n\n    if (this.engine) {\n      this.engine.stop();\n      this.engine.destroy();\n      this.engine = null;\n    }\n\n    // Cleanup all managed canvases\n    const canvasesToCleanup = [\n      this.currentSimulationCanvasId,\n      this.ethicsMetersCanvasId,\n      this.interactiveButtonsCanvasId,\n      this.simulationSlidersCanvasId,\n    ];\n\n    canvasesToCleanup.forEach(canvasId => {\n      if (canvasId) {\n        canvasManager.removeCanvas(canvasId);\n      }\n    });\n\n    // Reset canvas IDs\n    this.currentSimulationCanvasId = null;\n    this.ethicsMetersCanvasId = null;\n    this.interactiveButtonsCanvasId = null;\n    this.simulationSlidersCanvasId = null;\n\n    if (this.modal) {\n      // Clean up focus trap\n      if (this.modalFocusTrap) {\n        this.modalFocusTrap.destroy();\n        this.modalFocusTrap = null;\n      }\n\n      // Make modal inert and hide it\n      this.modal.setAttribute('inert', '');\n      this.modal.setAttribute('aria-hidden', 'true');\n      this.modal.classList.remove('visible');\n      this.modal.style.display = 'none';\n\n      // Remove inert from main content\n      const mainContent = document.getElementById('main-content');\n      if (mainContent) {\n        mainContent.removeAttribute('inert');\n      }\n    } // Clear simulation container\n    if (this.simulationContainer) {\n      this.simulationContainer.innerHTML = '';\n      this.simulationContainer.classList.remove('loading', 'error');\n      this.simulationContainer.removeAttribute('aria-busy');\n      this.simulationContainer.removeAttribute('aria-label');\n    }\n  }\n\n  /**\n   * Resets the current simulation\n   */\n  resetCurrentSimulation() {\n    if (this.currentSimulation && this.currentSimulation.reset) {\n      this.currentSimulation.reset();\n    }\n  }\n\n  /**\n   * Shows the loading indicator\n   */\n  showLoading() {\n    if (this.loading) {\n      this.loading.style.display = 'flex';\n      this.loading.setAttribute('aria-hidden', 'false');\n    }\n  }\n\n  /**\n   * Hides the loading indicator\n   */\n  hideLoading() {\n    if (this.loading) {\n      this.loading.style.display = 'none';\n      this.loading.setAttribute('aria-hidden', 'true');\n    }\n  }\n\n  /**\n   * Toggles simulation pause state\n   */\n  toggleSimulationPause(isPaused) {\n    if (this.currentSimulation) {\n      if (isPaused && this.currentSimulation.pause) {\n        this.currentSimulation.pause();\n      } else if (!isPaused && this.currentSimulation.resume) {\n        this.currentSimulation.resume();\n      }\n    }\n  }\n\n  /**\n   * Populates the enhanced modal with simulation-specific data\n   */\n  async populateEnhancedModalData(simulationId) {\n    try {\n      // Import simulation data\n      const { simulationData } = await import('./data/simulation-info.js');\n      const simData = simulationData[simulationId];\n\n      if (!simData) {\n        AppDebug.warn(`No simulation data found for ${simulationId}`);\n        return;\n      }\n\n      // Populate resource tab\n      this.populateResourcesTab(simData);\n\n      // Populate help tab\n      this.populateHelpTab(simData);\n\n      // Populate quick resources panel\n      this.populateQuickResourcesPanel(simData);\n    } catch (error) {\n      AppDebug.error('Failed to populate enhanced modal data:', error);\n    }\n  }\n\n  /**\n   * Populates the resources tab with simulation data\n   */\n  populateResourcesTab(simData) {\n    if (!this.currentEnhancedModal) return;\n\n    const { modal } = this.currentEnhancedModal;\n    if (!modal) return;\n\n    // Background reading\n    const readingContainer = modal.querySelector('#background-reading');\n    if (readingContainer && simData.resources?.backgroundReading) {\n      readingContainer.innerHTML = simData.resources.backgroundReading\n        .map(\n          resource => `\n                <div class=\"resource-item\">\n                    <a href=\"${resource.url}\" target=\"_blank\" class=\"resource-title\">${resource.title}</a>\n                    <p class=\"resource-description\">${resource.description}</p>\n                </div>\n            `\n        )\n        .join('');\n    }\n\n    // Related videos\n    const videosContainer = modal.querySelector('#related-videos');\n    if (videosContainer && simData.resources?.videos) {\n      videosContainer.innerHTML = simData.resources.videos\n        .map(\n          video => `\n                <div class=\"resource-item\">\n                    <a href=\"${video.url}\" target=\"_blank\" class=\"resource-title\">${video.title}</a>\n                    <p class=\"resource-description\">${video.description}</p>\n                    <span class=\"resource-duration\">${video.duration}</span>\n                </div>\n            `\n        )\n        .join('');\n    }\n\n    // Discussion questions\n    const questionsContainer = modal.querySelector('#discussion-questions');\n    if (questionsContainer && simData.educatorResources?.discussionQuestions) {\n      questionsContainer.innerHTML =\n        simData.educatorResources.discussionQuestions\n          .map(\n            question => `\n                <div class=\"resource-item\">\n                    <p class=\"discussion-question\">${question}</p>\n                </div>\n            `\n          )\n          .join('');\n    }\n  }\n\n  /**\n   * Populates the help tab with simulation-specific information\n   */\n  populateHelpTab(simData) {\n    if (!this.currentEnhancedModal) return;\n\n    const { modal } = this.currentEnhancedModal;\n    if (!modal) return;\n\n    // Ethics explanation\n    const ethicsContainer = modal.querySelector('#ethics-explanation');\n    if (ethicsContainer && simData.vocabulary) {\n      ethicsContainer.innerHTML = Object.entries(simData.vocabulary)\n        .map(\n          ([term, definition]) => `\n                <div class=\"ethics-term\">\n                    <h5>${term}</h5>\n                    <p>${definition}</p>\n                </div>\n            `\n        )\n        .join('');\n    }\n  }\n\n  /**\n   * Populates the quick resources panel\n   */\n  populateQuickResourcesPanel(simData) {\n    if (!this.currentEnhancedModal) return;\n\n    const { modal } = this.currentEnhancedModal;\n    if (!modal) return;\n\n    // Quick concepts\n    const conceptsContainer = modal.querySelector('#quick-concepts');\n    if (conceptsContainer && simData.vocabulary) {\n      const MAX_QUICK_TERMS = 5;\n      const keyTerms = Object.keys(simData.vocabulary).slice(\n        0,\n        MAX_QUICK_TERMS\n      );\n      conceptsContainer.innerHTML = keyTerms\n        .map(\n          term => `\n                <li><a href=\"#\" class=\"resource-link\" data-term=\"${term}\">${term}</a></li>\n            `\n        )\n        .join('');\n\n      // Add click handlers for terms\n      conceptsContainer.querySelectorAll('[data-term]').forEach(link => {\n        link.addEventListener('click', e => {\n          e.preventDefault();\n          const {\n            dataset: { term },\n          } = e.target;\n          const definition = simData.vocabulary[term];\n          this.showQuickHelp(term, definition);\n        });\n      });\n    }\n  }\n\n  /**\n   * Shows quick help tooltip or modal\n   */\n  showQuickHelp(term, definition) {\n    // Create a simple tooltip or notification\n    const NOTIFICATION_DURATION = 5000;\n    this.showNotification(\n      `${term}: ${definition}`,\n      'info',\n      NOTIFICATION_DURATION\n    );\n  }\n\n  /**\n   * Shows a notification toast message\n   * @param {string} message - The notification message\n   * @param {string} type - The notification type ('success', 'error', 'warning', 'info')\n   * @param {number} duration - Auto-dismiss duration in ms (optional)\n   * @returns {string|null} - Toast ID or null if failed\n   */\n  showNotification(message, type = 'info', duration = 5000) {\n    if (window.NotificationToast) {\n      // Use the global notification toast instance\n      return window.NotificationToast.show({\n        type,\n        message,\n        duration,\n        closable: true,\n      });\n    } else {\n      // Fallback to logger if notification system not available\n      logger.info(`[${type.toUpperCase()}] ${message}`);\n      return null;\n    }\n  }\n\n  /**\n   * Sets up Surprise Me functionality\n   */\n  setupSurpriseMe() {\n    const surpriseMeBtn = document.getElementById('surprise-me-nav');\n    if (surpriseMeBtn) {\n      surpriseMeBtn.addEventListener('click', e => {\n        e.preventDefault();\n        this.launchRandomScenario();\n      });\n    }\n  }\n\n  /**\n   * Launches a random uncompleted scenario\n   */\n  launchRandomScenario() {\n    const randomScenario = this.getRandomUncompletedScenario();\n\n    if (!randomScenario) {\n      this.showNotification(\n        \"🎉 Congratulations! You've completed all scenarios! Try replaying your favorites.\",\n        'success',\n        APP_CONSTANTS.TIMING.NOTIFICATION_DURATION\n      );\n      return;\n    }\n\n    // Close mobile navigation if open\n    const mainNav = document.querySelector('.main-nav');\n    if (mainNav && mainNav.classList.contains('open')) {\n      mainNav.classList.remove('open');\n      const navToggle = document.querySelector('.nav-toggle');\n      if (navToggle) {\n        navToggle.classList.remove('active');\n        navToggle.setAttribute('aria-expanded', 'false');\n      }\n      document.body.style.overflow = '';\n    }\n\n    // Show notification about the selected scenario\n    this.showNotification(\n      `🎉 Surprise! Opening \"${randomScenario.scenario.title}\" from ${randomScenario.category.title}`,\n      'info',\n      APP_CONSTANTS.TIMING.NOTIFICATION_DURATION\n    );\n\n    // Launch the scenario directly (skip pre-launch modal for surprise factor)\n    if (this.categoryGrid) {\n      this.categoryGrid.openScenarioModalDirect(\n        randomScenario.category.id,\n        randomScenario.scenario.id\n      );\n    } else {\n      // Fallback if categoryGrid is not available\n      logger.warn('CategoryGrid not available, redirecting to scenario');\n      window.location.href = `#scenario-${randomScenario.scenario.id}`;\n    }\n  }\n\n  /**\n   * Gets a random uncompleted scenario from all categories\n   * @returns {Object|null} Object with category and scenario, or null if all completed\n   */\n  getRandomUncompletedScenario() {\n    try {\n      // Get all categories and their scenarios\n      const allCategories = getAllCategories();\n\n      // Load user progress\n      const stored = localStorage.getItem('simulateai_category_progress');\n      const userProgress = stored ? JSON.parse(stored) : {};\n\n      // Collect all uncompleted scenarios\n      const uncompletedScenarios = [];\n\n      allCategories.forEach(category => {\n        const scenarios = getCategoryScenarios(category.id);\n        scenarios.forEach(scenario => {\n          const isCompleted = userProgress[category.id]?.[scenario.id] || false;\n          if (!isCompleted) {\n            uncompletedScenarios.push({\n              category,\n              scenario,\n            });\n          }\n        });\n      });\n\n      // Return random uncompleted scenario\n      if (uncompletedScenarios.length === 0) {\n        return null; // All scenarios completed\n      }\n\n      const randomIndex = Math.floor(\n        Math.random() * uncompletedScenarios.length\n      );\n      return uncompletedScenarios[randomIndex];\n    } catch (error) {\n      logger.error('Failed to get random uncompleted scenario:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Sets up mobile navigation hamburger menu functionality\n   */\n  setupMobileNavigation() {\n    const navToggle = document.querySelector('.nav-toggle');\n    const mainNav = document.querySelector('.main-nav');\n    const navBackdrop = document.querySelector('.nav-backdrop');\n    const navLinks = document.querySelectorAll('.nav-link');\n\n    if (!navToggle || !mainNav) {\n      logger.warn('Mobile navigation elements not found');\n      return;\n    }\n\n    // Toggle mobile navigation\n    const toggleNav = isOpen => {\n      const isCurrentlyOpen = mainNav.classList.contains('open');\n      const shouldOpen = isOpen !== undefined ? isOpen : !isCurrentlyOpen;\n\n      // Update classes\n      mainNav.classList.toggle('open', shouldOpen);\n      navToggle.classList.toggle('active', shouldOpen);\n      if (navBackdrop) {\n        navBackdrop.classList.toggle('open', shouldOpen);\n      }\n\n      // Update ARIA attributes and focus management\n      if (shouldOpen) {\n        navToggle.setAttribute('aria-expanded', 'true');\n        mainNav.setAttribute('aria-hidden', 'false');\n\n        // Focus first nav link when opening\n        const firstNavLink = mainNav.querySelector('.nav-link');\n        if (firstNavLink) {\n          setTimeout(\n            () => firstNavLink.focus(),\n            APP_CONSTANTS.TIMING.FOCUS_DELAY\n          );\n        }\n      } else {\n        // Move focus away from navigation before hiding it\n        navToggle.focus();\n\n        // Set aria attributes after focus has moved\n        setTimeout(() => {\n          navToggle.setAttribute('aria-expanded', 'false');\n          mainNav.setAttribute('aria-hidden', 'true');\n        }, 0);\n      }\n\n      // Analytics\n      simpleAnalytics.trackEvent('mobile_nav_toggled', { isOpen: shouldOpen });\n    };\n\n    // Hamburger button click\n    navToggle.addEventListener('click', e => {\n      e.preventDefault();\n      toggleNav();\n    });\n\n    // Backdrop click\n    if (navBackdrop) {\n      navBackdrop.addEventListener('click', () => {\n        toggleNav(false);\n      });\n    }\n\n    // Click outside to close navigation (comprehensive handler)\n    document.addEventListener('click', e => {\n      // Only handle if navigation is open\n      if (!mainNav.classList.contains('open')) {\n        return;\n      }\n\n      // Don't close if clicking on the nav toggle button (it has its own handler)\n      if (navToggle.contains(e.target)) {\n        return;\n      }\n\n      // Don't close if clicking inside the navigation panel\n      if (mainNav.contains(e.target)) {\n        return;\n      }\n\n      // Don't close if clicking on the backdrop (it has its own handler)\n      if (navBackdrop && navBackdrop.contains(e.target)) {\n        return;\n      }\n\n      // Click was outside navigation - close it\n      toggleNav(false);\n    });\n\n    // Close nav when clicking on nav links\n    navLinks.forEach(link => {\n      link.addEventListener('click', e => {\n        const href = link.getAttribute('href');\n        const text = link.textContent.trim();\n\n        // Skip handling for mega menu trigger on mobile\n        const MOBILE_BREAKPOINT = 768;\n        if (\n          link.closest('.nav-item-dropdown') &&\n          window.innerWidth <= MOBILE_BREAKPOINT\n        ) {\n          return; // Let mega menu handle this\n        }\n\n        logger.info(`Navigation link clicked: \"${text}\" -> ${href}`);\n\n        // Skip surprise me button - it has its own handler\n        if (link.id === 'surprise-me-nav') {\n          return;\n        }\n\n        // Move focus away from the clicked link before closing navigation\n        // This prevents accessibility issues with aria-hidden on focused elements\n        const moveFocusAndCloseNav = () => {\n          // Move focus to a safe element (nav toggle button or document body)\n          if (navToggle) {\n            navToggle.focus();\n          } else {\n            document.body.focus();\n          }\n\n          // Close navigation after focus has moved\n          setTimeout(\n            () => toggleNav(false),\n            APP_CONSTANTS.TIMING.NAV_CLOSE_DELAY\n          );\n        };\n\n        // Handle hash-based navigation\n        if (href && href.startsWith('#') && href !== '#') {\n          // Prevent default browser jump behavior\n          e.preventDefault();\n\n          const targetElement = document.querySelector(href);\n\n          if (targetElement) {\n            logger.info(`Navigating to section: ${href}`);\n\n            // Move focus and close mobile nav first\n            moveFocusAndCloseNav();\n\n            // Then smoothly scroll to target after a brief delay\n            const SCROLL_DELAY = 100;\n            setTimeout(() => {\n              targetElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n              });\n              logger.info(`Scrolled to section: ${href}`);\n            }, SCROLL_DELAY);\n\n            // Track successful navigation\n            simpleAnalytics.trackEvent('navigation_link_clicked', {\n              target: href,\n              text,\n              success: true,\n            });\n          } else {\n            logger.warn(`Navigation target not found: ${href}`);\n\n            // Move focus and close menu for missing targets\n            moveFocusAndCloseNav();\n\n            // Show user feedback for missing sections\n            const NOTIFICATION_DURATION = 3000;\n            if (this.showNotification) {\n              this.showNotification(\n                `Section \"${text}\" is not available on this page.`,\n                'warning',\n                NOTIFICATION_DURATION\n              );\n            }\n\n            // Track failed navigation\n            simpleAnalytics.trackEvent('navigation_link_clicked', {\n              target: href,\n              text,\n              success: false,\n              error: 'target_not_found',\n            });\n          }\n        } else {\n          logger.info(`External link or non-hash navigation: ${href}`);\n\n          // For external links, move focus and close nav before navigation\n          moveFocusAndCloseNav();\n\n          // Track external navigation\n          simpleAnalytics.trackEvent('navigation_link_clicked', {\n            target: href,\n            text,\n            type: 'external',\n          });\n        }\n      });\n    });\n\n    // Handle escape key\n    document.addEventListener('keydown', e => {\n      if (e.key === 'Escape' && mainNav.classList.contains('open')) {\n        toggleNav(false);\n      }\n    });\n\n    // Handle window resize - close mobile nav on desktop breakpoint\n    let resizeTimeout;\n    const DESKTOP_BREAKPOINT = 768;\n    window.addEventListener('resize', () => {\n      clearTimeout(resizeTimeout);\n      const RESIZE_DEBOUNCE = 100;\n      resizeTimeout = setTimeout(() => {\n        if (\n          window.innerWidth >= DESKTOP_BREAKPOINT &&\n          mainNav.classList.contains('open')\n        ) {\n          toggleNav(false);\n          document.body.style.overflow = ''; // Reset body scroll\n        }\n      }, RESIZE_DEBOUNCE);\n    });\n\n    // Handle focus trap for accessibility\n    this.setupNavFocusTrap(mainNav, navToggle);\n\n    /**\n     * Initialize mega menu functionality\n     */\n    function initializeMegaMenu() {\n      const megaMenuTrigger = document.querySelector(\n        '.nav-item-dropdown .nav-link'\n      );\n      const megaMenuDropdown = document.querySelector('.nav-item-dropdown');\n      const megaMenu = document.querySelector('.mega-menu');\n\n      if (!megaMenuTrigger || !megaMenuDropdown || !megaMenu) return;\n\n      // Mobile detection\n      const MOBILE_BREAKPOINT = 768;\n      const isMobile = () => window.innerWidth <= MOBILE_BREAKPOINT;\n\n      // Mobile doesn't need close button for simple dropdown\n\n      // Initialize search filter (desktop only)\n      const searchInput = document.querySelector('.mega-menu-search');\n      if (searchInput && !isMobile()) {\n        searchInput.addEventListener('input', e => {\n          const searchTerm = e.target.value.toLowerCase();\n          const menuItems = document.querySelectorAll('.mega-menu-item');\n          let visibleCount = 0;\n\n          menuItems.forEach(item => {\n            const title = item.querySelector('h4').textContent.toLowerCase();\n            const description = item\n              .querySelector('p')\n              .textContent.toLowerCase();\n\n            if (\n              title.includes(searchTerm) ||\n              description.includes(searchTerm)\n            ) {\n              item.style.display = 'flex';\n              visibleCount++;\n            } else {\n              item.style.display = 'none';\n            }\n          });\n\n          // Show/hide \"no results\" message\n          let noResultsMsg = document.querySelector('.mega-menu-no-results');\n          if (visibleCount === 0 && searchTerm.length > 0) {\n            if (!noResultsMsg) {\n              noResultsMsg = document.createElement('div');\n              noResultsMsg.className = 'mega-menu-no-results';\n              noResultsMsg.innerHTML = `\n                <div style=\"text-align: center; padding: var(--spacing-6); color: var(--color-gray-600);\">\n                  <p>No categories match \"${searchTerm}\"</p>\n                  <small>Try searching for terms like \"privacy\", \"decision\", or \"robot\"</small>\n                </div>\n              `;\n              document\n                .querySelector('.mega-menu-grid')\n                .appendChild(noResultsMsg);\n            }\n            noResultsMsg.style.display = 'block';\n          } else if (noResultsMsg) {\n            noResultsMsg.style.display = 'none';\n          }\n        });\n\n        // Clear search when menu closes\n        const clearSearch = () => {\n          searchInput.value = '';\n          const menuItems = document.querySelectorAll('.mega-menu-item');\n          menuItems.forEach(item => {\n            item.style.display = 'flex';\n          });\n          const noResultsMsg = document.querySelector('.mega-menu-no-results');\n          if (noResultsMsg) {\n            noResultsMsg.style.display = 'none';\n          }\n        };\n\n        // Clear search on menu close (desktop only)\n        if (!isMobile()) {\n          megaMenuTrigger.addEventListener('click', clearSearch);\n        }\n      }\n\n      // Handle mega menu trigger click\n      megaMenuTrigger.addEventListener('click', e => {\n        if (isMobile()) {\n          e.preventDefault();\n          e.stopPropagation();\n          const isExpanded =\n            megaMenuDropdown.getAttribute('aria-expanded') === 'true';\n          megaMenuDropdown.setAttribute('aria-expanded', !isExpanded);\n\n          // Simple dropdown - no body scroll prevention needed\n        }\n      });\n\n      // Handle mega menu item clicks\n      const megaMenuItems = document.querySelectorAll('.mega-menu-item');\n      megaMenuItems.forEach(item => {\n        item.addEventListener('click', e => {\n          e.preventDefault();\n          const href = item.getAttribute('href');\n\n          // Close mega menu\n          megaMenuDropdown.setAttribute('aria-expanded', 'false');\n\n          // On mobile, also close the main navigation\n          const MOBILE_BREAKPOINT = 768;\n          if (window.innerWidth <= MOBILE_BREAKPOINT) {\n            const mainNav = document.querySelector('.main-nav');\n            const navToggle = document.querySelector('.nav-toggle');\n            const navBackdrop = document.querySelector('.nav-backdrop');\n\n            if (mainNav && navToggle) {\n              // Move focus away from the clicked mega menu item before hiding navigation\n              navToggle.focus();\n\n              // Close navigation after focus has moved\n              setTimeout(() => {\n                mainNav.classList.remove('open');\n                navToggle.classList.remove('active');\n                navToggle.setAttribute('aria-expanded', 'false');\n                mainNav.setAttribute('aria-hidden', 'true');\n\n                if (navBackdrop) {\n                  navBackdrop.classList.remove('open');\n                }\n\n                // Restore body scroll\n                document.body.style.overflow = '';\n              }, 0);\n            }\n          }\n\n          // Scroll to category section\n          if (href.startsWith('#category-')) {\n            const categoryId = href.replace('#category-', '');\n            let categoryElement = document.querySelector(\n              `[data-category-id=\"${categoryId}\"]`\n            );\n\n            // Fallback to ID selector if data attribute doesn't work\n            if (!categoryElement) {\n              categoryElement = document.querySelector(\n                `#category-${categoryId}`\n              );\n            }\n\n            if (categoryElement) {\n              // Add a small delay to ensure the menu is closed before scrolling\n              setTimeout(() => {\n                categoryElement.scrollIntoView({\n                  behavior: 'smooth',\n                  block: 'start',\n                });\n              }, 100);\n            } else {\n              // Fallback to simulations section\n              const simulationsSection = document.querySelector('#simulations');\n              if (simulationsSection) {\n                setTimeout(() => {\n                  simulationsSection.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'start',\n                  });\n                }, 100);\n              }\n            }\n          }\n        });\n      });\n\n      // Handle view all link\n      const viewAllLink = document.querySelector('.mega-menu-view-all');\n      if (viewAllLink) {\n        viewAllLink.addEventListener('click', e => {\n          e.preventDefault();\n          megaMenuDropdown.setAttribute('aria-expanded', 'false');\n\n          // On mobile, also close the main navigation\n          const MOBILE_BREAKPOINT = 768;\n          if (window.innerWidth <= MOBILE_BREAKPOINT) {\n            const mainNav = document.querySelector('.main-nav');\n            const navToggle = document.querySelector('.nav-toggle');\n            const navBackdrop = document.querySelector('.nav-backdrop');\n\n            if (mainNav && navToggle) {\n              // Move focus away from the clicked view all link before hiding navigation\n              navToggle.focus();\n\n              // Close navigation after focus has moved\n              setTimeout(() => {\n                mainNav.classList.remove('open');\n                navToggle.classList.remove('active');\n                navToggle.setAttribute('aria-expanded', 'false');\n                mainNav.setAttribute('aria-hidden', 'true');\n\n                if (navBackdrop) {\n                  navBackdrop.classList.remove('open');\n                }\n\n                // Restore body scroll\n                document.body.style.overflow = '';\n              }, 0);\n            }\n          }\n\n          const simulationsSection = document.querySelector('#simulations');\n          if (simulationsSection) {\n            setTimeout(() => {\n              simulationsSection.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n              });\n            }, 100);\n          }\n        });\n      }\n\n      // Close mega menu when clicking outside\n      document.addEventListener('click', e => {\n        if (!megaMenuDropdown.contains(e.target)) {\n          megaMenuDropdown.setAttribute('aria-expanded', 'false');\n          // Simple dropdown - no body scroll management needed\n        }\n      });\n\n      // Handle keyboard navigation\n      megaMenuTrigger.addEventListener('keydown', e => {\n        if (e.key === 'Enter' || e.key === ' ') {\n          e.preventDefault();\n          const isExpanded =\n            megaMenuDropdown.getAttribute('aria-expanded') === 'true';\n          megaMenuDropdown.setAttribute('aria-expanded', !isExpanded);\n\n          // Simple dropdown - no body scroll management needed\n        }\n        if (e.key === 'Escape') {\n          megaMenuDropdown.setAttribute('aria-expanded', 'false');\n          // Simple dropdown - no body scroll management needed\n        }\n      });\n\n      // Handle escape key for mobile mega menu\n      document.addEventListener('keydown', e => {\n        if (e.key === 'Escape' && isMobile()) {\n          const isExpanded =\n            megaMenuDropdown.getAttribute('aria-expanded') === 'true';\n          if (isExpanded) {\n            megaMenuDropdown.setAttribute('aria-expanded', 'false');\n            // Simple dropdown - no body scroll management needed\n          }\n        }\n      });\n\n      // Handle window resize\n      window.addEventListener('resize', () => {\n        // Close mega menu on resize to avoid layout issues\n        megaMenuDropdown.setAttribute('aria-expanded', 'false');\n      });\n    }\n\n    // Initialize mega menu when DOM is ready\n    document.addEventListener('DOMContentLoaded', initializeMegaMenu);\n  }\n\n  /**\n   * Sets up focus trap for mobile navigation\n   */\n  setupNavFocusTrap(navElement, _toggleButton) {\n    const focusableSelectors = [\n      'a[href]',\n      'button:not([disabled])',\n      'textarea:not([disabled])',\n      'input:not([disabled])',\n      'select:not([disabled])',\n      '[tabindex]:not([tabindex=\"-1\"])',\n    ].join(',');\n\n    navElement.addEventListener('keydown', e => {\n      if (!navElement.classList.contains('open') || e.key !== 'Tab') {\n        return;\n      }\n\n      const focusableElements = navElement.querySelectorAll(focusableSelectors);\n      const firstFocusable = focusableElements[0];\n      const lastFocusable = focusableElements[focusableElements.length - 1];\n\n      if (e.shiftKey) {\n        // Shift + Tab - going backwards\n        if (document.activeElement === firstFocusable) {\n          e.preventDefault();\n          lastFocusable.focus();\n        }\n      } else {\n        // Tab - going forwards\n        if (document.activeElement === lastFocusable) {\n          e.preventDefault();\n          firstFocusable.focus();\n        }\n      }\n    });\n  }\n\n  /**\n   * Scroll to the simulations section\n   */\n  /**\n   * Scroll to Ethics Categories section using unified scroll manager\n   */\n  async scrollToSimulations() {\n    try {\n      // Ensure the target element exists before scrolling\n      const categoriesSection = document.getElementById('categories');\n      if (!categoriesSection) {\n        logger.warn('Categories section not found, cannot scroll');\n        return;\n      }\n\n      await scrollManager.scrollToElement('#categories', {\n        behavior: 'smooth',\n        offset: 80,\n        respectReducedMotion: true,\n      });\n\n      logger.info('Scrolled to Ethics Categories section');\n\n      // Track the navigation\n      simpleAnalytics.trackEvent('navigation_to_categories', {\n        source: 'start_learning_button',\n        target: 'ethics_categories',\n        method: 'smooth_scroll',\n      });\n\n      // Announce to screen readers for accessibility\n      if (this.accessibilityManager) {\n        this.accessibilityManager.announceToScreenReader(\n          'Navigated to Ethics Categories section',\n          'polite'\n        );\n      }\n    } catch (error) {\n      logger.error('Failed to scroll to Ethics Categories:', error);\n\n      // Fallback: try basic scroll without smooth animation\n      try {\n        const categoriesSection = document.getElementById('categories');\n        if (categoriesSection) {\n          categoriesSection.scrollIntoView({ block: 'start' });\n          logger.info('Used fallback scroll to Ethics Categories');\n        }\n      } catch (fallbackError) {\n        logger.error('Fallback scroll also failed:', fallbackError);\n      }\n    }\n  }\n\n  /**\n   * Test scenario modal functionality (debug method)\n   */\n  async testScenarioModal() {\n    try {\n      logger.info('Testing scenario modal with trolley problem scenario');\n\n      // Import and create scenario modal\n      const ScenarioModal = (await import('./components/scenario-modal.js'))\n        .default;\n      const scenarioModal = new ScenarioModal();\n\n      // Open with the first trolley problem scenario\n      await scenarioModal.open('autonomous-vehicle-split', 'trolley-problem');\n\n      logger.info('Scenario modal test launched successfully');\n    } catch (error) {\n      logger.error('Failed to test scenario modal:', error);\n      this.showNotification('Failed to open test scenario modal', 'error');\n    }\n  }\n\n  /**\n   * Open educator tools or guide\n   */\n  openEducatorTools() {\n    // For now, we can scroll to simulations or open a modal with educator resources\n    // This can be enhanced later with dedicated educator functionality\n    logger.info('Opening educator tools');\n\n    // Track the event\n    simpleAnalytics.trackEvent('educator_tools_accessed', {\n      source: 'educator_guide_button',\n    });\n\n    // For now, scroll to simulations as a placeholder\n    this.scrollToSimulations();\n  }\n\n  /**\n   * Initialize infinite loop detection for development\n   */\n  initializeLoopDetection() {\n    // Only enable in development mode or when explicitly requested\n    const isDevelopment =\n      window.location.hostname === 'localhost' ||\n      window.location.hostname === '127.0.0.1' ||\n      window.location.protocol === 'file:' ||\n      window.location.search.includes('debug=true');\n\n    if (isDevelopment) {\n      // Enable the loop detector\n      loopDetector.setEnabled(true);\n\n      // Add to window for easy access in development\n      window.loopDetector = loopDetector;\n\n      // Track critical onboarding methods that previously had loops\n      if (window.onboardingTourInstance) {\n        this.instrumentOnboardingTour(window.onboardingTourInstance);\n      }\n\n      logger.info(\n        'InfiniteLoopDetector',\n        '🔧 Loop detection enabled for development'\n      );\n    } else {\n      // Disable in production\n      loopDetector.setEnabled(false);\n      logger.info(\n        'InfiniteLoopDetector',\n        '🔒 Loop detection disabled for production'\n      );\n    }\n  }\n\n  /**\n   * Instrument onboarding tour methods for loop detection\n   */\n  instrumentOnboardingTour(tour) {\n    const criticalMethods = [\n      'positionCoachMark',\n      'showStep',\n      'nextStep',\n      'handleAction',\n    ];\n\n    criticalMethods.forEach(methodName => {\n      if (tour[methodName]) {\n        const original = tour[methodName];\n        tour[methodName] = function (...args) {\n          loopDetector.trackExecution(`OnboardingTour.${methodName}`);\n          return original.apply(this, args);\n        };\n      }\n    });\n\n    logger.info(\n      'InfiniteLoopDetector',\n      '📊 Instrumented OnboardingTour methods for monitoring'\n    );\n  }\n\n  // ...existing methods...\n}\n\n/**\n * Ethics Radar Demo Class for Hero Section\n * Handles the interactive radar chart demonstration in the hero area\n */\nclass EthicsRadarDemo {\n  constructor() {\n    this.demoChart = null;\n    this.ANIMATION_DELAY = 200; // Animation delay in milliseconds\n    this.RESET_DELAY = 300; // Reset animation delay in milliseconds\n    this.initializeDemo();\n  }\n\n  async initializeDemo() {\n    try {\n      // Initialize the demo radar chart with new hero container\n      this.demoChart = new RadarChart('hero-ethics-chart', {\n        title: 'Ethical Impact Analysis',\n        width: 580,\n        height: 580,\n        realTime: false,\n        showLabels: true,\n        animated: true,\n        isDemo: true, // Use minimal container styling\n      });\n\n      logger.info('Ethics radar demo initialized successfully');\n    } catch (error) {\n      logger.error('Failed to initialize ethics radar demo:', error);\n    }\n  }\n\n  simulatePattern(pattern) {\n    const patterns = {\n      utilitarian: {\n        fairness: 3,\n        sustainability: 4,\n        autonomy: 2,\n        beneficence: 5,\n        transparency: 3,\n        accountability: 4,\n        privacy: 2,\n        proportionality: 4,\n      },\n      deontological: {\n        fairness: 5,\n        sustainability: 3,\n        autonomy: 5,\n        beneficence: 4,\n        transparency: 4,\n        accountability: 5,\n        privacy: 4,\n        proportionality: 3,\n      },\n      virtue: {\n        fairness: 4,\n        sustainability: 4,\n        autonomy: 4,\n        beneficence: 4,\n        transparency: 3,\n        accountability: 4,\n        privacy: 3,\n        proportionality: 4,\n      },\n      balanced: {\n        fairness: 4,\n        sustainability: 4,\n        autonomy: 4,\n        beneficence: 4,\n        transparency: 4,\n        accountability: 4,\n        privacy: 4,\n        proportionality: 4,\n      },\n    };\n\n    if (this.demoChart && patterns[pattern]) {\n      setTimeout(() => {\n        this.demoChart.setScores(patterns[pattern]);\n        this.showFeedback(pattern);\n      }, this.ANIMATION_DELAY);\n    }\n  }\n\n  reset() {\n    if (this.demoChart) {\n      setTimeout(() => {\n        this.demoChart.resetScores();\n        this.hideFeedback();\n      }, this.RESET_DELAY);\n    }\n  }\n\n  showFeedback(pattern) {\n    const feedbackContainer = document.getElementById('hero-demo-feedback');\n    if (!feedbackContainer) return;\n\n    const popoverContent = feedbackContainer.querySelector('.popover-content');\n    if (!popoverContent) return;\n\n    // Clear any existing auto-hide timer\n    if (popoverHideTimeout) {\n      clearTimeout(popoverHideTimeout);\n      popoverHideTimeout = null;\n    }\n\n    const feedbackMessages = {\n      utilitarian: {\n        title: 'Utilitarian Ethics',\n        message:\n          'This approach prioritizes the greatest good for the greatest number, emphasizing beneficence and outcomes over individual rights.',\n      },\n      deontological: {\n        title: 'Rights-Based Ethics',\n        message:\n          'This framework focuses on duties and rights, giving priority to fairness, autonomy, and accountability regardless of consequences.',\n      },\n      virtue: {\n        title: 'Virtue Ethics',\n        message:\n          'This approach emphasizes character and moral virtues, seeking balance across all ethical dimensions through practical wisdom.',\n      },\n      balanced: {\n        title: 'Balanced Approach',\n        message:\n          'This represents a comprehensive ethical framework that considers all dimensions equally, often used in complex real-world scenarios.',\n      },\n    };\n\n    const feedback = feedbackMessages[pattern];\n    if (feedback) {\n      popoverContent.innerHTML = `\n                <h5>${feedback.title}</h5>\n                <p>${feedback.message}</p>\n            `;\n      feedbackContainer.classList.add('show');\n\n      // Set auto-hide timer for 5 seconds\n      const AUTO_HIDE_DELAY = 5000; // 5 seconds\n      popoverHideTimeout = setTimeout(() => {\n        this.hideFeedback();\n        popoverHideTimeout = null;\n      }, AUTO_HIDE_DELAY);\n    }\n  }\n\n  hideFeedback() {\n    // Clear any existing auto-hide timer\n    if (popoverHideTimeout) {\n      clearTimeout(popoverHideTimeout);\n      popoverHideTimeout = null;\n    }\n\n    const feedbackContainer = document.getElementById('hero-demo-feedback');\n    if (!feedbackContainer) return;\n\n    const popoverContent = feedbackContainer.querySelector('.popover-content');\n\n    feedbackContainer.classList.remove('show');\n    const FADE_OUT_DELAY = 300; // ms delay for fade out animation\n    setTimeout(() => {\n      if (popoverContent) {\n        popoverContent.innerHTML = '';\n      }\n    }, FADE_OUT_DELAY);\n  }\n}\n\n// Initialize the ethics radar demo when DOM is ready\nlet ethicsDemo = null;\nlet currentActivePattern = null; // Track currently active pattern\nlet popoverHideTimeout = null; // Track auto-hide timer for popover\n\n// Global functions for radar demo controls with toggle functionality\nwindow.simulateEthicsPattern = function (pattern, buttonElement) {\n  if (ethicsDemo) {\n    // If clicking the same pattern, toggle it off (deselect)\n    if (currentActivePattern === pattern) {\n      ethicsDemo.reset();\n      currentActivePattern = null;\n      updateButtonStates(null);\n    } else {\n      // Otherwise, select the new pattern\n      ethicsDemo.simulatePattern(pattern);\n      currentActivePattern = pattern;\n      updateButtonStates(pattern);\n\n      // Position and show popover above the clicked button\n      if (buttonElement) {\n        positionPopoverAboveButton(buttonElement);\n      }\n    }\n  }\n};\n\nwindow.resetEthicsDemo = function () {\n  if (ethicsDemo) {\n    ethicsDemo.reset();\n    currentActivePattern = null;\n    updateButtonStates(null);\n  }\n};\n\n// Helper function to position popover above a specific button\nfunction positionPopoverAboveButton(button) {\n  const feedbackContainer = document.getElementById('hero-demo-feedback');\n  if (!feedbackContainer || !button) return;\n\n  // Get button position and dimensions\n  const buttonRect = button.getBoundingClientRect();\n  const controlsContainer = button.closest('.demo-controls-grid');\n  const controlsRect = controlsContainer.getBoundingClientRect();\n\n  // Calculate position relative to the controls container\n  const leftOffset = buttonRect.left - controlsRect.left + buttonRect.width / 2;\n\n  // Apply positioning\n  feedbackContainer.style.left = `${leftOffset}px`;\n  feedbackContainer.style.transform = 'translateX(-50%)';\n}\n\n// Helper function to update button visual states\nfunction updateButtonStates(activePattern) {\n  const buttons = document.querySelectorAll('.hero-demo-controls .demo-btn');\n\n  buttons.forEach(button => {\n    const buttonText = button.textContent.toLowerCase();\n    let patternName = '';\n\n    // Map button text to pattern names\n    if (buttonText.includes('utilitarian')) patternName = 'utilitarian';\n    else if (buttonText.includes('rights-based')) patternName = 'deontological';\n    else if (buttonText.includes('virtue')) patternName = 'virtue';\n    else if (buttonText.includes('balanced')) patternName = 'balanced';\n\n    // Update button state\n    if (activePattern === patternName) {\n      button.classList.add('active');\n    } else {\n      button.classList.remove('active');\n    }\n  });\n}\n\nwindow.toggleRadarInstructions = function () {\n  const accordion = document.querySelector('.radar-instructions-accordion');\n  const content = document.querySelector('.accordion-content');\n\n  if (accordion && content) {\n    const isOpen = accordion.classList.contains('open');\n\n    if (isOpen) {\n      accordion.classList.remove('open');\n      content.classList.add('collapsed');\n      content.style.maxHeight = '0';\n      content.style.opacity = '0';\n    } else {\n      accordion.classList.add('open');\n      content.classList.remove('collapsed');\n      content.style.maxHeight = `${content.scrollHeight}px`;\n      content.style.opacity = '1';\n    }\n  }\n};\n\nwindow.toggleEthicsGlossary = function () {\n  const accordion = document.querySelector('.ethics-glossary-accordion');\n  const content = document.querySelector(\n    '.ethics-glossary-accordion .accordion-content'\n  );\n\n  if (accordion && content) {\n    const isOpen = accordion.classList.contains('open');\n\n    if (isOpen) {\n      accordion.classList.remove('open');\n      content.classList.add('collapsed');\n      content.style.maxHeight = '0';\n      content.style.opacity = '0';\n    } else {\n      accordion.classList.add('open');\n      content.classList.remove('collapsed');\n      content.style.maxHeight = `${content.scrollHeight}px`;\n      content.style.opacity = '1';\n    }\n  }\n};\n\n// Add click-to-close functionality for accordion content areas\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Add click listener for radar instructions accordion content\n  document.addEventListener('click', event => {\n    const radarContent = document.querySelector(\n      '.radar-instructions-accordion.open .accordion-content'\n    );\n    if (radarContent && radarContent.contains(event.target)) {\n      // Check if click is within the content area but not on the header\n      const header = document.querySelector(\n        '.radar-instructions-accordion .accordion-header'\n      );\n      if (!header || !header.contains(event.target)) {\n        window.toggleRadarInstructions();\n      }\n    }\n\n    // Add click listener for ethics glossary accordion content\n    const glossaryContent = document.querySelector(\n      '.ethics-glossary-accordion.open .accordion-content'\n    );\n    if (glossaryContent && glossaryContent.contains(event.target)) {\n      // Check if click is within the content area but not on the header\n      const header = document.querySelector(\n        '.ethics-glossary-accordion .accordion-header'\n      );\n      if (!header || !header.contains(event.target)) {\n        window.toggleEthicsGlossary();\n      }\n    }\n  });\n});\n\n/**\n * Fallback for script loading issues\n */\nwindow.addEventListener('error', event => {\n  AppDebug.error('Error occurred:', event.message);\n  alert(\n    'An error occurred while loading the application. Please try again later.'\n  );\n});\n\n// Initialize the application\nconst app = new AIEthicsApp();\n\n// Start the app when DOM is loaded\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', () => app.init());\n} else {\n  app.init();\n}\n\n// Make app globally available for inline event handlers\nwindow.app = app;\n\n// Export the class for ES6 modules\nexport default AIEthicsApp;\n","// Reusable Card Component\n// Usage: CardComponent.create({ header, content, actions })\n\nclass CardComponent {\n  /**\n   * Create a card element\n   * @param {Object} options\n   * @param {string|Node} options.header - Card header/title\n   * @param {string|Node} options.content - Card content/body\n   * @param {Array<{label: string, onClick: function, className?: string}>} [options.actions] - Action buttons\n   * @returns {HTMLElement}\n   */\n  static create({ header = '', content = '', actions = [] } = {}) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.tabIndex = 0;\n\n    // Header\n    if (header) {\n      const headerEl = document.createElement('div');\n      headerEl.className = 'card-header';\n      if (typeof header === 'string') {\n        headerEl.textContent = header;\n      } else {\n        headerEl.appendChild(header);\n      }\n      card.appendChild(headerEl);\n    }\n\n    // Content\n    if (content) {\n      const contentEl = document.createElement('div');\n      contentEl.className = 'card-content';\n      if (typeof content === 'string') {\n        contentEl.textContent = content;\n      } else {\n        contentEl.appendChild(content);\n      }\n      card.appendChild(contentEl);\n    }\n\n    // Actions\n    if (actions && actions.length) {\n      const actionsEl = document.createElement('div');\n      actionsEl.className = 'card-actions';\n      actions.forEach(action => {\n        const btn = document.createElement('button');\n        btn.className = `card-action-btn${action.className ? ` ${action.className}` : ''}`;\n        btn.type = 'button';\n        btn.textContent = action.label;\n        btn.addEventListener('click', action.onClick);\n        actionsEl.appendChild(btn);\n      });\n      card.appendChild(actionsEl);\n    }\n\n    return card;\n  }\n}\n\nwindow.CardComponent = CardComponent;\nexport default CardComponent;\n","// Loader/Spinner Web Component\nclass LoaderSpinner extends HTMLElement {\n  static get observedAttributes() {\n    return ['size', 'centered', 'hidden'];\n  }\n\n  constructor() {\n    super();\n    const shadow = this.attachShadow({ mode: 'open' });\n    const wrapper = document.createElement('span');\n    wrapper.className = 'loader-spinner';\n    if (this.hasAttribute('centered')) wrapper.classList.add('centered');\n    if (this.hasAttribute('hidden')) wrapper.setAttribute('hidden', '');\n    shadow.appendChild(wrapper);\n    const link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = 'src/styles/loader-spinner.css';\n    shadow.appendChild(link);\n    this._spinner = wrapper;\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === 'size') {\n      const size = newValue || '48px';\n      this._spinner.style.width = size;\n      this._spinner.style.height = size;\n    }\n    if (name === 'centered') {\n      this._spinner.classList.toggle('centered', this.hasAttribute('centered'));\n    }\n    if (name === 'hidden') {\n      if (this.hasAttribute('hidden')) {\n        this._spinner.setAttribute('hidden', '');\n      } else {\n        this._spinner.removeAttribute('hidden');\n      }\n    }\n  }\n}\n\ncustomElements.define('loader-spinner', LoaderSpinner);\n","// Modern Form/Input Web Components\nclass CustomInput extends HTMLElement {\n  constructor() {\n    super();\n    const shadow = this.attachShadow({ mode: 'open' });\n    const wrapper = document.createElement('div');\n    wrapper.className = 'form-group';\n    const label = document.createElement('label');\n    label.textContent = this.getAttribute('label') || '';\n    label.htmlFor = 'input';\n    const input = document.createElement('input');\n    input.type = this.getAttribute('type') || 'text';\n    input.className = 'custom-input';\n    input.id = 'input';\n    input.name = this.getAttribute('name') || '';\n    input.placeholder = this.getAttribute('placeholder') || '';\n    if (this.hasAttribute('value')) input.value = this.getAttribute('value');\n    if (this.hasAttribute('required')) input.required = true;\n    if (this.hasAttribute('disabled')) input.disabled = true;\n    wrapper.appendChild(label);\n    wrapper.appendChild(input);\n    const style = document.createElement('link');\n    style.rel = 'stylesheet';\n    style.href = 'src/styles/form-input-components.css';\n    shadow.appendChild(style);\n    shadow.appendChild(wrapper);\n  }\n}\n\nclass CustomButton extends HTMLElement {\n  constructor() {\n    super();\n    const shadow = this.attachShadow({ mode: 'open' });\n    const button = document.createElement('button');\n    button.className = 'custom-button';\n    button.type = this.getAttribute('type') || 'button';\n    button.textContent = this.getAttribute('label') || 'Submit';\n    if (this.hasAttribute('disabled')) button.disabled = true;\n    const style = document.createElement('link');\n    style.rel = 'stylesheet';\n    style.href = 'src/styles/form-input-components.css';\n    shadow.appendChild(style);\n    shadow.appendChild(button);\n  }\n}\n\ncustomElements.define('custom-input', CustomInput);\ncustomElements.define('custom-button', CustomButton);\n"],"file":"assets/main-BO5t0xpb.js"}